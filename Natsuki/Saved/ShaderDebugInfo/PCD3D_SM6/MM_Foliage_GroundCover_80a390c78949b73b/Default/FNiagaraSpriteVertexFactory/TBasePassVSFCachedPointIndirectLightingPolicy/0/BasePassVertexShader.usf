#line 1 "DumpShaderDefinesAsCommentedCode"
// #define __SHADER_TARGET_MAJOR 6

#line 2 "DumpShaderDefinesAsCommentedCode"
// #define __SHADER_TARGET_MINOR 6

#line 3 "DumpShaderDefinesAsCommentedCode"
// #define ALLOW_STATIC_LIGHTING 1

#line 4 "DumpShaderDefinesAsCommentedCode"
// #define AMPLIFICATIONSHADER 0

#line 5 "DumpShaderDefinesAsCommentedCode"
// #define BASEPASS_SKYATMOSPHERE_AERIALPERSPECTIVE 1

#line 6 "DumpShaderDefinesAsCommentedCode"
// #define CACHED_POINT_INDIRECT_LIGHTING 1

#line 7 "DumpShaderDefinesAsCommentedCode"
// #define CLEAR_COAT_BOTTOM_NORMAL 0

#line 8 "DumpShaderDefinesAsCommentedCode"
// #define COMPILE_SHADERS_FOR_DEVELOPMENT 1

#line 9 "DumpShaderDefinesAsCommentedCode"
// #define COMPILER_DEFINE #define

#line 10 "DumpShaderDefinesAsCommentedCode"
// #define COMPILER_DXC 1

#line 11 "DumpShaderDefinesAsCommentedCode"
// #define COMPUTESHADER 0

#line 12 "DumpShaderDefinesAsCommentedCode"
// #define DISTORTION_ACCOUNT_FOR_COVERAGE 0

#line 13 "DumpShaderDefinesAsCommentedCode"
// #define DO_CHECK 1

#line 14 "DumpShaderDefinesAsCommentedCode"
// #define DO_GUARD_SLOW 0

#line 15 "DumpShaderDefinesAsCommentedCode"
// #define DUAL_SOURCE_COLOR_BLENDING_ENABLED 0

#line 16 "DumpShaderDefinesAsCommentedCode"
// #define DXT5_NORMALMAPS 0

#line 17 "DumpShaderDefinesAsCommentedCode"
// #define EARLY_Z_PASS_ONLY_MATERIAL_MASKING 0

#line 18 "DumpShaderDefinesAsCommentedCode"
// #define FORWARD_SHADING 0

#line 19 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_HAS_DIFFUSE_SAMPLE_OCCLUSION 0

#line 20 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_HAS_VELOCITY 0

#line 21 "DumpShaderDefinesAsCommentedCode"
// #define GBUFFER_REFACTOR 1

#line 22 "DumpShaderDefinesAsCommentedCode"
// #define GENERATE_SPHERICAL_PARTICLE_NORMALS 0

#line 23 "DumpShaderDefinesAsCommentedCode"
// #define GEOMETRYSHADER 0

#line 24 "DumpShaderDefinesAsCommentedCode"
// #define HAS_INVERTED_Z_BUFFER 1

#line 25 "DumpShaderDefinesAsCommentedCode"
// #define HAS_PRIMITIVE_UNIFORM_BUFFER 1

#line 26 "DumpShaderDefinesAsCommentedCode"
// #define INSTANCED_STEREO 0

#line 27 "DumpShaderDefinesAsCommentedCode"
// #define INTERPOLATE_VERTEX_COLOR 0

#line 28 "DumpShaderDefinesAsCommentedCode"
// #define IRIS_NORMAL 0

#line 29 "DumpShaderDefinesAsCommentedCode"
// #define IS_MATERIAL_SHADER 1

#line 30 "DumpShaderDefinesAsCommentedCode"
// #define LEGACY_MATERIAL_ENERGYCONSERVATION 0

#line 31 "DumpShaderDefinesAsCommentedCode"
// #define LOCAL_LIGHT_DATA_STRIDE 6

#line 32 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ALLOW_NEGATIVE_EMISSIVECOLOR 0

#line 33 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_COMPUTE_FOG_PER_PIXEL 0

#line 34 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_CONTACT_SHADOWS 0

#line 35 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_DECAL_READ_MASK 7

#line 36 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_DITHER_OPACITY_MASK 0

#line 37 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_DOMAIN_SURFACE 1

#line 38 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ENABLE_TRANSLUCENCY_CLOUD_FOGGING 0

#line 39 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ENABLE_TRANSLUCENCY_FOGGING 1

#line 40 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_FORWARD_BLENDS_SKYLIGHT_CUBEMAPS 0

#line 41 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_FULLY_ROUGH 0

#line 42 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_HQ_FORWARD_REFLECTION_CAPTURES 0

#line 43 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_IS_SKY 0

#line 44 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_IS_STRATA 0

#line 45 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ISTHINSURFACE 0

#line 46 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_NONMETAL 1

#line 47 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_NORMAL_CURVATURE_TO_ROUGHNESS 0

#line 48 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_OUTPUT_OPACITY_AS_ALPHA 0

#line 49 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_PATH_TRACING_BUFFER_READ 0

#line 50 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_PLANAR_FORWARD_REFLECTIONS 0

#line 51 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_ROUGHDIFFUSE 0

#line 52 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SHADINGMODEL_TWOSIDED_FOLIAGE 1

#line 53 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SINGLE_SHADINGMODEL 1

#line 54 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SKY_ATMOSPHERE 0

#line 55 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_SSR 0

#line 56 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_TANGENTSPACENORMAL 1

#line 57 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_TWOSIDED 1

#line 58 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USE_ALPHA_TO_COVERAGE 0

#line 59 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USE_LM_DIRECTIONALITY 1

#line 60 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USE_PREINTEGRATED_GF 0

#line 61 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USES_ANISOTROPY 0

#line 62 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USES_DECAL_LOOKUP 0

#line 63 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_USES_SCENE_COLOR_COPY 0

#line 64 "DumpShaderDefinesAsCommentedCode"
// #define MATERIAL_VIRTUALTEXTURE_FEEDBACK 0

#line 65 "DumpShaderDefinesAsCommentedCode"
// #define MATERIALBLENDING_SOLID 1

#line 66 "DumpShaderDefinesAsCommentedCode"
// #define MATERIALDECALRESPONSEMASK 7

#line 67 "DumpShaderDefinesAsCommentedCode"
// #define MATERIALDOMAIN_SURFACE 1

#line 68 "DumpShaderDefinesAsCommentedCode"
// #define MAX_NUM_LIGHTMAP_COEF 2

#line 69 "DumpShaderDefinesAsCommentedCode"
// #define MESHSHADER 0

#line 70 "DumpShaderDefinesAsCommentedCode"
// #define MOBILE_HIGH_QUALITY_BRDF 0

#line 71 "DumpShaderDefinesAsCommentedCode"
// #define MOBILE_MULTI_VIEW 0

#line 72 "DumpShaderDefinesAsCommentedCode"
// #define MULTI_VIEW 0

#line 73 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_INSTANCE_LOCAL_TO_WORLD_PS 0

#line 74 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_INSTANCE_WORLD_TO_LOCAL_PS 0

#line 75 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_PARTICLE_COLOR 0

#line 76 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_PARTICLE_LOCAL_TO_WORLD 0

#line 77 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_PARTICLE_WORLD_TO_LOCAL 0

#line 78 "DumpShaderDefinesAsCommentedCode"
// #define NEEDS_WORLD_POSITION_EXCLUDING_SHADER_OFFSETS 1

#line 79 "DumpShaderDefinesAsCommentedCode"
// #define NIAGARA_PARTICLE_FACTORY 1

#line 80 "DumpShaderDefinesAsCommentedCode"
// #define NiagaraVFLooseParameters NiagaraSpriteVFLooseParameters

#line 81 "DumpShaderDefinesAsCommentedCode"
// #define NUM_CULLED_GRID_PRIMITIVE_TYPES 2

#line 82 "DumpShaderDefinesAsCommentedCode"
// #define NUM_CULLED_LIGHTS_GRID_STRIDE 2

#line 83 "DumpShaderDefinesAsCommentedCode"
// #define NUM_VIRTUALTEXTURE_SAMPLES 0

#line 84 "DumpShaderDefinesAsCommentedCode"
// #define PARTICLE_SPRITE_FACTORY 1

#line 85 "DumpShaderDefinesAsCommentedCode"
// #define PIXELSHADER 0

#line 86 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_ALLOW_SCENE_DATA_COMPRESSED_TRANSFORMS 1

#line 87 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_BINDLESS 0

#line 88 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_BUFFER_LOAD_TYPE_CONVERSION 1

#line 89 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_CLIP_DISTANCE 1

#line 90 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_DISTANCE_FIELDS 1

#line 91 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_MESH_SHADERS_TIER0 1

#line 92 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_MESH_SHADERS_TIER1 1

#line 93 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_PER_PIXEL_DBUFFER_MASK 0

#line 94 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_RENDERTARGET_WRITE_MASK 0

#line 95 "DumpShaderDefinesAsCommentedCode"
// #define PLATFORM_SUPPORTS_UB_STRUCT 1

#line 96 "DumpShaderDefinesAsCommentedCode"
// #define POST_PROCESS_ALPHA 0

#line 97 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_ALLOW_GLOBAL_CLIP_PLANE 0

#line 98 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_MOBILE_DISABLE_VERTEX_FOG 1

#line 99 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_OIT 0

#line 100 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_STRATA_BACKCOMPATIBILITY 0

#line 101 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORT_SKY_ATMOSPHERE 1

#line 102 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORT_SKY_ATMOSPHERE_AFFECTS_HEIGHFOG 1

#line 103 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_SUPPORTS_LUMEN 1

#line 104 "DumpShaderDefinesAsCommentedCode"
// #define PROJECT_VERTEX_FOGGING_FOR_OPAQUE 0

#line 105 "DumpShaderDefinesAsCommentedCode"
// #define RAY_TRACING_DYNAMIC_MESH_IN_WORLD_SPACE 1

#line 106 "DumpShaderDefinesAsCommentedCode"
// #define RAYCALLABLESHADER 0

#line 107 "DumpShaderDefinesAsCommentedCode"
// #define RAYGENSHADER 0

#line 108 "DumpShaderDefinesAsCommentedCode"
// #define RAYHITGROUPSHADER 0

#line 109 "DumpShaderDefinesAsCommentedCode"
// #define RAYMISSSHADER 0

#line 110 "DumpShaderDefinesAsCommentedCode"
// #define REFRACTION_ROOT_NODE_OVERRIDES_DEFAULT 0

#line 111 "DumpShaderDefinesAsCommentedCode"
// #define REFRACTION_USE_NONE 1

#line 112 "DumpShaderDefinesAsCommentedCode"
// #define SELECTIVE_BASEPASS_OUTPUTS 0

#line 113 "DumpShaderDefinesAsCommentedCode"
// #define SHADING_PATH_DEFERRED 1

#line 114 "DumpShaderDefinesAsCommentedCode"
// #define SM6_PROFILE 1

#line 115 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_ADVANCED_DEBUG_ENABLED 0

#line 116 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_ENABLED 0

#line 117 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_OPAQUE_ROUGH_REFRACTION_ENABLED 0

#line 118 "DumpShaderDefinesAsCommentedCode"
// #define STRATA_PREMULTIPLIED_ALPHA_OPACITY_OVERRIDEN 0

#line 119 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_CLOUD_SHADOW_ON_FORWARD_LIT_TRANSLUCENT 0

#line 120 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_CLOUD_SHADOW_ON_SINGLE_LAYER_WATER 0

#line 121 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_RECTLIGHT_ON_FORWARD_LIT_TRANSLUCENT 0

#line 122 "DumpShaderDefinesAsCommentedCode"
// #define SUPPORT_VSM_FOWARD_QUALITY 0

#line 123 "DumpShaderDefinesAsCommentedCode"
// #define TEXTURE_SAMPLE_DEBUG 0

#line 124 "DumpShaderDefinesAsCommentedCode"
// #define TRANSLUCENT_SHADOW_WITH_MASKED_OPACITY 0

#line 125 "DumpShaderDefinesAsCommentedCode"
// #define TRANSLUCENT_WRITING_FRONT_LAYER_TRANSPARENCY 0

#line 126 "DumpShaderDefinesAsCommentedCode"
// #define TRANSLUCENT_WRITING_VELOCITY 0

#line 127 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE 2097152.00f

#line 128 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_FMOD_2PI 0.673652053f

#line 129 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_FMOD_PI 0.673652053f

#line 130 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_RCP 4.76837158e-07f

#line 131 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_RSQRT 0.000690533954f

#line 132 "DumpShaderDefinesAsCommentedCode"
// #define UE_LWC_RENDER_TILE_SIZE_SQRT 1448.15466f

#line 133 "DumpShaderDefinesAsCommentedCode"
// #define USE_DBUFFER 1

#line 134 "DumpShaderDefinesAsCommentedCode"
// #define USE_DITHERED_LOD_TRANSITION_FROM_MATERIAL 0

#line 135 "DumpShaderDefinesAsCommentedCode"
// #define USE_STENCIL_LOD_DITHER_DEFAULT 0

#line 136 "DumpShaderDefinesAsCommentedCode"
// #define USES_DISPLACEMENT 0

#line 137 "DumpShaderDefinesAsCommentedCode"
// #define USES_DISTORTION 0

#line 138 "DumpShaderDefinesAsCommentedCode"
// #define USES_EMISSIVE_COLOR 1

#line 139 "DumpShaderDefinesAsCommentedCode"
// #define USES_PER_INSTANCE_CUSTOM_DATA 0

#line 140 "DumpShaderDefinesAsCommentedCode"
// #define USES_PER_INSTANCE_RANDOM 0

#line 141 "DumpShaderDefinesAsCommentedCode"
// #define USES_TRANSFORM_VECTOR 1

#line 142 "DumpShaderDefinesAsCommentedCode"
// #define USES_VERTEX_INTERPOLATOR 0

#line 143 "DumpShaderDefinesAsCommentedCode"
// #define USES_WORLD_POSITION_OFFSET 1

#line 144 "DumpShaderDefinesAsCommentedCode"
// #define VELOCITY_ENCODE_DEPTH 1

#line 145 "DumpShaderDefinesAsCommentedCode"
// #define VERTEXSHADER 1

#line 146 "DumpShaderDefinesAsCommentedCode"
// #define VIRTUAL_TEXTURE_ANISOTROPIC_FILTERING 0

#line 147 "DumpShaderDefinesAsCommentedCode"
// #define WANT_PIXEL_DEPTH_OFFSET 0

#line 148 "DumpShaderDefinesAsCommentedCode"
// #define WORKING_COLOR_SPACE_IS_SRGB 1

#line 15 "/Engine/Public/Platform/D3D/D3DCommon.ush"
precise float MakePrecise(float v) { precise float pv = v; return pv; }

#line 16 "/Engine/Public/Platform/D3D/D3DCommon.ush"
precise float2 MakePrecise(float2 v) { precise float2 pv = v; return pv; }

#line 17 "/Engine/Public/Platform/D3D/D3DCommon.ush"
precise float3 MakePrecise(float3 v) { precise float3 pv = v; return pv; }

#line 18 "/Engine/Public/Platform/D3D/D3DCommon.ush"
precise float4 MakePrecise(float4 v) { precise float4 pv = v; return pv; }

#line 1027 "/Engine/Public/Platform.ush"
float  CondMask(bool Cond, float  Src0, float  Src1) { return Cond ? Src0 : Src1; }

#line 1028 "/Engine/Public/Platform.ush"
float2 CondMask(bool Cond, float2 Src0, float2 Src1) { return Cond ? Src0 : Src1; }

#line 1029 "/Engine/Public/Platform.ush"
float3 CondMask(bool Cond, float3 Src0, float3 Src1) { return Cond ? Src0 : Src1; }

#line 1030 "/Engine/Public/Platform.ush"
float4 CondMask(bool Cond, float4 Src0, float4 Src1) { return Cond ? Src0 : Src1; }

#line 1032 "/Engine/Public/Platform.ush"
int  CondMask(bool Cond, int  Src0, int  Src1) { return Cond ? Src0 : Src1; }

#line 1033 "/Engine/Public/Platform.ush"
int2 CondMask(bool Cond, int2 Src0, int2 Src1) { return Cond ? Src0 : Src1; }

#line 1034 "/Engine/Public/Platform.ush"
int3 CondMask(bool Cond, int3 Src0, int3 Src1) { return Cond ? Src0 : Src1; }

#line 1035 "/Engine/Public/Platform.ush"
int4 CondMask(bool Cond, int4 Src0, int4 Src1) { return Cond ? Src0 : Src1; }

#line 1037 "/Engine/Public/Platform.ush"
uint  CondMask(bool Cond, uint  Src0, uint  Src1) { return Cond ? Src0 : Src1; }

#line 1038 "/Engine/Public/Platform.ush"
uint2 CondMask(bool Cond, uint2 Src0, uint2 Src1) { return Cond ? Src0 : Src1; }

#line 1039 "/Engine/Public/Platform.ush"
uint3 CondMask(bool Cond, uint3 Src0, uint3 Src1) { return Cond ? Src0 : Src1; }

#line 1040 "/Engine/Public/Platform.ush"
uint4 CondMask(bool Cond, uint4 Src0, uint4 Src1) { return Cond ? Src0 : Src1; }

#line 116 "/Engine/Private/Common.ush"
const static float PI = 3.1415926535897932f;

#line 5 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCScalar
{
	float Tile;
	float Offset;
};

#line 11 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCVector2
{
	float2 Tile;
	float2 Offset;
};

#line 17 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCVector3
{
	float3 Tile;
	float3 Offset;
};

#line 23 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCVector4
{
	float4 Tile;
	float4 Offset;
};

#line 58 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCMatrix
{
	float4x4 M;
	float3 Tile; 
};

#line 65 "/Engine/Private/LargeWorldCoordinates.ush"
struct FLWCInverseMatrix
{
	float4x4 M;
	float3 Tile; 
	int Dummy; 
};

#line 75 "/Engine/Private/LargeWorldCoordinates.ush"
float LWCGetTileOffset(FLWCScalar V) { return  (( V ).Tile) * 2097152.00f; }

#line 76 "/Engine/Private/LargeWorldCoordinates.ush"
float2 LWCGetTileOffset(FLWCVector2 V) { return  (( V ).Tile) * 2097152.00f; }

#line 77 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCGetTileOffset(FLWCVector3 V) { return  (( V ).Tile) * 2097152.00f; }

#line 78 "/Engine/Private/LargeWorldCoordinates.ush"
float4 LWCGetTileOffset(FLWCVector4 V) { return  (( V ).Tile) * 2097152.00f; }

#line 79 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCGetTileOffset(FLWCMatrix V) { return  (( V ).Tile) * 2097152.00f; }

#line 80 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCGetTileOffset(FLWCInverseMatrix V) { return  (( V ).Tile) * 2097152.00f; }

#line 82 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 Make4x3Matrix(float4x4 M)
{
	
	float4x4 Result;
	Result[0] = float4(M[0].xyz, 0.0f);
	Result[1] = float4(M[1].xyz, 0.0f);
	Result[2] = float4(M[2].xyz, 0.0f);
	Result[3] = float4(M[3].xyz, 1.0f);
	return Result;
}

#line 93 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 MakeTranslationMatrix(float3 Offset)
{
	float4x4 Result;
	Result[0] = float4(1.0f, 0.0f, 0.0f, 0.0f);
	Result[1] = float4(0.0f, 1.0f, 0.0f, 0.0f);
	Result[2] = float4(0.0f, 0.0f, 1.0f, 0.0f);
	Result[3] = float4(Offset, 1.0f);
	return Result;
}

#line 103 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar MakeLWCScalar(float Tile, float Offset)
{
	FLWCScalar Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 111 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector2 MakeLWCVector2(float2 Tile, float2 Offset)
{
	FLWCVector2 Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 119 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 MakeLWCVector3(float3 Tile, float3 Offset)
{
	FLWCVector3 Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 127 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector4(float4 Tile, float4 Offset)
{
	FLWCVector4 Result;
	 ( Result ).Tile = ( Tile );
	Result.Offset = Offset;
	return Result;
}

#line 135 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector4(float3 Tile, float4 Offset)
{
	return MakeLWCVector4(float4(Tile, 0), Offset);
}

#line 140 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector4(FLWCVector3 XYZ, float W)
{
	return MakeLWCVector4( (( XYZ ).Tile), float4(XYZ.Offset, W));
}

#line 145 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar MakeLWCVector(FLWCScalar X) { return X; }

#line 147 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector2 MakeLWCVector(FLWCScalar X, FLWCScalar Y) { return MakeLWCVector2(float2( (( X ).Tile),  (( Y ).Tile)), float2(X.Offset, Y.Offset)); }

#line 149 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 MakeLWCVector(FLWCScalar X, FLWCScalar Y, FLWCScalar Z) { return MakeLWCVector3(float3( (( X ).Tile),  (( Y ).Tile),  (( Z ).Tile)), float3(X.Offset, Y.Offset, Z.Offset)); }

#line 150 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 MakeLWCVector(FLWCScalar X, FLWCVector2 YZ) { return MakeLWCVector3(float3( (( X ).Tile),  (( YZ ).Tile)), float3(X.Offset, YZ.Offset)); }

#line 151 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 MakeLWCVector(FLWCVector2 XY, FLWCScalar Z) { return MakeLWCVector3(float3( (( XY ).Tile),  (( Z ).Tile)), float3(XY.Offset, Z.Offset)); }

#line 153 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector(FLWCScalar X, FLWCScalar Y, FLWCScalar Z, FLWCScalar W) { return MakeLWCVector4(float4( (( X ).Tile),  (( Y ).Tile),  (( Z ).Tile),  (( W ).Tile)), float4(X.Offset, Y.Offset, Z.Offset, W.Offset)); }

#line 154 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector(FLWCScalar X, FLWCScalar Y, FLWCVector2 ZW) { return MakeLWCVector4(float4( (( X ).Tile),  (( Y ).Tile),  (( ZW ).Tile)), float4(X.Offset, Y.Offset, ZW.Offset)); }

#line 155 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector(FLWCScalar X, FLWCVector2 YZ, FLWCScalar W) { return MakeLWCVector4(float4( (( X ).Tile),  (( YZ ).Tile),  (( W ).Tile)), float4(X.Offset, YZ.Offset, W.Offset)); }

#line 156 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector(FLWCVector2 XY, FLWCScalar Z, FLWCScalar W) { return MakeLWCVector4(float4( (( XY ).Tile),  (( Z ).Tile),  (( W ).Tile)), float4(XY.Offset, Z.Offset, W.Offset)); }

#line 157 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector(FLWCVector2 XY, FLWCVector2 ZW) { return MakeLWCVector4(float4( (( XY ).Tile),  (( ZW ).Tile)), float4(XY.Offset, ZW.Offset)); }

#line 158 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector(FLWCScalar X, FLWCVector3 YZW) { return MakeLWCVector4(float4( (( X ).Tile),  (( YZW ).Tile)), float4(X.Offset, YZW.Offset)); }

#line 159 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 MakeLWCVector(FLWCVector3 XYZ, FLWCScalar W) { return MakeLWCVector4(float4( (( XYZ ).Tile),  (( W ).Tile)), float4(XYZ.Offset, W.Offset)); }

#line 161 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCMatrix MakeLWCMatrix(float3 Tile, float4x4 InMatrix)
{
	FLWCMatrix Result;
	 ( Result ).Tile = ( Tile );
	Result.M = InMatrix;
	return Result;
}

#line 169 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCMatrix MakeLWCMatrix4x3(float3 Tile, float4x4 InMatrix)
{
	FLWCMatrix Result;
	 ( Result ).Tile = ( Tile );
	Result.M = Make4x3Matrix(InMatrix);
	return Result;
}

#line 177 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCInverseMatrix MakeLWCInverseMatrix(float3 Tile, float4x4 InMatrix)
{
	FLWCInverseMatrix Result;
	 ( Result ).Tile = ( -Tile );
	Result.M = InMatrix;
	Result.Dummy = 0;
	return Result;
}

#line 186 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCInverseMatrix MakeLWCInverseMatrix4x3(float3 Tile, float4x4 InMatrix)
{
	FLWCInverseMatrix Result;
	 ( Result ).Tile = ( -Tile );
	Result.M = Make4x3Matrix(InMatrix);
	Result.Dummy = 0;
	return Result;
}

#line 197 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar LWCGetComponent(FLWCScalar V, int C) { return V; }

#line 198 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar LWCGetComponent(FLWCVector2 V, int C) { return MakeLWCScalar( (( V ).Tile)[C], V.Offset[C]); }

#line 199 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar LWCGetComponent(FLWCVector3 V, int C) { return MakeLWCScalar( (( V ).Tile)[C], V.Offset[C]); }

#line 200 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar LWCGetComponent(FLWCVector4 V, int C) { return MakeLWCScalar( (( V ).Tile)[C], V.Offset[C]); }

#line 227 "/Engine/Private/LargeWorldCoordinates.ush"
float LWCToFloat(FLWCScalar Value)   { return LWCGetTileOffset(Value) + Value.Offset; }

#line 228 "/Engine/Private/LargeWorldCoordinates.ush"
float2 LWCToFloat(FLWCVector2 Value) { return LWCGetTileOffset(Value) + Value.Offset; }

#line 229 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCToFloat(FLWCVector3 Value) { return LWCGetTileOffset(Value) + Value.Offset; }

#line 230 "/Engine/Private/LargeWorldCoordinates.ush"
float4 LWCToFloat(FLWCVector4 Value) { return LWCGetTileOffset(Value) + Value.Offset; }

#line 232 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 LWCToFloat(FLWCMatrix Value)
{
	float4x4 Result = Value.M;
	Result[3].xyz = LWCGetTileOffset(Value) + Result[3].xyz;
	return Result;
}

#line 239 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 LWCToFloat(FLWCInverseMatrix Value)
{
	float4x4 TileOffset = MakeTranslationMatrix(LWCGetTileOffset(Value));
	return mul(TileOffset, Value.M);
}

#line 245 "/Engine/Private/LargeWorldCoordinates.ush"
float3x3 LWCToFloat3x3(FLWCMatrix Value)
{
	return (float3x3)Value.M;
}

#line 250 "/Engine/Private/LargeWorldCoordinates.ush"
float3x3 LWCToFloat3x3(FLWCInverseMatrix Value)
{
	return (float3x3)Value.M;
}

#line 256 "/Engine/Private/LargeWorldCoordinates.ush"
float LWCToFloat(float Value) { return Value; }

#line 257 "/Engine/Private/LargeWorldCoordinates.ush"
float2 LWCToFloat(float2 Value) { return Value; }

#line 258 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCToFloat(float3 Value) { return Value; }

#line 259 "/Engine/Private/LargeWorldCoordinates.ush"
float4 LWCToFloat(float4 Value) { return Value; }

#line 260 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 LWCToFloat(float4x4 Value) { return Value; }

#line 263 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar LWCPromote(FLWCScalar Value) { return Value; }

#line 264 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector2 LWCPromote(FLWCVector2 Value) { return Value; }

#line 265 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 LWCPromote(FLWCVector3 Value) { return Value; }

#line 266 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 LWCPromote(FLWCVector4 Value) { return Value; }

#line 267 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCMatrix LWCPromote(FLWCMatrix Value) { return Value; }

#line 268 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCInverseMatrix LWCPromote(FLWCInverseMatrix Value) { return Value; }

#line 270 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCScalar LWCPromote(float Value) { return MakeLWCScalar(0, Value); }

#line 271 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector2 LWCPromote(float2 Value) { return MakeLWCVector2((float2)0, Value); }

#line 272 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 LWCPromote(float3 Value) { return MakeLWCVector3((float3)0, Value); }

#line 273 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 LWCPromote(float4 Value) { return MakeLWCVector4((float4)0, Value); }

#line 274 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCMatrix LWCPromote(float4x4 Value) { return MakeLWCMatrix((float3)0, Value); }

#line 277 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector3 LWCMultiply(float3 Position, FLWCMatrix InMatrix)
{
	
	float3 Offset = (Position.xxx * InMatrix.M[0].xyz + Position.yyy * InMatrix.M[1].xyz + Position.zzz * InMatrix.M[2].xyz) + InMatrix.M[3].xyz;
	return MakeLWCVector3( (( InMatrix ).Tile), Offset);
}

#line 284 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCVector4 LWCMultiply(float4 Position, FLWCMatrix InMatrix)
{
	float4 Offset = mul(Position, InMatrix.M);
	return MakeLWCVector4( (( InMatrix ).Tile), Offset);
}

#line 290 "/Engine/Private/LargeWorldCoordinates.ush"
float3 LWCMultiply(FLWCVector3 Position, FLWCInverseMatrix InMatrix)
{
	float3 LocalPosition = LWCToFloat(MakeLWCVector3( (( Position ).Tile) +  (( InMatrix ).Tile), Position.Offset));
	return (LocalPosition.xxx * InMatrix.M[0].xyz + LocalPosition.yyy * InMatrix.M[1].xyz + LocalPosition.zzz * InMatrix.M[2].xyz) + InMatrix.M[3].xyz;
}

#line 296 "/Engine/Private/LargeWorldCoordinates.ush"
float4 LWCMultiply(FLWCVector4 Position, FLWCInverseMatrix InMatrix)
{
	float4 LocalPosition = LWCToFloat(MakeLWCVector4( (( Position ).Tile) + float4( (( InMatrix ).Tile), 0), Position.Offset));
	return mul(LocalPosition, InMatrix.M);
}

#line 312 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCMatrix LWCMultiply(float4x4 Lhs, FLWCMatrix Rhs)
{
	float4x4 ResultMatrix = mul(Lhs, Rhs.M);
	return MakeLWCMatrix( (( Rhs ).Tile), ResultMatrix);
}

#line 318 "/Engine/Private/LargeWorldCoordinates.ush"
FLWCInverseMatrix LWCMultiply(FLWCInverseMatrix Lhs, float4x4 Rhs)
{
	float4x4 ResultMatrix = mul(Lhs.M, Rhs);
	return MakeLWCInverseMatrix(- (( Lhs ).Tile), ResultMatrix);
}

#line 324 "/Engine/Private/LargeWorldCoordinates.ush"
float4x4 LWCMultiply(FLWCMatrix Lhs, FLWCInverseMatrix Rhs)
{
	
	float4x4 Result = Lhs.M;
	Result = mul(Result, MakeTranslationMatrix(( (( Lhs ).Tile) +  (( Rhs ).Tile)) * 2097152.00f));
	Result = mul(Result, Rhs.M);
	return Result;
}

#line 12 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCMakeIntTile(FLWCScalar V)
{
	float IntTile = floor(V.Tile);
	return MakeLWCScalar(IntTile, (V.Tile - IntTile) * 2097152.00f + V.Offset);
}

#line 20 "/Engine/Private/LWCOperations.ush"
float LWCRcpUnscaled(FLWCScalar V) { return rcp(V.Offset * 4.76837158e-07f +  (( V ).Tile)); }

#line 23 "/Engine/Private/LWCOperations.ush"
float LWCRcpScaled(FLWCScalar V, float Scale) { return LWCRcpUnscaled(V) * Scale; }

#line 26 "/Engine/Private/LWCOperations.ush"
float LWCRcp(FLWCScalar V) { return LWCRcpScaled(V, 4.76837158e-07f); }

#line 52 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCAdd(FLWCScalar Lhs, FLWCScalar Rhs) { return MakeLWCScalar( (( Lhs ).Tile) +  (( Rhs ).Tile), Lhs.Offset + Rhs.Offset); }

#line 53 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCAdd(float Lhs, FLWCScalar Rhs) { return MakeLWCScalar( (( Rhs ).Tile), Lhs + Rhs.Offset); }

#line 54 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCAdd(FLWCScalar Lhs, float Rhs) { return MakeLWCScalar( (( Lhs ).Tile), Lhs.Offset + Rhs); }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCSubtract(FLWCScalar Lhs, FLWCScalar Rhs) { return MakeLWCScalar( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCSubtract(float Lhs, FLWCScalar Rhs) { return MakeLWCScalar(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCSubtract(FLWCScalar Lhs, float Rhs) { return MakeLWCScalar( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 97 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCFloor(FLWCScalar V) { FLWCScalar VN = LWCMakeIntTile(V); return MakeLWCScalar( (( VN ).Tile), floor(VN.Offset)); }

#line 107 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCMultiply(FLWCScalar Lhs, FLWCScalar Rhs)
{
	return MakeLWCScalar( (( Lhs ).Tile) * ( (( Rhs ).Tile) * 2097152.00f + Rhs.Offset) +  (( Rhs ).Tile) * Lhs.Offset, Lhs.Offset * Rhs.Offset);
}

#line 111 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCMultiply(float Lhs, FLWCScalar Rhs) { return MakeLWCScalar( (( Rhs ).Tile) * Lhs, Lhs * Rhs.Offset); }

#line 112 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCMultiply(FLWCScalar Lhs, float Rhs) { return MakeLWCScalar( (( Lhs ).Tile) * Rhs, Lhs.Offset * Rhs); }

#line 114 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCDivide(FLWCScalar Lhs, FLWCScalar Rhs) { return LWCMultiply(Lhs, LWCRcp(Rhs)); }

#line 115 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCDivide(FLWCScalar Lhs, float Rhs) { return LWCMultiply(Lhs, rcp(Rhs)); }

#line 116 "/Engine/Private/LWCOperations.ush"
FLWCScalar LWCDivide(float Lhs, FLWCScalar Rhs) { return MakeLWCScalar((float)0, Lhs * LWCRcp(Rhs)); }

#line 130 "/Engine/Private/LWCOperations.ush"
float LWCFmodFloor(FLWCScalar Lhs, float Rhs)
{
	return LWCToFloat(LWCSubtract(Lhs, LWCMultiply(LWCFloor(LWCDivide(Lhs, Rhs)), Rhs)));
	
	
}

#line 141 "/Engine/Private/LWCOperations.ush"
float LWCFmodFloor2PI(FLWCScalar V)
{
	return LWCFmodFloor(V, 2.0f * PI);
	
}

#line 147 "/Engine/Private/LWCOperations.ush"
float LWCSin(FLWCScalar V) { return sin(LWCFmodFloor2PI(V)); }

#line 12 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCMakeIntTile(FLWCVector2 V)
{
	float2 IntTile = floor(V.Tile);
	return MakeLWCVector2(IntTile, (V.Tile - IntTile) * 2097152.00f + V.Offset);
}

#line 20 "/Engine/Private/LWCOperations.ush"
float2 LWCRcpUnscaled(FLWCVector2 V) { return rcp(V.Offset * 4.76837158e-07f +  (( V ).Tile)); }

#line 23 "/Engine/Private/LWCOperations.ush"
float2 LWCRcpScaled(FLWCVector2 V, float Scale) { return LWCRcpUnscaled(V) * Scale; }

#line 26 "/Engine/Private/LWCOperations.ush"
float2 LWCRcp(FLWCVector2 V) { return LWCRcpScaled(V, 4.76837158e-07f); }

#line 52 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCAdd(FLWCVector2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2( (( Lhs ).Tile) +  (( Rhs ).Tile), Lhs.Offset + Rhs.Offset); }

#line 53 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCAdd(float2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2( (( Rhs ).Tile), Lhs + Rhs.Offset); }

#line 54 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCAdd(FLWCVector2 Lhs, float2 Rhs) { return MakeLWCVector2( (( Lhs ).Tile), Lhs.Offset + Rhs); }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCSubtract(FLWCVector2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCSubtract(float2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCSubtract(FLWCVector2 Lhs, float2 Rhs) { return MakeLWCVector2( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 97 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCFloor(FLWCVector2 V) { FLWCVector2 VN = LWCMakeIntTile(V); return MakeLWCVector2( (( VN ).Tile), floor(VN.Offset)); }

#line 107 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCMultiply(FLWCVector2 Lhs, FLWCVector2 Rhs)
{
	return MakeLWCVector2( (( Lhs ).Tile) * ( (( Rhs ).Tile) * 2097152.00f + Rhs.Offset) +  (( Rhs ).Tile) * Lhs.Offset, Lhs.Offset * Rhs.Offset);
}

#line 111 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCMultiply(float2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2( (( Rhs ).Tile) * Lhs, Lhs * Rhs.Offset); }

#line 112 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCMultiply(FLWCVector2 Lhs, float2 Rhs) { return MakeLWCVector2( (( Lhs ).Tile) * Rhs, Lhs.Offset * Rhs); }

#line 114 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCDivide(FLWCVector2 Lhs, FLWCVector2 Rhs) { return LWCMultiply(Lhs, LWCRcp(Rhs)); }

#line 115 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCDivide(FLWCVector2 Lhs, float2 Rhs) { return LWCMultiply(Lhs, rcp(Rhs)); }

#line 116 "/Engine/Private/LWCOperations.ush"
FLWCVector2 LWCDivide(float2 Lhs, FLWCVector2 Rhs) { return MakeLWCVector2((float2)0, Lhs * LWCRcp(Rhs)); }

#line 130 "/Engine/Private/LWCOperations.ush"
float2 LWCFmodFloor(FLWCVector2 Lhs, float2 Rhs)
{
	return LWCToFloat(LWCSubtract(Lhs, LWCMultiply(LWCFloor(LWCDivide(Lhs, Rhs)), Rhs)));
	
	
}

#line 141 "/Engine/Private/LWCOperations.ush"
float2 LWCFmodFloor2PI(FLWCVector2 V)
{
	return LWCFmodFloor(V, 2.0f * PI);
	
}

#line 147 "/Engine/Private/LWCOperations.ush"
float2 LWCSin(FLWCVector2 V) { return sin(LWCFmodFloor2PI(V)); }

#line 12 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCMakeIntTile(FLWCVector3 V)
{
	float3 IntTile = floor(V.Tile);
	return MakeLWCVector3(IntTile, (V.Tile - IntTile) * 2097152.00f + V.Offset);
}

#line 20 "/Engine/Private/LWCOperations.ush"
float3 LWCRcpUnscaled(FLWCVector3 V) { return rcp(V.Offset * 4.76837158e-07f +  (( V ).Tile)); }

#line 23 "/Engine/Private/LWCOperations.ush"
float3 LWCRcpScaled(FLWCVector3 V, float Scale) { return LWCRcpUnscaled(V) * Scale; }

#line 26 "/Engine/Private/LWCOperations.ush"
float3 LWCRcp(FLWCVector3 V) { return LWCRcpScaled(V, 4.76837158e-07f); }

#line 52 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCAdd(FLWCVector3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3( (( Lhs ).Tile) +  (( Rhs ).Tile), Lhs.Offset + Rhs.Offset); }

#line 53 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCAdd(float3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3( (( Rhs ).Tile), Lhs + Rhs.Offset); }

#line 54 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCAdd(FLWCVector3 Lhs, float3 Rhs) { return MakeLWCVector3( (( Lhs ).Tile), Lhs.Offset + Rhs); }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCSubtract(FLWCVector3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCSubtract(float3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCSubtract(FLWCVector3 Lhs, float3 Rhs) { return MakeLWCVector3( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 97 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCFloor(FLWCVector3 V) { FLWCVector3 VN = LWCMakeIntTile(V); return MakeLWCVector3( (( VN ).Tile), floor(VN.Offset)); }

#line 107 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCMultiply(FLWCVector3 Lhs, FLWCVector3 Rhs)
{
	return MakeLWCVector3( (( Lhs ).Tile) * ( (( Rhs ).Tile) * 2097152.00f + Rhs.Offset) +  (( Rhs ).Tile) * Lhs.Offset, Lhs.Offset * Rhs.Offset);
}

#line 111 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCMultiply(float3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3( (( Rhs ).Tile) * Lhs, Lhs * Rhs.Offset); }

#line 112 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCMultiply(FLWCVector3 Lhs, float3 Rhs) { return MakeLWCVector3( (( Lhs ).Tile) * Rhs, Lhs.Offset * Rhs); }

#line 114 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCDivide(FLWCVector3 Lhs, FLWCVector3 Rhs) { return LWCMultiply(Lhs, LWCRcp(Rhs)); }

#line 115 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCDivide(FLWCVector3 Lhs, float3 Rhs) { return LWCMultiply(Lhs, rcp(Rhs)); }

#line 116 "/Engine/Private/LWCOperations.ush"
FLWCVector3 LWCDivide(float3 Lhs, FLWCVector3 Rhs) { return MakeLWCVector3((float3)0, Lhs * LWCRcp(Rhs)); }

#line 130 "/Engine/Private/LWCOperations.ush"
float3 LWCFmodFloor(FLWCVector3 Lhs, float3 Rhs)
{
	return LWCToFloat(LWCSubtract(Lhs, LWCMultiply(LWCFloor(LWCDivide(Lhs, Rhs)), Rhs)));
	
	
}

#line 141 "/Engine/Private/LWCOperations.ush"
float3 LWCFmodFloor2PI(FLWCVector3 V)
{
	return LWCFmodFloor(V, 2.0f * PI);
	
}

#line 147 "/Engine/Private/LWCOperations.ush"
float3 LWCSin(FLWCVector3 V) { return sin(LWCFmodFloor2PI(V)); }

#line 12 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCMakeIntTile(FLWCVector4 V)
{
	float4 IntTile = floor(V.Tile);
	return MakeLWCVector4(IntTile, (V.Tile - IntTile) * 2097152.00f + V.Offset);
}

#line 20 "/Engine/Private/LWCOperations.ush"
float4 LWCRcpUnscaled(FLWCVector4 V) { return rcp(V.Offset * 4.76837158e-07f +  (( V ).Tile)); }

#line 23 "/Engine/Private/LWCOperations.ush"
float4 LWCRcpScaled(FLWCVector4 V, float Scale) { return LWCRcpUnscaled(V) * Scale; }

#line 26 "/Engine/Private/LWCOperations.ush"
float4 LWCRcp(FLWCVector4 V) { return LWCRcpScaled(V, 4.76837158e-07f); }

#line 52 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCAdd(FLWCVector4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4( (( Lhs ).Tile) +  (( Rhs ).Tile), Lhs.Offset + Rhs.Offset); }

#line 53 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCAdd(float4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4( (( Rhs ).Tile), Lhs + Rhs.Offset); }

#line 54 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCAdd(FLWCVector4 Lhs, float4 Rhs) { return MakeLWCVector4( (( Lhs ).Tile), Lhs.Offset + Rhs); }

#line 56 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCSubtract(FLWCVector4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4( (( Lhs ).Tile) -  (( Rhs ).Tile), Lhs.Offset - Rhs.Offset); }

#line 57 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCSubtract(float4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4(- (( Rhs ).Tile), Lhs - Rhs.Offset); }

#line 58 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCSubtract(FLWCVector4 Lhs, float4 Rhs) { return MakeLWCVector4( (( Lhs ).Tile), Lhs.Offset - Rhs); }

#line 97 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCFloor(FLWCVector4 V) { FLWCVector4 VN = LWCMakeIntTile(V); return MakeLWCVector4( (( VN ).Tile), floor(VN.Offset)); }

#line 107 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCMultiply(FLWCVector4 Lhs, FLWCVector4 Rhs)
{
	return MakeLWCVector4( (( Lhs ).Tile) * ( (( Rhs ).Tile) * 2097152.00f + Rhs.Offset) +  (( Rhs ).Tile) * Lhs.Offset, Lhs.Offset * Rhs.Offset);
}

#line 111 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCMultiply(float4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4( (( Rhs ).Tile) * Lhs, Lhs * Rhs.Offset); }

#line 112 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCMultiply(FLWCVector4 Lhs, float4 Rhs) { return MakeLWCVector4( (( Lhs ).Tile) * Rhs, Lhs.Offset * Rhs); }

#line 114 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCDivide(FLWCVector4 Lhs, FLWCVector4 Rhs) { return LWCMultiply(Lhs, LWCRcp(Rhs)); }

#line 115 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCDivide(FLWCVector4 Lhs, float4 Rhs) { return LWCMultiply(Lhs, rcp(Rhs)); }

#line 116 "/Engine/Private/LWCOperations.ush"
FLWCVector4 LWCDivide(float4 Lhs, FLWCVector4 Rhs) { return MakeLWCVector4((float4)0, Lhs * LWCRcp(Rhs)); }

#line 130 "/Engine/Private/LWCOperations.ush"
float4 LWCFmodFloor(FLWCVector4 Lhs, float4 Rhs)
{
	return LWCToFloat(LWCSubtract(Lhs, LWCMultiply(LWCFloor(LWCDivide(Lhs, Rhs)), Rhs)));
	
	
}

#line 141 "/Engine/Private/LWCOperations.ush"
float4 LWCFmodFloor2PI(FLWCVector4 V)
{
	return LWCFmodFloor(V, 2.0f * PI);
	
}

#line 147 "/Engine/Private/LWCOperations.ush"
float4 LWCSin(FLWCVector4 V) { return sin(LWCFmodFloor2PI(V)); }

#line 3 "/Engine/Generated/UniformBuffers/View.ush"
cbuffer  UniformBufferConstants_View 
{
	 float4x4  View_TranslatedWorldToClip;
	 float4x4  View_RelativeWorldToClip;
	 float4x4  View_ClipToRelativeWorld;
	 float4x4  View_TranslatedWorldToView;
	 float4x4  View_ViewToTranslatedWorld;
	 float4x4  View_TranslatedWorldToCameraView;
	 float4x4  View_CameraViewToTranslatedWorld;
	 float4x4  View_ViewToClip;
	 float4x4  View_ViewToClipNoAA;
	 float4x4  View_ClipToView;
	 float4x4  View_ClipToTranslatedWorld;
	 float4x4  View_SVPositionToTranslatedWorld;
	 float4x4  View_ScreenToRelativeWorld;
	 float4x4  View_ScreenToTranslatedWorld;
	 float4x4  View_MobileMultiviewShadowTransform;
	 float3  View_ViewTilePosition;
	 float  PrePadding_View_972;
	 float3  View_MatrixTilePosition;
	 float  PrePadding_View_988;
	 float3  View_ViewForward;
	 float  PrePadding_View_1004;
	 float3  View_ViewUp;
	 float  PrePadding_View_1020;
	 float3  View_ViewRight;
	 float  PrePadding_View_1036;
	 float3  View_HMDViewNoRollUp;
	 float  PrePadding_View_1052;
	 float3  View_HMDViewNoRollRight;
	 float  PrePadding_View_1068;
	 float4  View_InvDeviceZToWorldZTransform;
	 float4  View_ScreenPositionScaleBias;
	 float3  View_RelativeWorldCameraOrigin;
	 float  PrePadding_View_1116;
	 float3  View_TranslatedWorldCameraOrigin;
	 float  PrePadding_View_1132;
	 float3  View_RelativeWorldViewOrigin;
	 float  PrePadding_View_1148;
	 float3  View_RelativePreViewTranslation;
	 float  PrePadding_View_1164;
	 float4x4  View_PrevViewToClip;
	 float4x4  View_PrevClipToView;
	 float4x4  View_PrevTranslatedWorldToClip;
	 float4x4  View_PrevTranslatedWorldToView;
	 float4x4  View_PrevViewToTranslatedWorld;
	 float4x4  View_PrevTranslatedWorldToCameraView;
	 float4x4  View_PrevCameraViewToTranslatedWorld;
	 float3  View_PrevTranslatedWorldCameraOrigin;
	 float  PrePadding_View_1628;
	 float3  View_PrevRelativeWorldCameraOrigin;
	 float  PrePadding_View_1644;
	 float3  View_PrevRelativeWorldViewOrigin;
	 float  PrePadding_View_1660;
	 float3  View_RelativePrevPreViewTranslation;
	 float  PrePadding_View_1676;
	 float4x4  View_PrevClipToRelativeWorld;
	 float4x4  View_PrevScreenToTranslatedWorld;
	 float4x4  View_ClipToPrevClip;
	 float4x4  View_ClipToPrevClipWithAA;
	 float4  View_TemporalAAJitter;
	 float4  View_GlobalClippingPlane;
	 float2  View_FieldOfViewWideAngles;
	 float2  View_PrevFieldOfViewWideAngles;
	 float4  View_ViewRectMin;
	 float4  View_ViewSizeAndInvSize;
	 uint4  View_ViewRectMinAndSize;
	 float4  View_LightProbeSizeRatioAndInvSizeRatio;
	 float4  View_BufferSizeAndInvSize;
	 float4  View_BufferBilinearUVMinMax;
	 float4  View_ScreenToViewSpace;
	 float2  View_BufferToSceneTextureScale;
	 float2  View_ResolutionFractionAndInv;
	 int  View_NumSceneColorMSAASamples;
	 float  View_ProjectionDepthThicknessScale;
	 float  View_PreExposure;
	 float  View_OneOverPreExposure;
	 float4  View_DiffuseOverrideParameter;
	 float4  View_SpecularOverrideParameter;
	 float4  View_NormalOverrideParameter;
	 float2  View_RoughnessOverrideParameter;
	 float  View_PrevFrameGameTime;
	 float  View_PrevFrameRealTime;
	 float  View_OutOfBoundsMask;
	 float  PrePadding_View_2196;
	 float  PrePadding_View_2200;
	 float  PrePadding_View_2204;
	 float3  View_WorldCameraMovementSinceLastFrame;
	 float  View_CullingSign;
	 float  View_NearPlane;
	 float  View_GameTime;
	 float  View_RealTime;
	 float  View_DeltaTime;
	 float  View_MaterialTextureMipBias;
	 float  View_MaterialTextureDerivativeMultiply;
	 uint  View_Random;
	 uint  View_FrameNumber;
	 uint  View_FrameCounter;
	 uint  View_StateFrameIndexMod8;
	 uint  View_StateFrameIndex;
	 uint  View_DebugViewModeMask;
	 uint  View_WorldIsPaused;
	 float  View_CameraCut;
	 float  View_UnlitViewmodeMask;
	 float  PrePadding_View_2284;
	 float4  View_DirectionalLightColor;
	 float3  View_DirectionalLightDirection;
	 float  PrePadding_View_2316;
	 float4  View_TranslucencyLightingVolumeMin[2];
	 float4  View_TranslucencyLightingVolumeInvSize[2];
	 float4  View_TemporalAAParams;
	 float4  View_CircleDOFParams;
	 float  View_DepthOfFieldSensorWidth;
	 float  View_DepthOfFieldFocalDistance;
	 float  View_DepthOfFieldScale;
	 float  View_DepthOfFieldFocalLength;
	 float  View_DepthOfFieldFocalRegion;
	 float  View_DepthOfFieldNearTransitionRegion;
	 float  View_DepthOfFieldFarTransitionRegion;
	 float  View_MotionBlurNormalizedToPixel;
	 float  View_GeneralPurposeTweak;
	 float  View_GeneralPurposeTweak2;
	 float  View_DemosaicVposOffset;
	 float  View_DecalDepthBias;
	 float3  View_IndirectLightingColorScale;
	 float  PrePadding_View_2476;
	 float3  View_PrecomputedIndirectLightingColorScale;
	 float  PrePadding_View_2492;
	 float3  View_PrecomputedIndirectSpecularColorScale;
	 float  PrePadding_View_2508;
	 float4  View_AtmosphereLightDirection[2];
	 float4  View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];
	 float4  View_AtmosphereLightIlluminanceOuterSpace[2];
	 float4  View_AtmosphereLightDiscLuminance[2];
	 float4  View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];
	 float4  View_SkyViewLutSizeAndInvSize;
	 float3  View_SkyCameraTranslatedWorldOrigin;
	 float  PrePadding_View_2700;
	 float4  View_SkyPlanetTranslatedWorldCenterAndViewHeight;
	 float4x4  View_SkyViewLutReferential;
	 float4  View_SkyAtmosphereSkyLuminanceFactor;
	 float  View_SkyAtmospherePresentInScene;
	 float  View_SkyAtmosphereHeightFogContribution;
	 float  View_SkyAtmosphereBottomRadiusKm;
	 float  View_SkyAtmosphereTopRadiusKm;
	 float4  View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	 float  View_SkyAtmosphereAerialPerspectiveStartDepthKm;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	 float  View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	 float  View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	 float  PrePadding_View_2856;
	 float  PrePadding_View_2860;
	 float3  View_NormalCurvatureToRoughnessScaleBias;
	 float  View_RenderingReflectionCaptureMask;
	 float  View_RealTimeReflectionCapture;
	 float  View_RealTimeReflectionCapturePreExposure;
	 float  PrePadding_View_2888;
	 float  PrePadding_View_2892;
	 float4  View_AmbientCubemapTint;
	 float  View_AmbientCubemapIntensity;
	 float  View_SkyLightApplyPrecomputedBentNormalShadowingFlag;
	 float  View_SkyLightAffectReflectionFlag;
	 float  View_SkyLightAffectGlobalIlluminationFlag;
	 float4  View_SkyLightColor;
	 float4  View_MobileSkyIrradianceEnvironmentMap[8];
	 float  View_MobilePreviewMode;
	 float  View_HMDEyePaddingOffset;
	 float  View_ReflectionCubemapMaxMip;
	 float  View_ShowDecalsMask;
	 uint  View_DistanceFieldAOSpecularOcclusionMode;
	 float  View_IndirectCapsuleSelfShadowingIntensity;
	 float  PrePadding_View_3096;
	 float  PrePadding_View_3100;
	 float3  View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	 int  View_StereoPassIndex;
	 float4  View_GlobalVolumeTranslatedCenterAndExtent[6];
	 float4  View_GlobalVolumeTranslatedWorldToUVAddAndMul[6];
	 float4  View_GlobalDistanceFieldMipTranslatedWorldToUVScale[6];
	 float4  View_GlobalDistanceFieldMipTranslatedWorldToUVBias[6];
	 float  View_GlobalDistanceFieldMipFactor;
	 float  View_GlobalDistanceFieldMipTransition;
	 int  View_GlobalDistanceFieldClipmapSizeInPages;
	 int  PrePadding_View_3516;
	 float3  View_GlobalDistanceFieldInvPageAtlasSize;
	 float  PrePadding_View_3532;
	 float3  View_GlobalDistanceFieldInvCoverageAtlasSize;
	 float  View_GlobalVolumeDimension;
	 float  View_GlobalVolumeTexelSize;
	 float  View_MaxGlobalDFAOConeDistance;
	 uint  View_NumGlobalSDFClipmaps;
	 float  View_CoveredExpandSurfaceScale;
	 float  View_NotCoveredExpandSurfaceScale;
	 float  View_NotCoveredMinStepScale;
	 float  View_DitheredTransparencyStepThreshold;
	 float  View_DitheredTransparencyTraceThreshold;
	 int2  View_CursorPosition;
	 float  View_bCheckerboardSubsurfaceProfileRendering;
	 float  PrePadding_View_3596;
	 float3  View_VolumetricFogInvGridSize;
	 float  PrePadding_View_3612;
	 float3  View_VolumetricFogGridZParams;
	 float  PrePadding_View_3628;
	 float2  View_VolumetricFogSVPosToVolumeUV;
	 float2  View_VolumetricFogViewGridUVToPrevViewRectUV;
	 float2  View_VolumetricFogPrevViewGridRectUVToResourceUV;
	 float2  View_VolumetricFogPrevUVMax;
	 float2  View_VolumetricFogScreenToResourceUV;
	 float2  View_VolumetricFogUVMax;
	 float  View_VolumetricFogMaxDistance;
	 float  PrePadding_View_3684;
	 float  PrePadding_View_3688;
	 float  PrePadding_View_3692;
	 float3  View_VolumetricLightmapWorldToUVScale;
	 float  PrePadding_View_3708;
	 float3  View_VolumetricLightmapWorldToUVAdd;
	 float  PrePadding_View_3724;
	 float3  View_VolumetricLightmapIndirectionTextureSize;
	 float  View_VolumetricLightmapBrickSize;
	 float3  View_VolumetricLightmapBrickTexelSize;
	 float  View_IndirectLightingCacheShowFlag;
	 float  View_EyeToPixelSpreadAngle;
	 float  PrePadding_View_3764;
	 float  PrePadding_View_3768;
	 float  PrePadding_View_3772;
	 float4  View_XRPassthroughCameraUVs[2];
	 float  View_GlobalVirtualTextureMipBias;
	 uint  View_VirtualTextureFeedbackShift;
	 uint  View_VirtualTextureFeedbackMask;
	 uint  View_VirtualTextureFeedbackStride;
	 uint  View_VirtualTextureFeedbackJitterOffset;
	 uint  View_VirtualTextureFeedbackSampleOffset;
	 uint  PrePadding_View_3832;
	 uint  PrePadding_View_3836;
	 float4  View_RuntimeVirtualTextureMipLevel;
	 float2  View_RuntimeVirtualTexturePackHeight;
	 float  PrePadding_View_3864;
	 float  PrePadding_View_3868;
	 float4  View_RuntimeVirtualTextureDebugParams;
	 float  View_OverrideLandscapeLOD;
	 int  View_FarShadowStaticMeshLODBias;
	 float  View_MinRoughness;
	 float  PrePadding_View_3900;
	 float4  View_HairRenderInfo;
	 uint  View_EnableSkyLight;
	 uint  View_HairRenderInfoBits;
	 uint  View_HairComponents;
	 float  View_bSubsurfacePostprocessEnabled;
	 float4  View_SSProfilesTextureSizeAndInvSize;
	 float4  View_SSProfilesPreIntegratedTextureSizeAndInvSize;
	 float4  View_SpecularProfileTextureSizeAndInvSize;
	 float3  View_PhysicsFieldClipmapCenter;
	 float  View_PhysicsFieldClipmapDistance;
	 int  View_PhysicsFieldClipmapResolution;
	 int  View_PhysicsFieldClipmapExponent;
	 int  View_PhysicsFieldClipmapCount;
	 int  View_PhysicsFieldTargetCount;
	 int4  View_PhysicsFieldTargets[32];
	 uint  View_GPUSceneViewId;
	 float  View_ViewResolutionFraction;
	 float  View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	 float  PrePadding_View_4540;
	 float4  View_TanAndInvTanHalfFOV;
	 float4  View_PrevTanAndInvTanHalfFOV;
	 float4  View_GlintLUTParameters0;
	 float4  View_GlintLUTParameters1;
	 uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler ;
	 uint  PrePadding_View_4612;
	 uint BindlessSampler_View_MaterialTextureBilinearClampedSampler ;
	 uint  PrePadding_View_4620;
	 uint BindlessResource_View_VolumetricLightmapIndirectionTexture ;
	 uint  PrePadding_View_4628;
	 uint BindlessResource_View_VolumetricLightmapBrickAmbientVector ;
	 uint  PrePadding_View_4636;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0 ;
	 uint  PrePadding_View_4644;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1 ;
	 uint  PrePadding_View_4652;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2 ;
	 uint  PrePadding_View_4660;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3 ;
	 uint  PrePadding_View_4668;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4 ;
	 uint  PrePadding_View_4676;
	 uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5 ;
	 uint  PrePadding_View_4684;
	 uint BindlessResource_View_SkyBentNormalBrickTexture ;
	 uint  PrePadding_View_4692;
	 uint BindlessResource_View_DirectionalLightShadowingBrickTexture ;
	 uint  PrePadding_View_4700;
	 uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler ;
	 uint  PrePadding_View_4708;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler0 ;
	 uint  PrePadding_View_4716;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler1 ;
	 uint  PrePadding_View_4724;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler2 ;
	 uint  PrePadding_View_4732;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler3 ;
	 uint  PrePadding_View_4740;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler4 ;
	 uint  PrePadding_View_4748;
	 uint BindlessSampler_View_VolumetricLightmapTextureSampler5 ;
	 uint  PrePadding_View_4756;
	 uint BindlessSampler_View_SkyBentNormalTextureSampler ;
	 uint  PrePadding_View_4764;
	 uint BindlessSampler_View_DirectionalLightShadowingTextureSampler ;
	 uint  PrePadding_View_4772;
	 uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture ;
	 uint  PrePadding_View_4780;
	 uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture ;
	 uint  PrePadding_View_4788;
	 uint BindlessResource_View_GlobalDistanceFieldPageTableTexture ;
	 uint  PrePadding_View_4796;
	 uint BindlessResource_View_GlobalDistanceFieldMipTexture ;
	 uint  PrePadding_View_4804;
	 uint BindlessSampler_View_GlobalDistanceFieldPageAtlasTextureSampler ;
	 uint  PrePadding_View_4812;
	 uint BindlessSampler_View_GlobalDistanceFieldCoverageAtlasTextureSampler ;
	 uint  PrePadding_View_4820;
	 uint BindlessSampler_View_GlobalDistanceFieldMipTextureSampler ;
	 uint  PrePadding_View_4828;
	 uint BindlessResource_View_AtmosphereTransmittanceTexture ;
	 uint  PrePadding_View_4836;
	 uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler ;
	 uint  PrePadding_View_4844;
	 uint BindlessResource_View_AtmosphereIrradianceTexture ;
	 uint  PrePadding_View_4852;
	 uint BindlessSampler_View_AtmosphereIrradianceTextureSampler ;
	 uint  PrePadding_View_4860;
	 uint BindlessResource_View_AtmosphereInscatterTexture ;
	 uint  PrePadding_View_4868;
	 uint BindlessSampler_View_AtmosphereInscatterTextureSampler ;
	 uint  PrePadding_View_4876;
	 uint BindlessResource_View_PerlinNoiseGradientTexture ;
	 uint  PrePadding_View_4884;
	 uint BindlessSampler_View_PerlinNoiseGradientTextureSampler ;
	 uint  PrePadding_View_4892;
	 uint BindlessResource_View_PerlinNoise3DTexture ;
	 uint  PrePadding_View_4900;
	 uint BindlessSampler_View_PerlinNoise3DTextureSampler ;
	 uint  PrePadding_View_4908;
	 uint BindlessResource_View_SobolSamplingTexture ;
	 uint  PrePadding_View_4916;
	 uint BindlessSampler_View_SharedPointWrappedSampler ;
	 uint  PrePadding_View_4924;
	 uint BindlessSampler_View_SharedPointClampedSampler ;
	 uint  PrePadding_View_4932;
	 uint BindlessSampler_View_SharedBilinearWrappedSampler ;
	 uint  PrePadding_View_4940;
	 uint BindlessSampler_View_SharedBilinearClampedSampler ;
	 uint  PrePadding_View_4948;
	 uint BindlessSampler_View_SharedBilinearAnisoClampedSampler ;
	 uint  PrePadding_View_4956;
	 uint BindlessSampler_View_SharedTrilinearWrappedSampler ;
	 uint  PrePadding_View_4964;
	 uint BindlessSampler_View_SharedTrilinearClampedSampler ;
	 uint  PrePadding_View_4972;
	 uint BindlessResource_View_PreIntegratedBRDF ;
	 uint  PrePadding_View_4980;
	 uint BindlessSampler_View_PreIntegratedBRDFSampler ;
	 uint  PrePadding_View_4988;
	 uint BindlessResource_View_SkyIrradianceEnvironmentMap ;
	 uint  PrePadding_View_4996;
	 uint BindlessResource_View_TransmittanceLutTexture ;
	 uint  PrePadding_View_5004;
	 uint BindlessSampler_View_TransmittanceLutTextureSampler ;
	 uint  PrePadding_View_5012;
	 uint BindlessResource_View_SkyViewLutTexture ;
	 uint  PrePadding_View_5020;
	 uint BindlessSampler_View_SkyViewLutTextureSampler ;
	 uint  PrePadding_View_5028;
	 uint BindlessResource_View_DistantSkyLightLutTexture ;
	 uint  PrePadding_View_5036;
	 uint BindlessSampler_View_DistantSkyLightLutTextureSampler ;
	 uint  PrePadding_View_5044;
	 uint BindlessResource_View_CameraAerialPerspectiveVolume ;
	 uint  PrePadding_View_5052;
	 uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler ;
	 uint  PrePadding_View_5060;
	 uint BindlessResource_View_CameraAerialPerspectiveVolumeMieOnly ;
	 uint  PrePadding_View_5068;
	 uint BindlessSampler_View_CameraAerialPerspectiveVolumeMieOnlySampler ;
	 uint  PrePadding_View_5076;
	 uint BindlessResource_View_CameraAerialPerspectiveVolumeRayOnly ;
	 uint  PrePadding_View_5084;
	 uint BindlessSampler_View_CameraAerialPerspectiveVolumeRayOnlySampler ;
	 uint  PrePadding_View_5092;
	 uint BindlessResource_View_HairScatteringLUTTexture ;
	 uint  PrePadding_View_5100;
	 uint BindlessSampler_View_HairScatteringLUTSampler ;
	 uint  PrePadding_View_5108;
	 uint BindlessResource_View_GGXLTCMatTexture ;
	 uint  PrePadding_View_5116;
	 uint BindlessSampler_View_GGXLTCMatSampler ;
	 uint  PrePadding_View_5124;
	 uint BindlessResource_View_GGXLTCAmpTexture ;
	 uint  PrePadding_View_5132;
	 uint BindlessSampler_View_GGXLTCAmpSampler ;
	 uint  PrePadding_View_5140;
	 uint BindlessResource_View_SheenLTCTexture ;
	 uint  PrePadding_View_5148;
	 uint BindlessSampler_View_SheenLTCSampler ;
	 uint  PrePadding_View_5156;
	 uint  View_bShadingEnergyConservation;
	 uint  View_bShadingEnergyPreservation;
	 uint BindlessResource_View_ShadingEnergyGGXSpecTexture ;
	 uint  PrePadding_View_5172;
	 uint BindlessResource_View_ShadingEnergyGGXGlassTexture ;
	 uint  PrePadding_View_5180;
	 uint BindlessResource_View_ShadingEnergyClothSpecTexture ;
	 uint  PrePadding_View_5188;
	 uint BindlessResource_View_ShadingEnergyDiffuseTexture ;
	 uint  PrePadding_View_5196;
	 uint BindlessSampler_View_ShadingEnergySampler ;
	 uint  PrePadding_View_5204;
	 uint BindlessResource_View_GlintTexture ;
	 uint  PrePadding_View_5212;
	 uint BindlessSampler_View_GlintSampler ;
	 uint  PrePadding_View_5220;
	 uint BindlessResource_View_SimpleVolumeTexture ;
	 uint  PrePadding_View_5228;
	 uint BindlessSampler_View_SimpleVolumeTextureSampler ;
	 uint  PrePadding_View_5236;
	 uint BindlessResource_View_SimpleVolumeEnvTexture ;
	 uint  PrePadding_View_5244;
	 uint BindlessSampler_View_SimpleVolumeEnvTextureSampler ;
	 uint  PrePadding_View_5252;
	 uint BindlessResource_View_SSProfilesTexture ;
	 uint  PrePadding_View_5260;
	 uint BindlessSampler_View_SSProfilesSampler ;
	 uint  PrePadding_View_5268;
	 uint BindlessSampler_View_SSProfilesTransmissionSampler ;
	 uint  PrePadding_View_5276;
	 uint BindlessResource_View_SSProfilesPreIntegratedTexture ;
	 uint  PrePadding_View_5284;
	 uint BindlessSampler_View_SSProfilesPreIntegratedSampler ;
	 uint  PrePadding_View_5292;
	 uint BindlessResource_View_SpecularProfileTexture ;
	 uint  PrePadding_View_5300;
	 uint BindlessSampler_View_SpecularProfileSampler ;
	 uint  PrePadding_View_5308;
	 uint BindlessResource_View_WaterIndirection ;
	 uint  PrePadding_View_5316;
	 uint BindlessResource_View_WaterData ;
	 uint  PrePadding_View_5324;
	 float4  View_RectLightAtlasSizeAndInvSize;
	 float  View_RectLightAtlasMaxMipLevel;
	 float  PrePadding_View_5348;
	 uint BindlessResource_View_RectLightAtlasTexture ;
	 uint  PrePadding_View_5356;
	 uint BindlessSampler_View_RectLightAtlasSampler ;
	 uint  PrePadding_View_5364;
	 uint  PrePadding_View_5368;
	 uint  PrePadding_View_5372;
	 float4  View_IESAtlasSizeAndInvSize;
	 uint BindlessResource_View_IESAtlasTexture ;
	 uint  PrePadding_View_5396;
	 uint BindlessSampler_View_IESAtlasSampler ;
	 uint  PrePadding_View_5404;
	 uint BindlessSampler_View_LandscapeWeightmapSampler ;
	 uint  PrePadding_View_5412;
	 uint BindlessResource_View_LandscapeIndirection ;
	 uint  PrePadding_View_5420;
	 uint BindlessResource_View_LandscapePerComponentData ;
	 uint  PrePadding_View_5428;
	 uint BindlessResource_View_VTFeedbackBuffer ;
	 uint  PrePadding_View_5436;
	 uint BindlessResource_View_PhysicsFieldClipmapBuffer ;
	 uint  PrePadding_View_5444;
	 uint  PrePadding_View_5448;
	 uint  PrePadding_View_5452;
	 float3  View_TLASRelativePreViewTranslation;
	 float  PrePadding_View_5468;
	 float3  View_TLASViewTilePosition;
}

#line 480 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_MaterialTextureBilinearWrapedSampler;

#line 481 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_MaterialTextureBilinearClampedSampler;

#line 482 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D<uint4>  View_VolumetricLightmapIndirectionTexture;

#line 483 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_VolumetricLightmapBrickAmbientVector;

#line 484 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_VolumetricLightmapBrickSHCoefficients0;

#line 485 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_VolumetricLightmapBrickSHCoefficients1;

#line 486 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_VolumetricLightmapBrickSHCoefficients2;

#line 487 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_VolumetricLightmapBrickSHCoefficients3;

#line 488 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_VolumetricLightmapBrickSHCoefficients4;

#line 489 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_VolumetricLightmapBrickSHCoefficients5;

#line 490 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_SkyBentNormalBrickTexture;

#line 491 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_DirectionalLightShadowingBrickTexture;

#line 492 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_VolumetricLightmapBrickAmbientVectorSampler;

#line 493 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_VolumetricLightmapTextureSampler0;

#line 494 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_VolumetricLightmapTextureSampler1;

#line 495 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_VolumetricLightmapTextureSampler2;

#line 496 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_VolumetricLightmapTextureSampler3;

#line 497 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_VolumetricLightmapTextureSampler4;

#line 498 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_VolumetricLightmapTextureSampler5;

#line 499 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SkyBentNormalTextureSampler;

#line 500 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_DirectionalLightShadowingTextureSampler;

#line 501 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_GlobalDistanceFieldPageAtlasTexture;

#line 502 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_GlobalDistanceFieldCoverageAtlasTexture;

#line 503 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D<uint>  View_GlobalDistanceFieldPageTableTexture;

#line 504 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_GlobalDistanceFieldMipTexture;

#line 505 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_GlobalDistanceFieldPageAtlasTextureSampler;

#line 506 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_GlobalDistanceFieldCoverageAtlasTextureSampler;

#line 507 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_GlobalDistanceFieldMipTextureSampler;

#line 508 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_AtmosphereTransmittanceTexture;

#line 509 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_AtmosphereTransmittanceTextureSampler;

#line 510 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_AtmosphereIrradianceTexture;

#line 511 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_AtmosphereIrradianceTextureSampler;

#line 512 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_AtmosphereInscatterTexture;

#line 513 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_AtmosphereInscatterTextureSampler;

#line 514 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_PerlinNoiseGradientTexture;

#line 515 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_PerlinNoiseGradientTextureSampler;

#line 516 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_PerlinNoise3DTexture;

#line 517 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_PerlinNoise3DTextureSampler;

#line 518 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D<uint>  View_SobolSamplingTexture;

#line 519 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SharedPointWrappedSampler;

#line 520 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SharedPointClampedSampler;

#line 521 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SharedBilinearWrappedSampler;

#line 522 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SharedBilinearClampedSampler;

#line 523 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SharedBilinearAnisoClampedSampler;

#line 524 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SharedTrilinearWrappedSampler;

#line 525 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SharedTrilinearClampedSampler;

#line 526 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_PreIntegratedBRDF;

#line 527 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_PreIntegratedBRDFSampler;

#line 528 "/Engine/Generated/UniformBuffers/View.ush"
StructuredBuffer<float4>  View_SkyIrradianceEnvironmentMap;

#line 529 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_TransmittanceLutTexture;

#line 530 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_TransmittanceLutTextureSampler;

#line 531 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_SkyViewLutTexture;

#line 532 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SkyViewLutTextureSampler;

#line 533 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_DistantSkyLightLutTexture;

#line 534 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_DistantSkyLightLutTextureSampler;

#line 535 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_CameraAerialPerspectiveVolume;

#line 536 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_CameraAerialPerspectiveVolumeSampler;

#line 537 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_CameraAerialPerspectiveVolumeMieOnly;

#line 538 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_CameraAerialPerspectiveVolumeMieOnlySampler;

#line 539 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_CameraAerialPerspectiveVolumeRayOnly;

#line 540 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_CameraAerialPerspectiveVolumeRayOnlySampler;

#line 541 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D  View_HairScatteringLUTTexture;

#line 542 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_HairScatteringLUTSampler;

#line 543 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_GGXLTCMatTexture;

#line 544 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_GGXLTCMatSampler;

#line 545 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_GGXLTCAmpTexture;

#line 546 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_GGXLTCAmpSampler;

#line 547 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_SheenLTCTexture;

#line 548 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SheenLTCSampler;

#line 549 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D<float2>  View_ShadingEnergyGGXSpecTexture;

#line 550 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D<float2>  View_ShadingEnergyGGXGlassTexture;

#line 551 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D<float2>  View_ShadingEnergyClothSpecTexture;

#line 552 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D<float>  View_ShadingEnergyDiffuseTexture;

#line 553 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_ShadingEnergySampler;

#line 554 "/Engine/Generated/UniformBuffers/View.ush"
Texture2DArray<float4>  View_GlintTexture;

#line 555 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_GlintSampler;

#line 556 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D<float>  View_SimpleVolumeTexture;

#line 557 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SimpleVolumeTextureSampler;

#line 558 "/Engine/Generated/UniformBuffers/View.ush"
Texture3D<float>  View_SimpleVolumeEnvTexture;

#line 559 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SimpleVolumeEnvTextureSampler;

#line 560 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D  View_SSProfilesTexture;

#line 561 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SSProfilesSampler;

#line 562 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SSProfilesTransmissionSampler;

#line 563 "/Engine/Generated/UniformBuffers/View.ush"
Texture2DArray  View_SSProfilesPreIntegratedTexture;

#line 564 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SSProfilesPreIntegratedSampler;

#line 565 "/Engine/Generated/UniformBuffers/View.ush"
Texture2DArray  View_SpecularProfileTexture;

#line 566 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_SpecularProfileSampler;

#line 567 "/Engine/Generated/UniformBuffers/View.ush"
Buffer<float4>  View_WaterIndirection;

#line 568 "/Engine/Generated/UniformBuffers/View.ush"
Buffer<float4>  View_WaterData;

#line 569 "/Engine/Generated/UniformBuffers/View.ush"
Texture2D<float4>  View_RectLightAtlasTexture;

#line 570 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_RectLightAtlasSampler;

#line 571 "/Engine/Generated/UniformBuffers/View.ush"
Texture2DArray<float>  View_IESAtlasTexture;

#line 572 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_IESAtlasSampler;

#line 573 "/Engine/Generated/UniformBuffers/View.ush"
SamplerState  View_LandscapeWeightmapSampler;

#line 574 "/Engine/Generated/UniformBuffers/View.ush"
Buffer<uint>  View_LandscapeIndirection;

#line 575 "/Engine/Generated/UniformBuffers/View.ush"
Buffer<float>  View_LandscapePerComponentData;

#line 576 "/Engine/Generated/UniformBuffers/View.ush"
RWStructuredBuffer<uint>  View_VTFeedbackBuffer;

#line 577 "/Engine/Generated/UniformBuffers/View.ush"
Buffer<float>  View_PhysicsFieldClipmapBuffer;

#line 578 "/Engine/Generated/UniformBuffers/View.ush"
static const struct
{
	 float4x4  TranslatedWorldToClip;
	 float4x4  RelativeWorldToClip;
	 float4x4  ClipToRelativeWorld;
	 float4x4  TranslatedWorldToView;
	 float4x4  ViewToTranslatedWorld;
	 float4x4  TranslatedWorldToCameraView;
	 float4x4  CameraViewToTranslatedWorld;
	 float4x4  ViewToClip;
	 float4x4  ViewToClipNoAA;
	 float4x4  ClipToView;
	 float4x4  ClipToTranslatedWorld;
	 float4x4  SVPositionToTranslatedWorld;
	 float4x4  ScreenToRelativeWorld;
	 float4x4  ScreenToTranslatedWorld;
	 float4x4  MobileMultiviewShadowTransform;
	 float3  ViewTilePosition;
	 float3  MatrixTilePosition;
	 float3  ViewForward;
	 float3  ViewUp;
	 float3  ViewRight;
	 float3  HMDViewNoRollUp;
	 float3  HMDViewNoRollRight;
	 float4  InvDeviceZToWorldZTransform;
	 float4  ScreenPositionScaleBias;
	 float3  RelativeWorldCameraOrigin;
	 float3  TranslatedWorldCameraOrigin;
	 float3  RelativeWorldViewOrigin;
	 float3  RelativePreViewTranslation;
	 float4x4  PrevViewToClip;
	 float4x4  PrevClipToView;
	 float4x4  PrevTranslatedWorldToClip;
	 float4x4  PrevTranslatedWorldToView;
	 float4x4  PrevViewToTranslatedWorld;
	 float4x4  PrevTranslatedWorldToCameraView;
	 float4x4  PrevCameraViewToTranslatedWorld;
	 float3  PrevTranslatedWorldCameraOrigin;
	 float3  PrevRelativeWorldCameraOrigin;
	 float3  PrevRelativeWorldViewOrigin;
	 float3  RelativePrevPreViewTranslation;
	 float4x4  PrevClipToRelativeWorld;
	 float4x4  PrevScreenToTranslatedWorld;
	 float4x4  ClipToPrevClip;
	 float4x4  ClipToPrevClipWithAA;
	 float4  TemporalAAJitter;
	 float4  GlobalClippingPlane;
	 float2  FieldOfViewWideAngles;
	 float2  PrevFieldOfViewWideAngles;
	 float4  ViewRectMin;
	 float4  ViewSizeAndInvSize;
	 uint4  ViewRectMinAndSize;
	 float4  LightProbeSizeRatioAndInvSizeRatio;
	 float4  BufferSizeAndInvSize;
	 float4  BufferBilinearUVMinMax;
	 float4  ScreenToViewSpace;
	 float2  BufferToSceneTextureScale;
	 float2  ResolutionFractionAndInv;
	 int  NumSceneColorMSAASamples;
	 float  ProjectionDepthThicknessScale;
	 float  PreExposure;
	 float  OneOverPreExposure;
	 float4  DiffuseOverrideParameter;
	 float4  SpecularOverrideParameter;
	 float4  NormalOverrideParameter;
	 float2  RoughnessOverrideParameter;
	 float  PrevFrameGameTime;
	 float  PrevFrameRealTime;
	 float  OutOfBoundsMask;
	 float3  WorldCameraMovementSinceLastFrame;
	 float  CullingSign;
	 float  NearPlane;
	 float  GameTime;
	 float  RealTime;
	 float  DeltaTime;
	 float  MaterialTextureMipBias;
	 float  MaterialTextureDerivativeMultiply;
	 uint  Random;
	 uint  FrameNumber;
	 uint  FrameCounter;
	 uint  StateFrameIndexMod8;
	 uint  StateFrameIndex;
	 uint  DebugViewModeMask;
	 uint  WorldIsPaused;
	 float  CameraCut;
	 float  UnlitViewmodeMask;
	 float4  DirectionalLightColor;
	 float3  DirectionalLightDirection;
	 float4  TranslucencyLightingVolumeMin[2];
	 float4  TranslucencyLightingVolumeInvSize[2];
	 float4  TemporalAAParams;
	 float4  CircleDOFParams;
	 float  DepthOfFieldSensorWidth;
	 float  DepthOfFieldFocalDistance;
	 float  DepthOfFieldScale;
	 float  DepthOfFieldFocalLength;
	 float  DepthOfFieldFocalRegion;
	 float  DepthOfFieldNearTransitionRegion;
	 float  DepthOfFieldFarTransitionRegion;
	 float  MotionBlurNormalizedToPixel;
	 float  GeneralPurposeTweak;
	 float  GeneralPurposeTweak2;
	 float  DemosaicVposOffset;
	 float  DecalDepthBias;
	 float3  IndirectLightingColorScale;
	 float3  PrecomputedIndirectLightingColorScale;
	 float3  PrecomputedIndirectSpecularColorScale;
	 float4  AtmosphereLightDirection[2];
	 float4  AtmosphereLightIlluminanceOnGroundPostTransmittance[2];
	 float4  AtmosphereLightIlluminanceOuterSpace[2];
	 float4  AtmosphereLightDiscLuminance[2];
	 float4  AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];
	 float4  SkyViewLutSizeAndInvSize;
	 float3  SkyCameraTranslatedWorldOrigin;
	 float4  SkyPlanetTranslatedWorldCenterAndViewHeight;
	 float4x4  SkyViewLutReferential;
	 float4  SkyAtmosphereSkyLuminanceFactor;
	 float  SkyAtmospherePresentInScene;
	 float  SkyAtmosphereHeightFogContribution;
	 float  SkyAtmosphereBottomRadiusKm;
	 float  SkyAtmosphereTopRadiusKm;
	 float4  SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	 float  SkyAtmosphereAerialPerspectiveStartDepthKm;
	 float  SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	 float  SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	 float  SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	 float  SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	 float  SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	 float3  NormalCurvatureToRoughnessScaleBias;
	 float  RenderingReflectionCaptureMask;
	 float  RealTimeReflectionCapture;
	 float  RealTimeReflectionCapturePreExposure;
	 float4  AmbientCubemapTint;
	 float  AmbientCubemapIntensity;
	 float  SkyLightApplyPrecomputedBentNormalShadowingFlag;
	 float  SkyLightAffectReflectionFlag;
	 float  SkyLightAffectGlobalIlluminationFlag;
	 float4  SkyLightColor;
	 float4  MobileSkyIrradianceEnvironmentMap[8];
	 float  MobilePreviewMode;
	 float  HMDEyePaddingOffset;
	 float  ReflectionCubemapMaxMip;
	 float  ShowDecalsMask;
	 uint  DistanceFieldAOSpecularOcclusionMode;
	 float  IndirectCapsuleSelfShadowingIntensity;
	 float3  ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	 int  StereoPassIndex;
	 float4  GlobalVolumeTranslatedCenterAndExtent[6];
	 float4  GlobalVolumeTranslatedWorldToUVAddAndMul[6];
	 float4  GlobalDistanceFieldMipTranslatedWorldToUVScale[6];
	 float4  GlobalDistanceFieldMipTranslatedWorldToUVBias[6];
	 float  GlobalDistanceFieldMipFactor;
	 float  GlobalDistanceFieldMipTransition;
	 int  GlobalDistanceFieldClipmapSizeInPages;
	 float3  GlobalDistanceFieldInvPageAtlasSize;
	 float3  GlobalDistanceFieldInvCoverageAtlasSize;
	 float  GlobalVolumeDimension;
	 float  GlobalVolumeTexelSize;
	 float  MaxGlobalDFAOConeDistance;
	 uint  NumGlobalSDFClipmaps;
	 float  CoveredExpandSurfaceScale;
	 float  NotCoveredExpandSurfaceScale;
	 float  NotCoveredMinStepScale;
	 float  DitheredTransparencyStepThreshold;
	 float  DitheredTransparencyTraceThreshold;
	 int2  CursorPosition;
	 float  bCheckerboardSubsurfaceProfileRendering;
	 float3  VolumetricFogInvGridSize;
	 float3  VolumetricFogGridZParams;
	 float2  VolumetricFogSVPosToVolumeUV;
	 float2  VolumetricFogViewGridUVToPrevViewRectUV;
	 float2  VolumetricFogPrevViewGridRectUVToResourceUV;
	 float2  VolumetricFogPrevUVMax;
	 float2  VolumetricFogScreenToResourceUV;
	 float2  VolumetricFogUVMax;
	 float  VolumetricFogMaxDistance;
	 float3  VolumetricLightmapWorldToUVScale;
	 float3  VolumetricLightmapWorldToUVAdd;
	 float3  VolumetricLightmapIndirectionTextureSize;
	 float  VolumetricLightmapBrickSize;
	 float3  VolumetricLightmapBrickTexelSize;
	 float  IndirectLightingCacheShowFlag;
	 float  EyeToPixelSpreadAngle;
	 float4  XRPassthroughCameraUVs[2];
	 float  GlobalVirtualTextureMipBias;
	 uint  VirtualTextureFeedbackShift;
	 uint  VirtualTextureFeedbackMask;
	 uint  VirtualTextureFeedbackStride;
	 uint  VirtualTextureFeedbackJitterOffset;
	 uint  VirtualTextureFeedbackSampleOffset;
	 float4  RuntimeVirtualTextureMipLevel;
	 float2  RuntimeVirtualTexturePackHeight;
	 float4  RuntimeVirtualTextureDebugParams;
	 float  OverrideLandscapeLOD;
	 int  FarShadowStaticMeshLODBias;
	 float  MinRoughness;
	 float4  HairRenderInfo;
	 uint  EnableSkyLight;
	 uint  HairRenderInfoBits;
	 uint  HairComponents;
	 float  bSubsurfacePostprocessEnabled;
	 float4  SSProfilesTextureSizeAndInvSize;
	 float4  SSProfilesPreIntegratedTextureSizeAndInvSize;
	 float4  SpecularProfileTextureSizeAndInvSize;
	 float3  PhysicsFieldClipmapCenter;
	 float  PhysicsFieldClipmapDistance;
	 int  PhysicsFieldClipmapResolution;
	 int  PhysicsFieldClipmapExponent;
	 int  PhysicsFieldClipmapCount;
	 int  PhysicsFieldTargetCount;
	 int4  PhysicsFieldTargets[32];
	 uint  GPUSceneViewId;
	 float  ViewResolutionFraction;
	 float  SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	 float4  TanAndInvTanHalfFOV;
	 float4  PrevTanAndInvTanHalfFOV;
	 float4  GlintLUTParameters0;
	 float4  GlintLUTParameters1;
	 uint  bShadingEnergyConservation;
	 uint  bShadingEnergyPreservation;
	 float4  RectLightAtlasSizeAndInvSize;
	 float  RectLightAtlasMaxMipLevel;
	 float4  IESAtlasSizeAndInvSize;
	 float3  TLASRelativePreViewTranslation;
	 float3  TLASViewTilePosition;
	SamplerState MaterialTextureBilinearWrapedSampler;
	SamplerState MaterialTextureBilinearClampedSampler;
	Texture3D<uint4> VolumetricLightmapIndirectionTexture;
	Texture3D VolumetricLightmapBrickAmbientVector;
	Texture3D VolumetricLightmapBrickSHCoefficients0;
	Texture3D VolumetricLightmapBrickSHCoefficients1;
	Texture3D VolumetricLightmapBrickSHCoefficients2;
	Texture3D VolumetricLightmapBrickSHCoefficients3;
	Texture3D VolumetricLightmapBrickSHCoefficients4;
	Texture3D VolumetricLightmapBrickSHCoefficients5;
	Texture3D SkyBentNormalBrickTexture;
	Texture3D DirectionalLightShadowingBrickTexture;
	SamplerState VolumetricLightmapBrickAmbientVectorSampler;
	SamplerState VolumetricLightmapTextureSampler0;
	SamplerState VolumetricLightmapTextureSampler1;
	SamplerState VolumetricLightmapTextureSampler2;
	SamplerState VolumetricLightmapTextureSampler3;
	SamplerState VolumetricLightmapTextureSampler4;
	SamplerState VolumetricLightmapTextureSampler5;
	SamplerState SkyBentNormalTextureSampler;
	SamplerState DirectionalLightShadowingTextureSampler;
	Texture3D GlobalDistanceFieldPageAtlasTexture;
	Texture3D GlobalDistanceFieldCoverageAtlasTexture;
	Texture3D<uint> GlobalDistanceFieldPageTableTexture;
	Texture3D GlobalDistanceFieldMipTexture;
	SamplerState GlobalDistanceFieldPageAtlasTextureSampler;
	SamplerState GlobalDistanceFieldCoverageAtlasTextureSampler;
	SamplerState GlobalDistanceFieldMipTextureSampler;
	Texture2D AtmosphereTransmittanceTexture;
	SamplerState AtmosphereTransmittanceTextureSampler;
	Texture2D AtmosphereIrradianceTexture;
	SamplerState AtmosphereIrradianceTextureSampler;
	Texture3D AtmosphereInscatterTexture;
	SamplerState AtmosphereInscatterTextureSampler;
	Texture2D PerlinNoiseGradientTexture;
	SamplerState PerlinNoiseGradientTextureSampler;
	Texture3D PerlinNoise3DTexture;
	SamplerState PerlinNoise3DTextureSampler;
	Texture2D<uint> SobolSamplingTexture;
	SamplerState SharedPointWrappedSampler;
	SamplerState SharedPointClampedSampler;
	SamplerState SharedBilinearWrappedSampler;
	SamplerState SharedBilinearClampedSampler;
	SamplerState SharedBilinearAnisoClampedSampler;
	SamplerState SharedTrilinearWrappedSampler;
	SamplerState SharedTrilinearClampedSampler;
	Texture2D PreIntegratedBRDF;
	SamplerState PreIntegratedBRDFSampler;
	StructuredBuffer<float4> SkyIrradianceEnvironmentMap;
	Texture2D TransmittanceLutTexture;
	SamplerState TransmittanceLutTextureSampler;
	Texture2D SkyViewLutTexture;
	SamplerState SkyViewLutTextureSampler;
	Texture2D DistantSkyLightLutTexture;
	SamplerState DistantSkyLightLutTextureSampler;
	Texture3D CameraAerialPerspectiveVolume;
	SamplerState CameraAerialPerspectiveVolumeSampler;
	Texture3D CameraAerialPerspectiveVolumeMieOnly;
	SamplerState CameraAerialPerspectiveVolumeMieOnlySampler;
	Texture3D CameraAerialPerspectiveVolumeRayOnly;
	SamplerState CameraAerialPerspectiveVolumeRayOnlySampler;
	Texture3D HairScatteringLUTTexture;
	SamplerState HairScatteringLUTSampler;
	Texture2D GGXLTCMatTexture;
	SamplerState GGXLTCMatSampler;
	Texture2D GGXLTCAmpTexture;
	SamplerState GGXLTCAmpSampler;
	Texture2D SheenLTCTexture;
	SamplerState SheenLTCSampler;
	Texture2D<float2> ShadingEnergyGGXSpecTexture;
	Texture3D<float2> ShadingEnergyGGXGlassTexture;
	Texture2D<float2> ShadingEnergyClothSpecTexture;
	Texture2D<float> ShadingEnergyDiffuseTexture;
	SamplerState ShadingEnergySampler;
	Texture2DArray<float4> GlintTexture;
	SamplerState GlintSampler;
	Texture3D<float> SimpleVolumeTexture;
	SamplerState SimpleVolumeTextureSampler;
	Texture3D<float> SimpleVolumeEnvTexture;
	SamplerState SimpleVolumeEnvTextureSampler;
	Texture2D SSProfilesTexture;
	SamplerState SSProfilesSampler;
	SamplerState SSProfilesTransmissionSampler;
	Texture2DArray SSProfilesPreIntegratedTexture;
	SamplerState SSProfilesPreIntegratedSampler;
	Texture2DArray SpecularProfileTexture;
	SamplerState SpecularProfileSampler;
	Buffer<float4> WaterIndirection;
	Buffer<float4> WaterData;
	Texture2D<float4> RectLightAtlasTexture;
	SamplerState RectLightAtlasSampler;
	Texture2DArray<float> IESAtlasTexture;
	SamplerState IESAtlasSampler;
	SamplerState LandscapeWeightmapSampler;
	Buffer<uint> LandscapeIndirection;
	Buffer<float> LandscapePerComponentData;
	RWStructuredBuffer<uint> VTFeedbackBuffer;
	Buffer<float> PhysicsFieldClipmapBuffer;
} View = {View_TranslatedWorldToClip,View_RelativeWorldToClip,View_ClipToRelativeWorld,View_TranslatedWorldToView,View_ViewToTranslatedWorld,View_TranslatedWorldToCameraView,View_CameraViewToTranslatedWorld,View_ViewToClip,View_ViewToClipNoAA,View_ClipToView,View_ClipToTranslatedWorld,View_SVPositionToTranslatedWorld,View_ScreenToRelativeWorld,View_ScreenToTranslatedWorld,View_MobileMultiviewShadowTransform,View_ViewTilePosition,View_MatrixTilePosition,View_ViewForward,View_ViewUp,View_ViewRight,View_HMDViewNoRollUp,View_HMDViewNoRollRight,View_InvDeviceZToWorldZTransform,View_ScreenPositionScaleBias,View_RelativeWorldCameraOrigin,View_TranslatedWorldCameraOrigin,View_RelativeWorldViewOrigin,View_RelativePreViewTranslation,View_PrevViewToClip,View_PrevClipToView,View_PrevTranslatedWorldToClip,View_PrevTranslatedWorldToView,View_PrevViewToTranslatedWorld,View_PrevTranslatedWorldToCameraView,View_PrevCameraViewToTranslatedWorld,View_PrevTranslatedWorldCameraOrigin,View_PrevRelativeWorldCameraOrigin,View_PrevRelativeWorldViewOrigin,View_RelativePrevPreViewTranslation,View_PrevClipToRelativeWorld,View_PrevScreenToTranslatedWorld,View_ClipToPrevClip,View_ClipToPrevClipWithAA,View_TemporalAAJitter,View_GlobalClippingPlane,View_FieldOfViewWideAngles,View_PrevFieldOfViewWideAngles,View_ViewRectMin,View_ViewSizeAndInvSize,View_ViewRectMinAndSize,View_LightProbeSizeRatioAndInvSizeRatio,View_BufferSizeAndInvSize,View_BufferBilinearUVMinMax,View_ScreenToViewSpace,View_BufferToSceneTextureScale,View_ResolutionFractionAndInv,View_NumSceneColorMSAASamples,View_ProjectionDepthThicknessScale,View_PreExposure,View_OneOverPreExposure,View_DiffuseOverrideParameter,View_SpecularOverrideParameter,View_NormalOverrideParameter,View_RoughnessOverrideParameter,View_PrevFrameGameTime,View_PrevFrameRealTime,View_OutOfBoundsMask,View_WorldCameraMovementSinceLastFrame,View_CullingSign,View_NearPlane,View_GameTime,View_RealTime,View_DeltaTime,View_MaterialTextureMipBias,View_MaterialTextureDerivativeMultiply,View_Random,View_FrameNumber,View_FrameCounter,View_StateFrameIndexMod8,View_StateFrameIndex,View_DebugViewModeMask,View_WorldIsPaused,View_CameraCut,View_UnlitViewmodeMask,View_DirectionalLightColor,View_DirectionalLightDirection,View_TranslucencyLightingVolumeMin,View_TranslucencyLightingVolumeInvSize,View_TemporalAAParams,View_CircleDOFParams,View_DepthOfFieldSensorWidth,View_DepthOfFieldFocalDistance,View_DepthOfFieldScale,View_DepthOfFieldFocalLength,View_DepthOfFieldFocalRegion,View_DepthOfFieldNearTransitionRegion,View_DepthOfFieldFarTransitionRegion,View_MotionBlurNormalizedToPixel,View_GeneralPurposeTweak,View_GeneralPurposeTweak2,View_DemosaicVposOffset,View_DecalDepthBias,View_IndirectLightingColorScale,View_PrecomputedIndirectLightingColorScale,View_PrecomputedIndirectSpecularColorScale,View_AtmosphereLightDirection,View_AtmosphereLightIlluminanceOnGroundPostTransmittance,View_AtmosphereLightIlluminanceOuterSpace,View_AtmosphereLightDiscLuminance,View_AtmosphereLightDiscCosHalfApexAngle_PPTrans,View_SkyViewLutSizeAndInvSize,View_SkyCameraTranslatedWorldOrigin,View_SkyPlanetTranslatedWorldCenterAndViewHeight,View_SkyViewLutReferential,View_SkyAtmosphereSkyLuminanceFactor,View_SkyAtmospherePresentInScene,View_SkyAtmosphereHeightFogContribution,View_SkyAtmosphereBottomRadiusKm,View_SkyAtmosphereTopRadiusKm,View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize,View_SkyAtmosphereAerialPerspectiveStartDepthKm,View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution,View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv,View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm,View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv,View_SkyAtmosphereApplyCameraAerialPerspectiveVolume,View_NormalCurvatureToRoughnessScaleBias,View_RenderingReflectionCaptureMask,View_RealTimeReflectionCapture,View_RealTimeReflectionCapturePreExposure,View_AmbientCubemapTint,View_AmbientCubemapIntensity,View_SkyLightApplyPrecomputedBentNormalShadowingFlag,View_SkyLightAffectReflectionFlag,View_SkyLightAffectGlobalIlluminationFlag,View_SkyLightColor,View_MobileSkyIrradianceEnvironmentMap,View_MobilePreviewMode,View_HMDEyePaddingOffset,View_ReflectionCubemapMaxMip,View_ShowDecalsMask,View_DistanceFieldAOSpecularOcclusionMode,View_IndirectCapsuleSelfShadowingIntensity,View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight,View_StereoPassIndex,View_GlobalVolumeTranslatedCenterAndExtent,View_GlobalVolumeTranslatedWorldToUVAddAndMul,View_GlobalDistanceFieldMipTranslatedWorldToUVScale,View_GlobalDistanceFieldMipTranslatedWorldToUVBias,View_GlobalDistanceFieldMipFactor,View_GlobalDistanceFieldMipTransition,View_GlobalDistanceFieldClipmapSizeInPages,View_GlobalDistanceFieldInvPageAtlasSize,View_GlobalDistanceFieldInvCoverageAtlasSize,View_GlobalVolumeDimension,View_GlobalVolumeTexelSize,View_MaxGlobalDFAOConeDistance,View_NumGlobalSDFClipmaps,View_CoveredExpandSurfaceScale,View_NotCoveredExpandSurfaceScale,View_NotCoveredMinStepScale,View_DitheredTransparencyStepThreshold,View_DitheredTransparencyTraceThreshold,View_CursorPosition,View_bCheckerboardSubsurfaceProfileRendering,View_VolumetricFogInvGridSize,View_VolumetricFogGridZParams,View_VolumetricFogSVPosToVolumeUV,View_VolumetricFogViewGridUVToPrevViewRectUV,View_VolumetricFogPrevViewGridRectUVToResourceUV,View_VolumetricFogPrevUVMax,View_VolumetricFogScreenToResourceUV,View_VolumetricFogUVMax,View_VolumetricFogMaxDistance,View_VolumetricLightmapWorldToUVScale,View_VolumetricLightmapWorldToUVAdd,View_VolumetricLightmapIndirectionTextureSize,View_VolumetricLightmapBrickSize,View_VolumetricLightmapBrickTexelSize,View_IndirectLightingCacheShowFlag,View_EyeToPixelSpreadAngle,View_XRPassthroughCameraUVs,View_GlobalVirtualTextureMipBias,View_VirtualTextureFeedbackShift,View_VirtualTextureFeedbackMask,View_VirtualTextureFeedbackStride,View_VirtualTextureFeedbackJitterOffset,View_VirtualTextureFeedbackSampleOffset,View_RuntimeVirtualTextureMipLevel,View_RuntimeVirtualTexturePackHeight,View_RuntimeVirtualTextureDebugParams,View_OverrideLandscapeLOD,View_FarShadowStaticMeshLODBias,View_MinRoughness,View_HairRenderInfo,View_EnableSkyLight,View_HairRenderInfoBits,View_HairComponents,View_bSubsurfacePostprocessEnabled,View_SSProfilesTextureSizeAndInvSize,View_SSProfilesPreIntegratedTextureSizeAndInvSize,View_SpecularProfileTextureSizeAndInvSize,View_PhysicsFieldClipmapCenter,View_PhysicsFieldClipmapDistance,View_PhysicsFieldClipmapResolution,View_PhysicsFieldClipmapExponent,View_PhysicsFieldClipmapCount,View_PhysicsFieldTargetCount,View_PhysicsFieldTargets,View_GPUSceneViewId,View_ViewResolutionFraction,View_SubSurfaceColorAsTransmittanceAtDistanceInMeters,View_TanAndInvTanHalfFOV,View_PrevTanAndInvTanHalfFOV,View_GlintLUTParameters0,View_GlintLUTParameters1,View_bShadingEnergyConservation,View_bShadingEnergyPreservation,View_RectLightAtlasSizeAndInvSize,View_RectLightAtlasMaxMipLevel,View_IESAtlasSizeAndInvSize,View_TLASRelativePreViewTranslation,View_TLASViewTilePosition,View_MaterialTextureBilinearWrapedSampler,View_MaterialTextureBilinearClampedSampler,View_VolumetricLightmapIndirectionTexture,View_VolumetricLightmapBrickAmbientVector,View_VolumetricLightmapBrickSHCoefficients0,View_VolumetricLightmapBrickSHCoefficients1,View_VolumetricLightmapBrickSHCoefficients2,View_VolumetricLightmapBrickSHCoefficients3,View_VolumetricLightmapBrickSHCoefficients4,View_VolumetricLightmapBrickSHCoefficients5,View_SkyBentNormalBrickTexture,View_DirectionalLightShadowingBrickTexture,View_VolumetricLightmapBrickAmbientVectorSampler,View_VolumetricLightmapTextureSampler0,View_VolumetricLightmapTextureSampler1,View_VolumetricLightmapTextureSampler2,View_VolumetricLightmapTextureSampler3,View_VolumetricLightmapTextureSampler4,View_VolumetricLightmapTextureSampler5,View_SkyBentNormalTextureSampler,View_DirectionalLightShadowingTextureSampler,View_GlobalDistanceFieldPageAtlasTexture,View_GlobalDistanceFieldCoverageAtlasTexture,View_GlobalDistanceFieldPageTableTexture,View_GlobalDistanceFieldMipTexture,View_GlobalDistanceFieldPageAtlasTextureSampler,View_GlobalDistanceFieldCoverageAtlasTextureSampler,View_GlobalDistanceFieldMipTextureSampler,View_AtmosphereTransmittanceTexture,View_AtmosphereTransmittanceTextureSampler,View_AtmosphereIrradianceTexture,View_AtmosphereIrradianceTextureSampler,View_AtmosphereInscatterTexture,View_AtmosphereInscatterTextureSampler,View_PerlinNoiseGradientTexture,View_PerlinNoiseGradientTextureSampler,View_PerlinNoise3DTexture,View_PerlinNoise3DTextureSampler,View_SobolSamplingTexture,View_SharedPointWrappedSampler,View_SharedPointClampedSampler,View_SharedBilinearWrappedSampler,View_SharedBilinearClampedSampler,View_SharedBilinearAnisoClampedSampler,View_SharedTrilinearWrappedSampler,View_SharedTrilinearClampedSampler,View_PreIntegratedBRDF,View_PreIntegratedBRDFSampler,View_SkyIrradianceEnvironmentMap,View_TransmittanceLutTexture,View_TransmittanceLutTextureSampler,View_SkyViewLutTexture,View_SkyViewLutTextureSampler,View_DistantSkyLightLutTexture,View_DistantSkyLightLutTextureSampler,View_CameraAerialPerspectiveVolume,View_CameraAerialPerspectiveVolumeSampler,View_CameraAerialPerspectiveVolumeMieOnly,View_CameraAerialPerspectiveVolumeMieOnlySampler,View_CameraAerialPerspectiveVolumeRayOnly,View_CameraAerialPerspectiveVolumeRayOnlySampler,View_HairScatteringLUTTexture,View_HairScatteringLUTSampler,View_GGXLTCMatTexture,View_GGXLTCMatSampler,View_GGXLTCAmpTexture,View_GGXLTCAmpSampler,View_SheenLTCTexture,View_SheenLTCSampler,View_ShadingEnergyGGXSpecTexture,View_ShadingEnergyGGXGlassTexture,View_ShadingEnergyClothSpecTexture,View_ShadingEnergyDiffuseTexture,View_ShadingEnergySampler,View_GlintTexture,View_GlintSampler,View_SimpleVolumeTexture,View_SimpleVolumeTextureSampler,View_SimpleVolumeEnvTexture,View_SimpleVolumeEnvTextureSampler,View_SSProfilesTexture,View_SSProfilesSampler,View_SSProfilesTransmissionSampler,View_SSProfilesPreIntegratedTexture,View_SSProfilesPreIntegratedSampler,View_SpecularProfileTexture,View_SpecularProfileSampler,View_WaterIndirection,View_WaterData,View_RectLightAtlasTexture,View_RectLightAtlasSampler,View_IESAtlasTexture,View_IESAtlasSampler,View_LandscapeWeightmapSampler,View_LandscapeIndirection,View_LandscapePerComponentData,View_VTFeedbackBuffer,View_PhysicsFieldClipmapBuffer,};

#line 3 "/Engine/Generated/UniformBuffers/Primitive.ush"
cbuffer  UniformBufferConstants_Primitive 
{
	 uint  Primitive_Flags;
	 uint  Primitive_InstanceSceneDataOffset;
	 uint  Primitive_NumInstanceSceneDataEntries;
	 int  Primitive_SingleCaptureIndex;
	 float3  Primitive_TilePosition;
	 uint  Primitive_PrimitiveComponentId;
	 float4x4  Primitive_LocalToRelativeWorld;
	 float4x4  Primitive_RelativeWorldToLocal;
	 float4x4  Primitive_PreviousLocalToRelativeWorld;
	 float4x4  Primitive_PreviousRelativeWorldToLocal;
	 float4x4  Primitive_WorldToPreviousWorld;
	 float3  Primitive_InvNonUniformScale;
	 float  Primitive_ObjectBoundsX;
	 float4  Primitive_ObjectRelativeWorldPositionAndRadius;
	 float3  Primitive_ActorRelativeWorldPosition;
	 uint  Primitive_LightmapUVIndex;
	 float3  Primitive_ObjectOrientation;
	 uint  Primitive_LightmapDataIndex;
	 float4  Primitive_NonUniformScale;
	 float3  Primitive_PreSkinnedLocalBoundsMin;
	 uint  Primitive_NaniteResourceID;
	 float3  Primitive_PreSkinnedLocalBoundsMax;
	 uint  Primitive_NaniteHierarchyOffset;
	 float3  Primitive_LocalObjectBoundsMin;
	 float  Primitive_ObjectBoundsY;
	 float3  Primitive_LocalObjectBoundsMax;
	 float  Primitive_ObjectBoundsZ;
	 float3  Primitive_InstanceLocalBoundsCenter;
	 uint  Primitive_InstancePayloadDataOffset;
	 float3  Primitive_InstanceLocalBoundsExtent;
	 uint  Primitive_InstancePayloadDataStride;
	 uint  Primitive_InstancePayloadExtensionSize;
	 uint  PrePadding_Primitive_532;
	 uint  PrePadding_Primitive_536;
	 uint  PrePadding_Primitive_540;
	 float3  Primitive_WireframeColor;
	 uint  Primitive_PackedNaniteFlags;
	 float3  Primitive_LevelColor;
	 int  Primitive_PersistentPrimitiveIndex;
	 float2  Primitive_InstanceDrawDistanceMinMaxSquared;
	 float  Primitive_InstanceWPODisableDistanceSquared;
	 uint  Primitive_NaniteRayTracingDataOffset;
	 float  Primitive_MaxWPOExtent;
	 float  Primitive_MinMaterialDisplacement;
	 float  Primitive_MaxMaterialDisplacement;
	 uint  Primitive_CustomStencilValueAndMask;
	 uint  Primitive_VisibilityFlags;
	 uint  PrePadding_Primitive_612;
	 uint  PrePadding_Primitive_616;
	 uint  PrePadding_Primitive_620;
	 float4  Primitive_CustomPrimitiveData[9];
}

#line 57 "/Engine/Generated/UniformBuffers/Primitive.ush"
static const struct
{
	 uint  Flags;
	 uint  InstanceSceneDataOffset;
	 uint  NumInstanceSceneDataEntries;
	 int  SingleCaptureIndex;
	 float3  TilePosition;
	 uint  PrimitiveComponentId;
	 float4x4  LocalToRelativeWorld;
	 float4x4  RelativeWorldToLocal;
	 float4x4  PreviousLocalToRelativeWorld;
	 float4x4  PreviousRelativeWorldToLocal;
	 float4x4  WorldToPreviousWorld;
	 float3  InvNonUniformScale;
	 float  ObjectBoundsX;
	 float4  ObjectRelativeWorldPositionAndRadius;
	 float3  ActorRelativeWorldPosition;
	 uint  LightmapUVIndex;
	 float3  ObjectOrientation;
	 uint  LightmapDataIndex;
	 float4  NonUniformScale;
	 float3  PreSkinnedLocalBoundsMin;
	 uint  NaniteResourceID;
	 float3  PreSkinnedLocalBoundsMax;
	 uint  NaniteHierarchyOffset;
	 float3  LocalObjectBoundsMin;
	 float  ObjectBoundsY;
	 float3  LocalObjectBoundsMax;
	 float  ObjectBoundsZ;
	 float3  InstanceLocalBoundsCenter;
	 uint  InstancePayloadDataOffset;
	 float3  InstanceLocalBoundsExtent;
	 uint  InstancePayloadDataStride;
	 uint  InstancePayloadExtensionSize;
	 float3  WireframeColor;
	 uint  PackedNaniteFlags;
	 float3  LevelColor;
	 int  PersistentPrimitiveIndex;
	 float2  InstanceDrawDistanceMinMaxSquared;
	 float  InstanceWPODisableDistanceSquared;
	 uint  NaniteRayTracingDataOffset;
	 float  MaxWPOExtent;
	 float  MinMaterialDisplacement;
	 float  MaxMaterialDisplacement;
	 uint  CustomStencilValueAndMask;
	 uint  VisibilityFlags;
	 float4  CustomPrimitiveData[9];
} Primitive = {Primitive_Flags,Primitive_InstanceSceneDataOffset,Primitive_NumInstanceSceneDataEntries,Primitive_SingleCaptureIndex,Primitive_TilePosition,Primitive_PrimitiveComponentId,Primitive_LocalToRelativeWorld,Primitive_RelativeWorldToLocal,Primitive_PreviousLocalToRelativeWorld,Primitive_PreviousRelativeWorldToLocal,Primitive_WorldToPreviousWorld,Primitive_InvNonUniformScale,Primitive_ObjectBoundsX,Primitive_ObjectRelativeWorldPositionAndRadius,Primitive_ActorRelativeWorldPosition,Primitive_LightmapUVIndex,Primitive_ObjectOrientation,Primitive_LightmapDataIndex,Primitive_NonUniformScale,Primitive_PreSkinnedLocalBoundsMin,Primitive_NaniteResourceID,Primitive_PreSkinnedLocalBoundsMax,Primitive_NaniteHierarchyOffset,Primitive_LocalObjectBoundsMin,Primitive_ObjectBoundsY,Primitive_LocalObjectBoundsMax,Primitive_ObjectBoundsZ,Primitive_InstanceLocalBoundsCenter,Primitive_InstancePayloadDataOffset,Primitive_InstanceLocalBoundsExtent,Primitive_InstancePayloadDataStride,Primitive_InstancePayloadExtensionSize,Primitive_WireframeColor,Primitive_PackedNaniteFlags,Primitive_LevelColor,Primitive_PersistentPrimitiveIndex,Primitive_InstanceDrawDistanceMinMaxSquared,Primitive_InstanceWPODisableDistanceSquared,Primitive_NaniteRayTracingDataOffset,Primitive_MaxWPOExtent,Primitive_MinMaterialDisplacement,Primitive_MaxMaterialDisplacement,Primitive_CustomStencilValueAndMask,Primitive_VisibilityFlags,Primitive_CustomPrimitiveData,};

#line 3 "/Engine/Generated/UniformBuffers/NiagaraSpriteVFLooseParameters.ush"
cbuffer  UniformBufferConstants_NiagaraSpriteVFLooseParameters 
{
	 uint  NiagaraSpriteVFLooseParameters_NumCutoutVerticesPerFrame;
	 uint  NiagaraSpriteVFLooseParameters_NiagaraFloatDataStride;
	 uint  NiagaraSpriteVFLooseParameters_ParticleAlignmentMode;
	 uint  NiagaraSpriteVFLooseParameters_ParticleFacingMode;
	 uint  NiagaraSpriteVFLooseParameters_SortedIndicesOffset;
	 uint  NiagaraSpriteVFLooseParameters_IndirectArgsOffset;
	 uint BindlessResource_NiagaraSpriteVFLooseParameters_CutoutGeometry ;
	 uint  PrePadding_NiagaraSpriteVFLooseParameters_28;
	 uint BindlessResource_NiagaraSpriteVFLooseParameters_NiagaraParticleDataFloat ;
	 uint  PrePadding_NiagaraSpriteVFLooseParameters_36;
	 uint BindlessResource_NiagaraSpriteVFLooseParameters_NiagaraParticleDataHalf ;
	 uint  PrePadding_NiagaraSpriteVFLooseParameters_44;
	 uint BindlessResource_NiagaraSpriteVFLooseParameters_SortedIndices ;
	 uint  PrePadding_NiagaraSpriteVFLooseParameters_52;
	 uint BindlessResource_NiagaraSpriteVFLooseParameters_IndirectArgsBuffer ;
}

#line 21 "/Engine/Generated/UniformBuffers/NiagaraSpriteVFLooseParameters.ush"
Buffer<float2>  NiagaraSpriteVFLooseParameters_CutoutGeometry;

#line 22 "/Engine/Generated/UniformBuffers/NiagaraSpriteVFLooseParameters.ush"
Buffer<float>  NiagaraSpriteVFLooseParameters_NiagaraParticleDataFloat;

#line 23 "/Engine/Generated/UniformBuffers/NiagaraSpriteVFLooseParameters.ush"
Buffer<float>  NiagaraSpriteVFLooseParameters_NiagaraParticleDataHalf;

#line 24 "/Engine/Generated/UniformBuffers/NiagaraSpriteVFLooseParameters.ush"
Buffer<uint>  NiagaraSpriteVFLooseParameters_SortedIndices;

#line 25 "/Engine/Generated/UniformBuffers/NiagaraSpriteVFLooseParameters.ush"
Buffer<uint>  NiagaraSpriteVFLooseParameters_IndirectArgsBuffer;

#line 26 "/Engine/Generated/UniformBuffers/NiagaraSpriteVFLooseParameters.ush"
static const struct
{
	 uint  NumCutoutVerticesPerFrame;
	 uint  NiagaraFloatDataStride;
	 uint  ParticleAlignmentMode;
	 uint  ParticleFacingMode;
	 uint  SortedIndicesOffset;
	 uint  IndirectArgsOffset;
	Buffer<float2> CutoutGeometry;
	Buffer<float> NiagaraParticleDataFloat;
	Buffer<float> NiagaraParticleDataHalf;
	Buffer<uint> SortedIndices;
	Buffer<uint> IndirectArgsBuffer;
} NiagaraSpriteVFLooseParameters = {NiagaraSpriteVFLooseParameters_NumCutoutVerticesPerFrame,NiagaraSpriteVFLooseParameters_NiagaraFloatDataStride,NiagaraSpriteVFLooseParameters_ParticleAlignmentMode,NiagaraSpriteVFLooseParameters_ParticleFacingMode,NiagaraSpriteVFLooseParameters_SortedIndicesOffset,NiagaraSpriteVFLooseParameters_IndirectArgsOffset,NiagaraSpriteVFLooseParameters_CutoutGeometry,NiagaraSpriteVFLooseParameters_NiagaraParticleDataFloat,NiagaraSpriteVFLooseParameters_NiagaraParticleDataHalf,NiagaraSpriteVFLooseParameters_SortedIndices,NiagaraSpriteVFLooseParameters_IndirectArgsBuffer,};

#line 3 "/Engine/Generated/UniformBuffers/NiagaraSpriteVF.ush"
cbuffer  UniformBufferConstants_NiagaraSpriteVF 
{
	 uint  NiagaraSpriteVF_bLocalSpace;
	 uint  PrePadding_NiagaraSpriteVF_4;
	 uint  PrePadding_NiagaraSpriteVF_8;
	 uint  PrePadding_NiagaraSpriteVF_12;
	 float4  NiagaraSpriteVF_TangentSelector;
	 float4  NiagaraSpriteVF_NormalsSphereCenter;
	 float4  NiagaraSpriteVF_NormalsCylinderUnitDirection;
	 float4  NiagaraSpriteVF_SubImageSize;
	 float3  NiagaraSpriteVF_CameraFacingBlend;
	 float  NiagaraSpriteVF_RemoveHMDRoll;
	 float4  NiagaraSpriteVF_MacroUVParameters;
	 float  NiagaraSpriteVF_RotationScale;
	 float  NiagaraSpriteVF_RotationBias;
	 float  NiagaraSpriteVF_NormalsType;
	 float  NiagaraSpriteVF_DeltaSeconds;
	 float2  NiagaraSpriteVF_DefaultPivotOffset;
	 float2  NiagaraSpriteVF_DefaultPrevPivotOffset;
	 int  NiagaraSpriteVF_PositionDataOffset;
	 int  NiagaraSpriteVF_PrevPositionDataOffset;
	 int  NiagaraSpriteVF_VelocityDataOffset;
	 int  NiagaraSpriteVF_PrevVelocityDataOffset;
	 int  NiagaraSpriteVF_RotationDataOffset;
	 int  NiagaraSpriteVF_PrevRotationDataOffset;
	 int  NiagaraSpriteVF_SizeDataOffset;
	 int  NiagaraSpriteVF_PrevSizeDataOffset;
	 int  NiagaraSpriteVF_SubimageDataOffset;
	 int  NiagaraSpriteVF_ColorDataOffset;
	 uint  NiagaraSpriteVF_MaterialParamValidMask;
	 int  NiagaraSpriteVF_MaterialParamDataOffset;
	 int  NiagaraSpriteVF_MaterialParam1DataOffset;
	 int  NiagaraSpriteVF_MaterialParam2DataOffset;
	 int  NiagaraSpriteVF_MaterialParam3DataOffset;
	 int  NiagaraSpriteVF_FacingDataOffset;
	 int  NiagaraSpriteVF_PrevFacingDataOffset;
	 int  NiagaraSpriteVF_AlignmentDataOffset;
	 int  NiagaraSpriteVF_PrevAlignmentDataOffset;
	 int  NiagaraSpriteVF_SubImageBlendMode;
	 int  NiagaraSpriteVF_CameraOffsetDataOffset;
	 int  NiagaraSpriteVF_PrevCameraOffsetDataOffset;
	 int  NiagaraSpriteVF_UVScaleDataOffset;
	 int  NiagaraSpriteVF_PivotOffsetDataOffset;
	 int  NiagaraSpriteVF_PrevPivotOffsetDataOffset;
	 int  NiagaraSpriteVF_NormalizedAgeDataOffset;
	 int  NiagaraSpriteVF_MaterialRandomDataOffset;
	 int  PrePadding_NiagaraSpriteVF_252;
	 float4  NiagaraSpriteVF_DefaultPos;
	 float4  NiagaraSpriteVF_DefaultPrevPos;
	 float2  NiagaraSpriteVF_DefaultSize;
	 float2  NiagaraSpriteVF_DefaultPrevSize;
	 float2  NiagaraSpriteVF_DefaultUVScale;
	 float  PrePadding_NiagaraSpriteVF_312;
	 float  PrePadding_NiagaraSpriteVF_316;
	 float3  NiagaraSpriteVF_DefaultVelocity;
	 float  PrePadding_NiagaraSpriteVF_332;
	 float3  NiagaraSpriteVF_DefaultPrevVelocity;
	 float  PrePadding_NiagaraSpriteVF_348;
	 float3  NiagaraSpriteVF_SystemLWCTile;
	 float  NiagaraSpriteVF_DefaultRotation;
	 float  NiagaraSpriteVF_DefaultPrevRotation;
	 float  PrePadding_NiagaraSpriteVF_372;
	 float  PrePadding_NiagaraSpriteVF_376;
	 float  PrePadding_NiagaraSpriteVF_380;
	 float4  NiagaraSpriteVF_DefaultColor;
	 float  NiagaraSpriteVF_DefaultMatRandom;
	 float  NiagaraSpriteVF_DefaultCamOffset;
	 float  NiagaraSpriteVF_DefaultPrevCamOffset;
	 float  NiagaraSpriteVF_DefaultNormAge;
	 float  NiagaraSpriteVF_DefaultSubImage;
	 float  PrePadding_NiagaraSpriteVF_420;
	 float  PrePadding_NiagaraSpriteVF_424;
	 float  PrePadding_NiagaraSpriteVF_428;
	 float4  NiagaraSpriteVF_DefaultFacing;
	 float4  NiagaraSpriteVF_DefaultPrevFacing;
	 float4  NiagaraSpriteVF_DefaultAlignment;
	 float4  NiagaraSpriteVF_DefaultPrevAlignment;
	 float4  NiagaraSpriteVF_DefaultDynamicMaterialParameter0;
	 float4  NiagaraSpriteVF_DefaultDynamicMaterialParameter1;
	 float4  NiagaraSpriteVF_DefaultDynamicMaterialParameter2;
	 float4  NiagaraSpriteVF_DefaultDynamicMaterialParameter3;
	 int  NiagaraSpriteVF_PixelCoverageEnabled;
	 int  PrePadding_NiagaraSpriteVF_564;
	 int  PrePadding_NiagaraSpriteVF_568;
	 int  PrePadding_NiagaraSpriteVF_572;
	 float4  NiagaraSpriteVF_PixelCoverageColorBlend;
	 int  NiagaraSpriteVF_AccurateMotionVectors;
}

#line 91 "/Engine/Generated/UniformBuffers/NiagaraSpriteVF.ush"
static const struct
{
	 uint  bLocalSpace;
	 float4  TangentSelector;
	 float4  NormalsSphereCenter;
	 float4  NormalsCylinderUnitDirection;
	 float4  SubImageSize;
	 float3  CameraFacingBlend;
	 float  RemoveHMDRoll;
	 float4  MacroUVParameters;
	 float  RotationScale;
	 float  RotationBias;
	 float  NormalsType;
	 float  DeltaSeconds;
	 float2  DefaultPivotOffset;
	 float2  DefaultPrevPivotOffset;
	 int  PositionDataOffset;
	 int  PrevPositionDataOffset;
	 int  VelocityDataOffset;
	 int  PrevVelocityDataOffset;
	 int  RotationDataOffset;
	 int  PrevRotationDataOffset;
	 int  SizeDataOffset;
	 int  PrevSizeDataOffset;
	 int  SubimageDataOffset;
	 int  ColorDataOffset;
	 uint  MaterialParamValidMask;
	 int  MaterialParamDataOffset;
	 int  MaterialParam1DataOffset;
	 int  MaterialParam2DataOffset;
	 int  MaterialParam3DataOffset;
	 int  FacingDataOffset;
	 int  PrevFacingDataOffset;
	 int  AlignmentDataOffset;
	 int  PrevAlignmentDataOffset;
	 int  SubImageBlendMode;
	 int  CameraOffsetDataOffset;
	 int  PrevCameraOffsetDataOffset;
	 int  UVScaleDataOffset;
	 int  PivotOffsetDataOffset;
	 int  PrevPivotOffsetDataOffset;
	 int  NormalizedAgeDataOffset;
	 int  MaterialRandomDataOffset;
	 float4  DefaultPos;
	 float4  DefaultPrevPos;
	 float2  DefaultSize;
	 float2  DefaultPrevSize;
	 float2  DefaultUVScale;
	 float3  DefaultVelocity;
	 float3  DefaultPrevVelocity;
	 float3  SystemLWCTile;
	 float  DefaultRotation;
	 float  DefaultPrevRotation;
	 float4  DefaultColor;
	 float  DefaultMatRandom;
	 float  DefaultCamOffset;
	 float  DefaultPrevCamOffset;
	 float  DefaultNormAge;
	 float  DefaultSubImage;
	 float4  DefaultFacing;
	 float4  DefaultPrevFacing;
	 float4  DefaultAlignment;
	 float4  DefaultPrevAlignment;
	 float4  DefaultDynamicMaterialParameter0;
	 float4  DefaultDynamicMaterialParameter1;
	 float4  DefaultDynamicMaterialParameter2;
	 float4  DefaultDynamicMaterialParameter3;
	 int  PixelCoverageEnabled;
	 float4  PixelCoverageColorBlend;
	 int  AccurateMotionVectors;
} NiagaraSpriteVF = {NiagaraSpriteVF_bLocalSpace,NiagaraSpriteVF_TangentSelector,NiagaraSpriteVF_NormalsSphereCenter,NiagaraSpriteVF_NormalsCylinderUnitDirection,NiagaraSpriteVF_SubImageSize,NiagaraSpriteVF_CameraFacingBlend,NiagaraSpriteVF_RemoveHMDRoll,NiagaraSpriteVF_MacroUVParameters,NiagaraSpriteVF_RotationScale,NiagaraSpriteVF_RotationBias,NiagaraSpriteVF_NormalsType,NiagaraSpriteVF_DeltaSeconds,NiagaraSpriteVF_DefaultPivotOffset,NiagaraSpriteVF_DefaultPrevPivotOffset,NiagaraSpriteVF_PositionDataOffset,NiagaraSpriteVF_PrevPositionDataOffset,NiagaraSpriteVF_VelocityDataOffset,NiagaraSpriteVF_PrevVelocityDataOffset,NiagaraSpriteVF_RotationDataOffset,NiagaraSpriteVF_PrevRotationDataOffset,NiagaraSpriteVF_SizeDataOffset,NiagaraSpriteVF_PrevSizeDataOffset,NiagaraSpriteVF_SubimageDataOffset,NiagaraSpriteVF_ColorDataOffset,NiagaraSpriteVF_MaterialParamValidMask,NiagaraSpriteVF_MaterialParamDataOffset,NiagaraSpriteVF_MaterialParam1DataOffset,NiagaraSpriteVF_MaterialParam2DataOffset,NiagaraSpriteVF_MaterialParam3DataOffset,NiagaraSpriteVF_FacingDataOffset,NiagaraSpriteVF_PrevFacingDataOffset,NiagaraSpriteVF_AlignmentDataOffset,NiagaraSpriteVF_PrevAlignmentDataOffset,NiagaraSpriteVF_SubImageBlendMode,NiagaraSpriteVF_CameraOffsetDataOffset,NiagaraSpriteVF_PrevCameraOffsetDataOffset,NiagaraSpriteVF_UVScaleDataOffset,NiagaraSpriteVF_PivotOffsetDataOffset,NiagaraSpriteVF_PrevPivotOffsetDataOffset,NiagaraSpriteVF_NormalizedAgeDataOffset,NiagaraSpriteVF_MaterialRandomDataOffset,NiagaraSpriteVF_DefaultPos,NiagaraSpriteVF_DefaultPrevPos,NiagaraSpriteVF_DefaultSize,NiagaraSpriteVF_DefaultPrevSize,NiagaraSpriteVF_DefaultUVScale,NiagaraSpriteVF_DefaultVelocity,NiagaraSpriteVF_DefaultPrevVelocity,NiagaraSpriteVF_SystemLWCTile,NiagaraSpriteVF_DefaultRotation,NiagaraSpriteVF_DefaultPrevRotation,NiagaraSpriteVF_DefaultColor,NiagaraSpriteVF_DefaultMatRandom,NiagaraSpriteVF_DefaultCamOffset,NiagaraSpriteVF_DefaultPrevCamOffset,NiagaraSpriteVF_DefaultNormAge,NiagaraSpriteVF_DefaultSubImage,NiagaraSpriteVF_DefaultFacing,NiagaraSpriteVF_DefaultPrevFacing,NiagaraSpriteVF_DefaultAlignment,NiagaraSpriteVF_DefaultPrevAlignment,NiagaraSpriteVF_DefaultDynamicMaterialParameter0,NiagaraSpriteVF_DefaultDynamicMaterialParameter1,NiagaraSpriteVF_DefaultDynamicMaterialParameter2,NiagaraSpriteVF_DefaultDynamicMaterialParameter3,NiagaraSpriteVF_PixelCoverageEnabled,NiagaraSpriteVF_PixelCoverageColorBlend,NiagaraSpriteVF_AccurateMotionVectors,};

#line 3 "/Engine/Generated/UniformBuffers/MaterialCollection0.ush"
cbuffer  UniformBufferConstants_MaterialCollection0 
{
	 float4  MaterialCollection0_Vectors[2];
}

#line 7 "/Engine/Generated/UniformBuffers/MaterialCollection0.ush"
static const struct
{
	 float4  Vectors[2];
} MaterialCollection0 = {MaterialCollection0_Vectors,};

#line 3 "/Engine/Generated/UniformBuffers/Material.ush"
cbuffer  UniformBufferConstants_Material 
{
	 float4  Material_PreshaderBuffer[17];
	 uint BindlessResource_Material_Texture2D_0 ;
	 uint  PrePadding_Material_276;
	 uint BindlessSampler_Material_Texture2D_0Sampler ;
	 uint  PrePadding_Material_284;
	 uint BindlessResource_Material_Texture2D_1 ;
	 uint  PrePadding_Material_292;
	 uint BindlessSampler_Material_Texture2D_1Sampler ;
	 uint  PrePadding_Material_300;
	 uint BindlessResource_Material_Texture2D_2 ;
	 uint  PrePadding_Material_308;
	 uint BindlessSampler_Material_Texture2D_2Sampler ;
	 uint  PrePadding_Material_316;
	 uint BindlessResource_Material_Texture2D_3 ;
	 uint  PrePadding_Material_324;
	 uint BindlessSampler_Material_Texture2D_3Sampler ;
	 uint  PrePadding_Material_332;
	 uint BindlessResource_Material_Texture2D_4 ;
	 uint  PrePadding_Material_340;
	 uint BindlessSampler_Material_Texture2D_4Sampler ;
	 uint  PrePadding_Material_348;
	 uint BindlessResource_Material_Texture2D_5 ;
	 uint  PrePadding_Material_356;
	 uint BindlessSampler_Material_Texture2D_5Sampler ;
	 uint  PrePadding_Material_364;
	 uint BindlessSampler_Material_Wrap_WorldGroupSettings ;
	 uint  PrePadding_Material_372;
	 uint BindlessSampler_Material_Clamp_WorldGroupSettings ;
}

#line 34 "/Engine/Generated/UniformBuffers/Material.ush"
Texture2D  Material_Texture2D_0;

#line 35 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Texture2D_0Sampler;

#line 36 "/Engine/Generated/UniformBuffers/Material.ush"
Texture2D  Material_Texture2D_1;

#line 37 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Texture2D_1Sampler;

#line 38 "/Engine/Generated/UniformBuffers/Material.ush"
Texture2D  Material_Texture2D_2;

#line 39 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Texture2D_2Sampler;

#line 40 "/Engine/Generated/UniformBuffers/Material.ush"
Texture2D  Material_Texture2D_3;

#line 41 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Texture2D_3Sampler;

#line 42 "/Engine/Generated/UniformBuffers/Material.ush"
Texture2D  Material_Texture2D_4;

#line 43 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Texture2D_4Sampler;

#line 44 "/Engine/Generated/UniformBuffers/Material.ush"
Texture2D  Material_Texture2D_5;

#line 45 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Texture2D_5Sampler;

#line 46 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Wrap_WorldGroupSettings;

#line 47 "/Engine/Generated/UniformBuffers/Material.ush"
SamplerState  Material_Clamp_WorldGroupSettings;

#line 48 "/Engine/Generated/UniformBuffers/Material.ush"
static const struct
{
	 float4  PreshaderBuffer[17];
	Texture2D Texture2D_0;
	SamplerState Texture2D_0Sampler;
	Texture2D Texture2D_1;
	SamplerState Texture2D_1Sampler;
	Texture2D Texture2D_2;
	SamplerState Texture2D_2Sampler;
	Texture2D Texture2D_3;
	SamplerState Texture2D_3Sampler;
	Texture2D Texture2D_4;
	SamplerState Texture2D_4Sampler;
	Texture2D Texture2D_5;
	SamplerState Texture2D_5Sampler;
	SamplerState Wrap_WorldGroupSettings;
	SamplerState Clamp_WorldGroupSettings;
} Material = {Material_PreshaderBuffer,Material_Texture2D_0,Material_Texture2D_0Sampler,Material_Texture2D_1,Material_Texture2D_1Sampler,Material_Texture2D_2,Material_Texture2D_2Sampler,Material_Texture2D_3,Material_Texture2D_3Sampler,Material_Texture2D_4,Material_Texture2D_4Sampler,Material_Texture2D_5,Material_Texture2D_5Sampler,Material_Wrap_WorldGroupSettings,Material_Clamp_WorldGroupSettings,};

#line 12 "/Engine/Private/CommonViewUniformBuffer.ush"
float2 GetTanHalfFieldOfView()
{
	return View.TanAndInvTanHalfFOV.xy;
}

#line 1 "/Engine/Generated/GeneratedInstancedStereo.ush"
struct ViewState
{
	float4x4 TranslatedWorldToClip;
	float4x4 RelativeWorldToClip;
	float4x4 ClipToRelativeWorld;
	float4x4 TranslatedWorldToView;
	float4x4 ViewToTranslatedWorld;
	float4x4 TranslatedWorldToCameraView;
	float4x4 CameraViewToTranslatedWorld;
	float4x4 ViewToClip;
	float4x4 ViewToClipNoAA;
	float4x4 ClipToView;
	float4x4 ClipToTranslatedWorld;
	float4x4 SVPositionToTranslatedWorld;
	float4x4 ScreenToRelativeWorld;
	float4x4 ScreenToTranslatedWorld;
	float4x4 MobileMultiviewShadowTransform;
	float3 ViewTilePosition;
	float3 MatrixTilePosition;
	float3 ViewForward;
	float3 ViewUp;
	float3 ViewRight;
	float3 HMDViewNoRollUp;
	float3 HMDViewNoRollRight;
	float4 InvDeviceZToWorldZTransform;
	float4 ScreenPositionScaleBias;
	float3 RelativeWorldCameraOrigin;
	float3 TranslatedWorldCameraOrigin;
	float3 RelativeWorldViewOrigin;
	float3 RelativePreViewTranslation;
	float4x4 PrevViewToClip;
	float4x4 PrevClipToView;
	float4x4 PrevTranslatedWorldToClip;
	float4x4 PrevTranslatedWorldToView;
	float4x4 PrevViewToTranslatedWorld;
	float4x4 PrevTranslatedWorldToCameraView;
	float4x4 PrevCameraViewToTranslatedWorld;
	float3 PrevTranslatedWorldCameraOrigin;
	float3 PrevRelativeWorldCameraOrigin;
	float3 PrevRelativeWorldViewOrigin;
	float3 RelativePrevPreViewTranslation;
	float4x4 PrevClipToRelativeWorld;
	float4x4 PrevScreenToTranslatedWorld;
	float4x4 ClipToPrevClip;
	float4x4 ClipToPrevClipWithAA;
	float4 TemporalAAJitter;
	float4 GlobalClippingPlane;
	float2 FieldOfViewWideAngles;
	float2 PrevFieldOfViewWideAngles;
	float4 ViewRectMin;
	float4 ViewSizeAndInvSize;
	uint4 ViewRectMinAndSize;
	float4 LightProbeSizeRatioAndInvSizeRatio;
	float4 BufferSizeAndInvSize;
	float4 BufferBilinearUVMinMax;
	float4 ScreenToViewSpace;
	float2 BufferToSceneTextureScale;
	float2 ResolutionFractionAndInv;
	int NumSceneColorMSAASamples;
	float ProjectionDepthThicknessScale;
	float PreExposure;
	float OneOverPreExposure;
	float4 DiffuseOverrideParameter;
	float4 SpecularOverrideParameter;
	float4 NormalOverrideParameter;
	float2 RoughnessOverrideParameter;
	float PrevFrameGameTime;
	float PrevFrameRealTime;
	float OutOfBoundsMask;
	float3 WorldCameraMovementSinceLastFrame;
	float CullingSign;
	float NearPlane;
	float GameTime;
	float RealTime;
	float DeltaTime;
	float MaterialTextureMipBias;
	float MaterialTextureDerivativeMultiply;
	uint Random;
	uint FrameNumber;
	uint FrameCounter;
	uint StateFrameIndexMod8;
	uint StateFrameIndex;
	uint DebugViewModeMask;
	uint WorldIsPaused;
	float CameraCut;
	float UnlitViewmodeMask;
	float4 DirectionalLightColor;
	float3 DirectionalLightDirection;
	float4 TranslucencyLightingVolumeMin[2];
	float4 TranslucencyLightingVolumeInvSize[2];
	float4 TemporalAAParams;
	float4 CircleDOFParams;
	float DepthOfFieldSensorWidth;
	float DepthOfFieldFocalDistance;
	float DepthOfFieldScale;
	float DepthOfFieldFocalLength;
	float DepthOfFieldFocalRegion;
	float DepthOfFieldNearTransitionRegion;
	float DepthOfFieldFarTransitionRegion;
	float MotionBlurNormalizedToPixel;
	float GeneralPurposeTweak;
	float GeneralPurposeTweak2;
	float DemosaicVposOffset;
	float DecalDepthBias;
	float3 IndirectLightingColorScale;
	float3 PrecomputedIndirectLightingColorScale;
	float3 PrecomputedIndirectSpecularColorScale;
	float4 AtmosphereLightDirection[2];
	float4 AtmosphereLightIlluminanceOnGroundPostTransmittance[2];
	float4 AtmosphereLightIlluminanceOuterSpace[2];
	float4 AtmosphereLightDiscLuminance[2];
	float4 AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];
	float4 SkyViewLutSizeAndInvSize;
	float3 SkyCameraTranslatedWorldOrigin;
	float4 SkyPlanetTranslatedWorldCenterAndViewHeight;
	float4x4 SkyViewLutReferential;
	float4 SkyAtmosphereSkyLuminanceFactor;
	float SkyAtmospherePresentInScene;
	float SkyAtmosphereHeightFogContribution;
	float SkyAtmosphereBottomRadiusKm;
	float SkyAtmosphereTopRadiusKm;
	float4 SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	float SkyAtmosphereAerialPerspectiveStartDepthKm;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	float SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	float SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	float3 NormalCurvatureToRoughnessScaleBias;
	float RenderingReflectionCaptureMask;
	float RealTimeReflectionCapture;
	float RealTimeReflectionCapturePreExposure;
	float4 AmbientCubemapTint;
	float AmbientCubemapIntensity;
	float SkyLightApplyPrecomputedBentNormalShadowingFlag;
	float SkyLightAffectReflectionFlag;
	float SkyLightAffectGlobalIlluminationFlag;
	float4 SkyLightColor;
	float4 MobileSkyIrradianceEnvironmentMap[8];
	float MobilePreviewMode;
	float HMDEyePaddingOffset;
	float ReflectionCubemapMaxMip;
	float ShowDecalsMask;
	uint DistanceFieldAOSpecularOcclusionMode;
	float IndirectCapsuleSelfShadowingIntensity;
	float3 ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	int StereoPassIndex;
	float4 GlobalVolumeTranslatedCenterAndExtent[6];
	float4 GlobalVolumeTranslatedWorldToUVAddAndMul[6];
	float4 GlobalDistanceFieldMipTranslatedWorldToUVScale[6];
	float4 GlobalDistanceFieldMipTranslatedWorldToUVBias[6];
	float GlobalDistanceFieldMipFactor;
	float GlobalDistanceFieldMipTransition;
	int GlobalDistanceFieldClipmapSizeInPages;
	float3 GlobalDistanceFieldInvPageAtlasSize;
	float3 GlobalDistanceFieldInvCoverageAtlasSize;
	float GlobalVolumeDimension;
	float GlobalVolumeTexelSize;
	float MaxGlobalDFAOConeDistance;
	uint NumGlobalSDFClipmaps;
	float CoveredExpandSurfaceScale;
	float NotCoveredExpandSurfaceScale;
	float NotCoveredMinStepScale;
	float DitheredTransparencyStepThreshold;
	float DitheredTransparencyTraceThreshold;
	int2 CursorPosition;
	float bCheckerboardSubsurfaceProfileRendering;
	float3 VolumetricFogInvGridSize;
	float3 VolumetricFogGridZParams;
	float2 VolumetricFogSVPosToVolumeUV;
	float2 VolumetricFogViewGridUVToPrevViewRectUV;
	float2 VolumetricFogPrevViewGridRectUVToResourceUV;
	float2 VolumetricFogPrevUVMax;
	float2 VolumetricFogScreenToResourceUV;
	float2 VolumetricFogUVMax;
	float VolumetricFogMaxDistance;
	float3 VolumetricLightmapWorldToUVScale;
	float3 VolumetricLightmapWorldToUVAdd;
	float3 VolumetricLightmapIndirectionTextureSize;
	float VolumetricLightmapBrickSize;
	float3 VolumetricLightmapBrickTexelSize;
	float IndirectLightingCacheShowFlag;
	float EyeToPixelSpreadAngle;
	float4 XRPassthroughCameraUVs[2];
	float GlobalVirtualTextureMipBias;
	uint VirtualTextureFeedbackShift;
	uint VirtualTextureFeedbackMask;
	uint VirtualTextureFeedbackStride;
	uint VirtualTextureFeedbackJitterOffset;
	uint VirtualTextureFeedbackSampleOffset;
	float4 RuntimeVirtualTextureMipLevel;
	float2 RuntimeVirtualTexturePackHeight;
	float4 RuntimeVirtualTextureDebugParams;
	float OverrideLandscapeLOD;
	int FarShadowStaticMeshLODBias;
	float MinRoughness;
	float4 HairRenderInfo;
	uint EnableSkyLight;
	uint HairRenderInfoBits;
	uint HairComponents;
	float bSubsurfacePostprocessEnabled;
	float4 SSProfilesTextureSizeAndInvSize;
	float4 SSProfilesPreIntegratedTextureSizeAndInvSize;
	float4 SpecularProfileTextureSizeAndInvSize;
	float3 PhysicsFieldClipmapCenter;
	float PhysicsFieldClipmapDistance;
	int PhysicsFieldClipmapResolution;
	int PhysicsFieldClipmapExponent;
	int PhysicsFieldClipmapCount;
	int PhysicsFieldTargetCount;
	int4 PhysicsFieldTargets[32];
	uint GPUSceneViewId;
	float ViewResolutionFraction;
	float SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	float4 TanAndInvTanHalfFOV;
	float4 PrevTanAndInvTanHalfFOV;
	float4 GlintLUTParameters0;
	float4 GlintLUTParameters1;
	FLWCInverseMatrix WorldToClip;
	FLWCMatrix ClipToWorld;
	FLWCMatrix ScreenToWorld;
	FLWCMatrix PrevClipToWorld;
	FLWCVector3 WorldCameraOrigin;
	FLWCVector3 WorldViewOrigin;
	FLWCVector3 PrevWorldCameraOrigin;
	FLWCVector3 PrevWorldViewOrigin;
	FLWCVector3 PreViewTranslation;
	FLWCVector3 PrevPreViewTranslation;
};

#line 230 "/Engine/Generated/GeneratedInstancedStereo.ush"
void FinalizeViewState(inout ViewState InOutView);

#line 231 "/Engine/Generated/GeneratedInstancedStereo.ush"
ViewState GetPrimaryView()
{
	ViewState Result;
	Result.TranslatedWorldToClip = View.TranslatedWorldToClip;
	Result.RelativeWorldToClip = View.RelativeWorldToClip;
	Result.ClipToRelativeWorld = View.ClipToRelativeWorld;
	Result.TranslatedWorldToView = View.TranslatedWorldToView;
	Result.ViewToTranslatedWorld = View.ViewToTranslatedWorld;
	Result.TranslatedWorldToCameraView = View.TranslatedWorldToCameraView;
	Result.CameraViewToTranslatedWorld = View.CameraViewToTranslatedWorld;
	Result.ViewToClip = View.ViewToClip;
	Result.ViewToClipNoAA = View.ViewToClipNoAA;
	Result.ClipToView = View.ClipToView;
	Result.ClipToTranslatedWorld = View.ClipToTranslatedWorld;
	Result.SVPositionToTranslatedWorld = View.SVPositionToTranslatedWorld;
	Result.ScreenToRelativeWorld = View.ScreenToRelativeWorld;
	Result.ScreenToTranslatedWorld = View.ScreenToTranslatedWorld;
	Result.MobileMultiviewShadowTransform = View.MobileMultiviewShadowTransform;
	Result.ViewTilePosition = View.ViewTilePosition;
	Result.MatrixTilePosition = View.MatrixTilePosition;
	Result.ViewForward = View.ViewForward;
	Result.ViewUp = View.ViewUp;
	Result.ViewRight = View.ViewRight;
	Result.HMDViewNoRollUp = View.HMDViewNoRollUp;
	Result.HMDViewNoRollRight = View.HMDViewNoRollRight;
	Result.InvDeviceZToWorldZTransform = View.InvDeviceZToWorldZTransform;
	Result.ScreenPositionScaleBias = View.ScreenPositionScaleBias;
	Result.RelativeWorldCameraOrigin = View.RelativeWorldCameraOrigin;
	Result.TranslatedWorldCameraOrigin = View.TranslatedWorldCameraOrigin;
	Result.RelativeWorldViewOrigin = View.RelativeWorldViewOrigin;
	Result.RelativePreViewTranslation = View.RelativePreViewTranslation;
	Result.PrevViewToClip = View.PrevViewToClip;
	Result.PrevClipToView = View.PrevClipToView;
	Result.PrevTranslatedWorldToClip = View.PrevTranslatedWorldToClip;
	Result.PrevTranslatedWorldToView = View.PrevTranslatedWorldToView;
	Result.PrevViewToTranslatedWorld = View.PrevViewToTranslatedWorld;
	Result.PrevTranslatedWorldToCameraView = View.PrevTranslatedWorldToCameraView;
	Result.PrevCameraViewToTranslatedWorld = View.PrevCameraViewToTranslatedWorld;
	Result.PrevTranslatedWorldCameraOrigin = View.PrevTranslatedWorldCameraOrigin;
	Result.PrevRelativeWorldCameraOrigin = View.PrevRelativeWorldCameraOrigin;
	Result.PrevRelativeWorldViewOrigin = View.PrevRelativeWorldViewOrigin;
	Result.RelativePrevPreViewTranslation = View.RelativePrevPreViewTranslation;
	Result.PrevClipToRelativeWorld = View.PrevClipToRelativeWorld;
	Result.PrevScreenToTranslatedWorld = View.PrevScreenToTranslatedWorld;
	Result.ClipToPrevClip = View.ClipToPrevClip;
	Result.ClipToPrevClipWithAA = View.ClipToPrevClipWithAA;
	Result.TemporalAAJitter = View.TemporalAAJitter;
	Result.GlobalClippingPlane = View.GlobalClippingPlane;
	Result.FieldOfViewWideAngles = View.FieldOfViewWideAngles;
	Result.PrevFieldOfViewWideAngles = View.PrevFieldOfViewWideAngles;
	Result.ViewRectMin = View.ViewRectMin;
	Result.ViewSizeAndInvSize = View.ViewSizeAndInvSize;
	Result.ViewRectMinAndSize = View.ViewRectMinAndSize;
	Result.LightProbeSizeRatioAndInvSizeRatio = View.LightProbeSizeRatioAndInvSizeRatio;
	Result.BufferSizeAndInvSize = View.BufferSizeAndInvSize;
	Result.BufferBilinearUVMinMax = View.BufferBilinearUVMinMax;
	Result.ScreenToViewSpace = View.ScreenToViewSpace;
	Result.BufferToSceneTextureScale = View.BufferToSceneTextureScale;
	Result.ResolutionFractionAndInv = View.ResolutionFractionAndInv;
	Result.NumSceneColorMSAASamples = View.NumSceneColorMSAASamples;
	Result.ProjectionDepthThicknessScale = View.ProjectionDepthThicknessScale;
	Result.PreExposure = View.PreExposure;
	Result.OneOverPreExposure = View.OneOverPreExposure;
	Result.DiffuseOverrideParameter = View.DiffuseOverrideParameter;
	Result.SpecularOverrideParameter = View.SpecularOverrideParameter;
	Result.NormalOverrideParameter = View.NormalOverrideParameter;
	Result.RoughnessOverrideParameter = View.RoughnessOverrideParameter;
	Result.PrevFrameGameTime = View.PrevFrameGameTime;
	Result.PrevFrameRealTime = View.PrevFrameRealTime;
	Result.OutOfBoundsMask = View.OutOfBoundsMask;
	Result.WorldCameraMovementSinceLastFrame = View.WorldCameraMovementSinceLastFrame;
	Result.CullingSign = View.CullingSign;
	Result.NearPlane = View.NearPlane;
	Result.GameTime = View.GameTime;
	Result.RealTime = View.RealTime;
	Result.DeltaTime = View.DeltaTime;
	Result.MaterialTextureMipBias = View.MaterialTextureMipBias;
	Result.MaterialTextureDerivativeMultiply = View.MaterialTextureDerivativeMultiply;
	Result.Random = View.Random;
	Result.FrameNumber = View.FrameNumber;
	Result.FrameCounter = View.FrameCounter;
	Result.StateFrameIndexMod8 = View.StateFrameIndexMod8;
	Result.StateFrameIndex = View.StateFrameIndex;
	Result.DebugViewModeMask = View.DebugViewModeMask;
	Result.WorldIsPaused = View.WorldIsPaused;
	Result.CameraCut = View.CameraCut;
	Result.UnlitViewmodeMask = View.UnlitViewmodeMask;
	Result.DirectionalLightColor = View.DirectionalLightColor;
	Result.DirectionalLightDirection = View.DirectionalLightDirection;
	Result.TranslucencyLightingVolumeMin = View.TranslucencyLightingVolumeMin;
	Result.TranslucencyLightingVolumeInvSize = View.TranslucencyLightingVolumeInvSize;
	Result.TemporalAAParams = View.TemporalAAParams;
	Result.CircleDOFParams = View.CircleDOFParams;
	Result.DepthOfFieldSensorWidth = View.DepthOfFieldSensorWidth;
	Result.DepthOfFieldFocalDistance = View.DepthOfFieldFocalDistance;
	Result.DepthOfFieldScale = View.DepthOfFieldScale;
	Result.DepthOfFieldFocalLength = View.DepthOfFieldFocalLength;
	Result.DepthOfFieldFocalRegion = View.DepthOfFieldFocalRegion;
	Result.DepthOfFieldNearTransitionRegion = View.DepthOfFieldNearTransitionRegion;
	Result.DepthOfFieldFarTransitionRegion = View.DepthOfFieldFarTransitionRegion;
	Result.MotionBlurNormalizedToPixel = View.MotionBlurNormalizedToPixel;
	Result.GeneralPurposeTweak = View.GeneralPurposeTweak;
	Result.GeneralPurposeTweak2 = View.GeneralPurposeTweak2;
	Result.DemosaicVposOffset = View.DemosaicVposOffset;
	Result.DecalDepthBias = View.DecalDepthBias;
	Result.IndirectLightingColorScale = View.IndirectLightingColorScale;
	Result.PrecomputedIndirectLightingColorScale = View.PrecomputedIndirectLightingColorScale;
	Result.PrecomputedIndirectSpecularColorScale = View.PrecomputedIndirectSpecularColorScale;
	Result.AtmosphereLightDirection = View.AtmosphereLightDirection;
	Result.AtmosphereLightIlluminanceOnGroundPostTransmittance = View.AtmosphereLightIlluminanceOnGroundPostTransmittance;
	Result.AtmosphereLightIlluminanceOuterSpace = View.AtmosphereLightIlluminanceOuterSpace;
	Result.AtmosphereLightDiscLuminance = View.AtmosphereLightDiscLuminance;
	Result.AtmosphereLightDiscCosHalfApexAngle_PPTrans = View.AtmosphereLightDiscCosHalfApexAngle_PPTrans;
	Result.SkyViewLutSizeAndInvSize = View.SkyViewLutSizeAndInvSize;
	Result.SkyCameraTranslatedWorldOrigin = View.SkyCameraTranslatedWorldOrigin;
	Result.SkyPlanetTranslatedWorldCenterAndViewHeight = View.SkyPlanetTranslatedWorldCenterAndViewHeight;
	Result.SkyViewLutReferential = View.SkyViewLutReferential;
	Result.SkyAtmosphereSkyLuminanceFactor = View.SkyAtmosphereSkyLuminanceFactor;
	Result.SkyAtmospherePresentInScene = View.SkyAtmospherePresentInScene;
	Result.SkyAtmosphereHeightFogContribution = View.SkyAtmosphereHeightFogContribution;
	Result.SkyAtmosphereBottomRadiusKm = View.SkyAtmosphereBottomRadiusKm;
	Result.SkyAtmosphereTopRadiusKm = View.SkyAtmosphereTopRadiusKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize = View.SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;
	Result.SkyAtmosphereAerialPerspectiveStartDepthKm = View.SkyAtmosphereAerialPerspectiveStartDepthKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution = View.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv = View.SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm = View.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;
	Result.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv = View.SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;
	Result.SkyAtmosphereApplyCameraAerialPerspectiveVolume = View.SkyAtmosphereApplyCameraAerialPerspectiveVolume;
	Result.NormalCurvatureToRoughnessScaleBias = View.NormalCurvatureToRoughnessScaleBias;
	Result.RenderingReflectionCaptureMask = View.RenderingReflectionCaptureMask;
	Result.RealTimeReflectionCapture = View.RealTimeReflectionCapture;
	Result.RealTimeReflectionCapturePreExposure = View.RealTimeReflectionCapturePreExposure;
	Result.AmbientCubemapTint = View.AmbientCubemapTint;
	Result.AmbientCubemapIntensity = View.AmbientCubemapIntensity;
	Result.SkyLightApplyPrecomputedBentNormalShadowingFlag = View.SkyLightApplyPrecomputedBentNormalShadowingFlag;
	Result.SkyLightAffectReflectionFlag = View.SkyLightAffectReflectionFlag;
	Result.SkyLightAffectGlobalIlluminationFlag = View.SkyLightAffectGlobalIlluminationFlag;
	Result.SkyLightColor = View.SkyLightColor;
	Result.MobileSkyIrradianceEnvironmentMap = View.MobileSkyIrradianceEnvironmentMap;
	Result.MobilePreviewMode = View.MobilePreviewMode;
	Result.HMDEyePaddingOffset = View.HMDEyePaddingOffset;
	Result.ReflectionCubemapMaxMip = View.ReflectionCubemapMaxMip;
	Result.ShowDecalsMask = View.ShowDecalsMask;
	Result.DistanceFieldAOSpecularOcclusionMode = View.DistanceFieldAOSpecularOcclusionMode;
	Result.IndirectCapsuleSelfShadowingIntensity = View.IndirectCapsuleSelfShadowingIntensity;
	Result.ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight = View.ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;
	Result.StereoPassIndex = View.StereoPassIndex;
	Result.GlobalVolumeTranslatedCenterAndExtent = View.GlobalVolumeTranslatedCenterAndExtent;
	Result.GlobalVolumeTranslatedWorldToUVAddAndMul = View.GlobalVolumeTranslatedWorldToUVAddAndMul;
	Result.GlobalDistanceFieldMipTranslatedWorldToUVScale = View.GlobalDistanceFieldMipTranslatedWorldToUVScale;
	Result.GlobalDistanceFieldMipTranslatedWorldToUVBias = View.GlobalDistanceFieldMipTranslatedWorldToUVBias;
	Result.GlobalDistanceFieldMipFactor = View.GlobalDistanceFieldMipFactor;
	Result.GlobalDistanceFieldMipTransition = View.GlobalDistanceFieldMipTransition;
	Result.GlobalDistanceFieldClipmapSizeInPages = View.GlobalDistanceFieldClipmapSizeInPages;
	Result.GlobalDistanceFieldInvPageAtlasSize = View.GlobalDistanceFieldInvPageAtlasSize;
	Result.GlobalDistanceFieldInvCoverageAtlasSize = View.GlobalDistanceFieldInvCoverageAtlasSize;
	Result.GlobalVolumeDimension = View.GlobalVolumeDimension;
	Result.GlobalVolumeTexelSize = View.GlobalVolumeTexelSize;
	Result.MaxGlobalDFAOConeDistance = View.MaxGlobalDFAOConeDistance;
	Result.NumGlobalSDFClipmaps = View.NumGlobalSDFClipmaps;
	Result.CoveredExpandSurfaceScale = View.CoveredExpandSurfaceScale;
	Result.NotCoveredExpandSurfaceScale = View.NotCoveredExpandSurfaceScale;
	Result.NotCoveredMinStepScale = View.NotCoveredMinStepScale;
	Result.DitheredTransparencyStepThreshold = View.DitheredTransparencyStepThreshold;
	Result.DitheredTransparencyTraceThreshold = View.DitheredTransparencyTraceThreshold;
	Result.CursorPosition = View.CursorPosition;
	Result.bCheckerboardSubsurfaceProfileRendering = View.bCheckerboardSubsurfaceProfileRendering;
	Result.VolumetricFogInvGridSize = View.VolumetricFogInvGridSize;
	Result.VolumetricFogGridZParams = View.VolumetricFogGridZParams;
	Result.VolumetricFogSVPosToVolumeUV = View.VolumetricFogSVPosToVolumeUV;
	Result.VolumetricFogViewGridUVToPrevViewRectUV = View.VolumetricFogViewGridUVToPrevViewRectUV;
	Result.VolumetricFogPrevViewGridRectUVToResourceUV = View.VolumetricFogPrevViewGridRectUVToResourceUV;
	Result.VolumetricFogPrevUVMax = View.VolumetricFogPrevUVMax;
	Result.VolumetricFogScreenToResourceUV = View.VolumetricFogScreenToResourceUV;
	Result.VolumetricFogUVMax = View.VolumetricFogUVMax;
	Result.VolumetricFogMaxDistance = View.VolumetricFogMaxDistance;
	Result.VolumetricLightmapWorldToUVScale = View.VolumetricLightmapWorldToUVScale;
	Result.VolumetricLightmapWorldToUVAdd = View.VolumetricLightmapWorldToUVAdd;
	Result.VolumetricLightmapIndirectionTextureSize = View.VolumetricLightmapIndirectionTextureSize;
	Result.VolumetricLightmapBrickSize = View.VolumetricLightmapBrickSize;
	Result.VolumetricLightmapBrickTexelSize = View.VolumetricLightmapBrickTexelSize;
	Result.IndirectLightingCacheShowFlag = View.IndirectLightingCacheShowFlag;
	Result.EyeToPixelSpreadAngle = View.EyeToPixelSpreadAngle;
	Result.XRPassthroughCameraUVs = View.XRPassthroughCameraUVs;
	Result.GlobalVirtualTextureMipBias = View.GlobalVirtualTextureMipBias;
	Result.VirtualTextureFeedbackShift = View.VirtualTextureFeedbackShift;
	Result.VirtualTextureFeedbackMask = View.VirtualTextureFeedbackMask;
	Result.VirtualTextureFeedbackStride = View.VirtualTextureFeedbackStride;
	Result.VirtualTextureFeedbackJitterOffset = View.VirtualTextureFeedbackJitterOffset;
	Result.VirtualTextureFeedbackSampleOffset = View.VirtualTextureFeedbackSampleOffset;
	Result.RuntimeVirtualTextureMipLevel = View.RuntimeVirtualTextureMipLevel;
	Result.RuntimeVirtualTexturePackHeight = View.RuntimeVirtualTexturePackHeight;
	Result.RuntimeVirtualTextureDebugParams = View.RuntimeVirtualTextureDebugParams;
	Result.OverrideLandscapeLOD = View.OverrideLandscapeLOD;
	Result.FarShadowStaticMeshLODBias = View.FarShadowStaticMeshLODBias;
	Result.MinRoughness = View.MinRoughness;
	Result.HairRenderInfo = View.HairRenderInfo;
	Result.EnableSkyLight = View.EnableSkyLight;
	Result.HairRenderInfoBits = View.HairRenderInfoBits;
	Result.HairComponents = View.HairComponents;
	Result.bSubsurfacePostprocessEnabled = View.bSubsurfacePostprocessEnabled;
	Result.SSProfilesTextureSizeAndInvSize = View.SSProfilesTextureSizeAndInvSize;
	Result.SSProfilesPreIntegratedTextureSizeAndInvSize = View.SSProfilesPreIntegratedTextureSizeAndInvSize;
	Result.SpecularProfileTextureSizeAndInvSize = View.SpecularProfileTextureSizeAndInvSize;
	Result.PhysicsFieldClipmapCenter = View.PhysicsFieldClipmapCenter;
	Result.PhysicsFieldClipmapDistance = View.PhysicsFieldClipmapDistance;
	Result.PhysicsFieldClipmapResolution = View.PhysicsFieldClipmapResolution;
	Result.PhysicsFieldClipmapExponent = View.PhysicsFieldClipmapExponent;
	Result.PhysicsFieldClipmapCount = View.PhysicsFieldClipmapCount;
	Result.PhysicsFieldTargetCount = View.PhysicsFieldTargetCount;
	Result.PhysicsFieldTargets = View.PhysicsFieldTargets;
	Result.GPUSceneViewId = View.GPUSceneViewId;
	Result.ViewResolutionFraction = View.ViewResolutionFraction;
	Result.SubSurfaceColorAsTransmittanceAtDistanceInMeters = View.SubSurfaceColorAsTransmittanceAtDistanceInMeters;
	Result.TanAndInvTanHalfFOV = View.TanAndInvTanHalfFOV;
	Result.PrevTanAndInvTanHalfFOV = View.PrevTanAndInvTanHalfFOV;
	Result.GlintLUTParameters0 = View.GlintLUTParameters0;
	Result.GlintLUTParameters1 = View.GlintLUTParameters1;
	FinalizeViewState(Result);
	return Result;
}

#line 17 "/Engine/Private/InstancedStereo.ush"
void FinalizeViewState(inout ViewState InOutView)
{
	InOutView.WorldToClip = MakeLWCInverseMatrix(InOutView.MatrixTilePosition, InOutView.RelativeWorldToClip);
	InOutView.ClipToWorld = MakeLWCMatrix(InOutView.MatrixTilePosition, InOutView.ClipToRelativeWorld);
	InOutView.ScreenToWorld = MakeLWCMatrix(InOutView.MatrixTilePosition, InOutView.ScreenToRelativeWorld);
	InOutView.PrevClipToWorld = MakeLWCMatrix(InOutView.MatrixTilePosition, InOutView.PrevClipToRelativeWorld);

	InOutView.WorldCameraOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.RelativeWorldCameraOrigin);
	InOutView.WorldViewOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.RelativeWorldViewOrigin);
	InOutView.PrevWorldCameraOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.PrevRelativeWorldCameraOrigin);
	InOutView.PrevWorldViewOrigin = MakeLWCVector3(InOutView.ViewTilePosition, InOutView.PrevRelativeWorldViewOrigin);
	InOutView.PreViewTranslation = MakeLWCVector3(-InOutView.ViewTilePosition, InOutView.RelativePreViewTranslation);
	InOutView.PrevPreViewTranslation = MakeLWCVector3(-InOutView.ViewTilePosition, InOutView.RelativePrevPreViewTranslation);
}

#line 34 "/Engine/Private/InstancedStereo.ush"
static ViewState ResolvedView = (ViewState)0.0f;

#line 36 "/Engine/Private/InstancedStereo.ush"
ViewState ResolveView()
{
	return GetPrimaryView();
}

#line 71 "/Engine/Private/InstancedStereo.ush"
uint GetInstanceId(uint InstanceId)
{



	return InstanceId;

}

#line 337 "/Engine/Private/Common.ush"
float4 Texture2DSampleLevel(Texture2D Tex, SamplerState Sampler, float2 UV, float Mip)
{
	return Tex.SampleLevel(Sampler, UV, Mip);
}

#line 924 "/Engine/Private/Common.ush"
float Pow2( float x )
{
	return x*x;
}

#line 929 "/Engine/Private/Common.ush"
float2 Pow2( float2 x )
{
	return x*x;
}

#line 934 "/Engine/Private/Common.ush"
float3 Pow2( float3 x )
{
	return x*x;
}

#line 939 "/Engine/Private/Common.ush"
float4 Pow2( float4 x )
{
	return x*x;
}

#line 13 "/Engine/Private/MonteCarlo.ush"
float3x3 GetTangentBasis( float3 TangentZ )
{
	const float Sign = TangentZ.z >= 0 ? 1 : -1;
	const float a = -rcp( Sign + TangentZ.z );
	const float b = TangentZ.x * TangentZ.y * a;
	
	float3 TangentX = { 1 + Sign * a * Pow2( TangentZ.x ), Sign * b, -Sign * TangentZ.x };
	float3 TangentY = { b,  Sign + a * Pow2( TangentZ.y ), -TangentZ.y };

	return float3x3( TangentX, TangentY, TangentZ );
}

#line 48 "/Engine/Private/MonteCarlo.ush"
float3 TangentToWorld( float3 Vec, float3 TangentZ )
{
	return mul( Vec, GetTangentBasis( TangentZ ) );
}

#line 93 "/Engine/Private/SceneData.ush"
struct FPrimitiveSceneData
{
	uint		Flags;
	uint		VisibilityFlags;
	int			InstanceSceneDataOffset; 
	int			NumInstanceSceneDataEntries;
	int			PersistentPrimitiveIndex;
	uint		SingleCaptureIndex; 
	float3		TilePosition;
	uint		PrimitiveComponentId; 
	FLWCMatrix	LocalToWorld;
	FLWCInverseMatrix WorldToLocal;
	FLWCMatrix	PreviousLocalToWorld;
	FLWCInverseMatrix PreviousWorldToLocal;
	float4x4	WorldToPreviousWorld; 
	float3		InvNonUniformScale;
	float		ObjectBoundsX;
	FLWCVector3	ObjectWorldPosition;
	FLWCVector3	ActorWorldPosition;
	float		ObjectRadius;
	uint		LightmapUVIndex;   
	float3		ObjectOrientation; 
	uint		LightmapDataIndex; 
	float4		NonUniformScale;
	float3		PreSkinnedLocalBoundsMin;
	uint		NaniteResourceID;
	float3		PreSkinnedLocalBoundsMax;
	uint		NaniteHierarchyOffset;
	float3		LocalObjectBoundsMin;
	float		ObjectBoundsY;
	float3		LocalObjectBoundsMax;
	float		ObjectBoundsZ;
	uint		InstancePayloadDataOffset;
	uint		InstancePayloadDataStride;
	uint		InstancePayloadExtensionSize;
	float3		InstanceLocalBoundsCenter;
	float3		InstanceLocalBoundsExtent;
	float3		WireframeColor; 
	float3		LevelColor; 
	uint		PackedNaniteFlags;
	float2 		InstanceDrawDistanceMinMaxSquared;
	float		InstanceWPODisableDistanceSquared;
	uint		NaniteRayTracingDataOffset;
	float		MaxWPOExtent;
	float		MinMaterialDisplacement;
	float		MaxMaterialDisplacement;
	uint		CustomStencilValueAndMask;
	float4		CustomPrimitiveData[9]; 
};

#line 144 "/Engine/Private/SceneData.ush"
FPrimitiveSceneData GetPrimitiveDataFromUniformBuffer()
{
	FPrimitiveSceneData PrimitiveData;

	PrimitiveData.Flags								= Primitive.Flags;
	PrimitiveData.VisibilityFlags					= Primitive.VisibilityFlags;
	PrimitiveData.InstanceSceneDataOffset			= Primitive.InstanceSceneDataOffset;
	PrimitiveData.NumInstanceSceneDataEntries		= Primitive.NumInstanceSceneDataEntries;
	PrimitiveData.SingleCaptureIndex				= Primitive.SingleCaptureIndex;
	PrimitiveData.TilePosition						= Primitive.TilePosition;
	PrimitiveData.PrimitiveComponentId				= Primitive.PrimitiveComponentId;
	PrimitiveData.LocalToWorld						= MakeLWCMatrix4x3(Primitive.TilePosition, Primitive.LocalToRelativeWorld);
	PrimitiveData.WorldToLocal						= MakeLWCInverseMatrix4x3(Primitive.TilePosition, Primitive.RelativeWorldToLocal);
	PrimitiveData.PreviousLocalToWorld				= MakeLWCMatrix4x3(Primitive.TilePosition, Primitive.PreviousLocalToRelativeWorld);
	PrimitiveData.PreviousWorldToLocal				= MakeLWCInverseMatrix4x3(Primitive.TilePosition, Primitive.PreviousRelativeWorldToLocal);
	PrimitiveData.WorldToPreviousWorld				= Primitive.WorldToPreviousWorld;
	PrimitiveData.InvNonUniformScale				= Primitive.InvNonUniformScale;
	PrimitiveData.ObjectBoundsX						= Primitive.ObjectBoundsX;
	PrimitiveData.ObjectWorldPosition				= MakeLWCVector3(Primitive.TilePosition, Primitive.ObjectRelativeWorldPositionAndRadius.xyz);
	PrimitiveData.ObjectRadius						= Primitive.ObjectRelativeWorldPositionAndRadius.w;
	PrimitiveData.ActorWorldPosition				= MakeLWCVector3(Primitive.TilePosition, Primitive.ActorRelativeWorldPosition);
	PrimitiveData.LightmapUVIndex					= Primitive.LightmapUVIndex;
	PrimitiveData.ObjectOrientation					= Primitive.ObjectOrientation;
	PrimitiveData.LightmapDataIndex					= Primitive.LightmapDataIndex;
	PrimitiveData.NonUniformScale					= Primitive.NonUniformScale;
	PrimitiveData.PreSkinnedLocalBoundsMin			= Primitive.PreSkinnedLocalBoundsMin;
	PrimitiveData.NaniteResourceID					= Primitive.NaniteResourceID;
	PrimitiveData.PreSkinnedLocalBoundsMax			= Primitive.PreSkinnedLocalBoundsMax;
	PrimitiveData.NaniteHierarchyOffset				= Primitive.NaniteHierarchyOffset;
	PrimitiveData.LocalObjectBoundsMin				= Primitive.LocalObjectBoundsMin;
	PrimitiveData.ObjectBoundsY						= Primitive.ObjectBoundsY;
	PrimitiveData.LocalObjectBoundsMax				= Primitive.LocalObjectBoundsMax;
	PrimitiveData.ObjectBoundsZ						= Primitive.ObjectBoundsZ;
	PrimitiveData.InstancePayloadDataOffset			= Primitive.InstancePayloadDataOffset;
	PrimitiveData.InstancePayloadDataStride			= Primitive.InstancePayloadDataStride;
	PrimitiveData.InstancePayloadExtensionSize		= Primitive.InstancePayloadExtensionSize;
	PrimitiveData.InstanceLocalBoundsCenter			= Primitive.InstanceLocalBoundsCenter;
	PrimitiveData.InstanceLocalBoundsExtent			= Primitive.InstanceLocalBoundsExtent;
	PrimitiveData.WireframeColor					= Primitive.WireframeColor;
	PrimitiveData.LevelColor						= Primitive.LevelColor;
	PrimitiveData.PackedNaniteFlags					= Primitive.PackedNaniteFlags;
	PrimitiveData.InstanceDrawDistanceMinMaxSquared	= Primitive.InstanceDrawDistanceMinMaxSquared;
	PrimitiveData.InstanceWPODisableDistanceSquared	= Primitive.InstanceWPODisableDistanceSquared;
	PrimitiveData.PersistentPrimitiveIndex			= Primitive.PersistentPrimitiveIndex;
	PrimitiveData.NaniteRayTracingDataOffset		= Primitive.NaniteRayTracingDataOffset;
	PrimitiveData.MaxWPOExtent						= Primitive.MaxWPOExtent;
	PrimitiveData.MinMaterialDisplacement			= Primitive.MinMaterialDisplacement;
	PrimitiveData.MaxMaterialDisplacement			= Primitive.MaxMaterialDisplacement;
	PrimitiveData.CustomStencilValueAndMask			= Primitive.CustomStencilValueAndMask;
	
	[unroll]
	for (int DataIndex = 0; DataIndex < 9; ++DataIndex)
	{
		PrimitiveData.CustomPrimitiveData[DataIndex] = Primitive.CustomPrimitiveData[DataIndex];
	}

	return PrimitiveData;
}

#line 339 "/Engine/Private/SceneData.ush"
FPrimitiveSceneData GetPrimitiveData(uint PrimitiveId)
{
	return GetPrimitiveDataFromUniformBuffer();
}

#line 346 "/Engine/Private/SceneData.ush"
float GetPrimitive_DeterminantSign_FromFlags(uint Flags)
{
	return CondMask(Flags & 0x40, -1.0f, 1.0f);
}

#line 404 "/Engine/Private/SceneData.ush"
struct FInstanceSceneEditorData
{
	float3 HitProxyId;
	uint   HitProxyPacked;
	bool bIsSelected;
};

#line 434 "/Engine/Private/SceneData.ush"
struct FInstanceSceneData
{
	FLWCMatrix LocalToWorld;
	FLWCMatrix PrevLocalToWorld;
	FLWCInverseMatrix WorldToLocal;
	float4   NonUniformScale;
	float3   InvNonUniformScale;
	float    DeterminantSign;
	float3   LocalBoundsCenter;
	uint     PrimitiveId;
	uint     RelativeId;
	uint     PayloadDataOffset;
	uint     PayloadExtensionOffset;
	uint     PayloadExtensionSize;
	float3   LocalBoundsExtent;
	uint     LastUpdateSceneFrameNumber;
	uint     NaniteRuntimeResourceID;
	uint     NaniteHierarchyOffset;








	float4   LightMapAndShadowMapUVBias;

	bool     ValidInstance;
	uint     Flags;


	FInstanceSceneEditorData EditorData;

};

#line 1068 "/Engine/Private/SceneData.ush"
struct FSceneDataIntermediates
{
	uint PrimitiveId;
	uint InstanceId;
	uint ViewIndex;
	uint CullingFlags;
	
	uint InstanceIdLoadIndex;
	FInstanceSceneData InstanceData;
	FPrimitiveSceneData Primitive;
};

#line 1242 "/Engine/Private/SceneData.ush"
FSceneDataIntermediates GetSceneDataIntermediates()
{
	FSceneDataIntermediates Intermediates = (FSceneDataIntermediates)0;
	
	Intermediates.ViewIndex = 0U;
	Intermediates.PrimitiveId = 0U;
	Intermediates.InstanceId = 0U;
	Intermediates.Primitive = GetPrimitiveDataFromUniformBuffer();
	
	Intermediates.InstanceData.LocalToWorld			= Intermediates.Primitive.LocalToWorld;
	Intermediates.InstanceData.PrevLocalToWorld		= Intermediates.Primitive.PreviousLocalToWorld;
	Intermediates.InstanceData.WorldToLocal			= Intermediates.Primitive.WorldToLocal;
	Intermediates.InstanceData.NonUniformScale		= Intermediates.Primitive.NonUniformScale;
	Intermediates.InstanceData.InvNonUniformScale	= Intermediates.Primitive.InvNonUniformScale;
	Intermediates.InstanceData.DeterminantSign		= GetPrimitive_DeterminantSign_FromFlags(Intermediates.Primitive.Flags);
	Intermediates.InstanceData.LocalBoundsCenter	= (Intermediates.Primitive.LocalObjectBoundsMax + Intermediates.Primitive.LocalObjectBoundsMin) * 0.5f;
	Intermediates.InstanceData.LocalBoundsExtent	= (Intermediates.Primitive.LocalObjectBoundsMax - Intermediates.Primitive.LocalObjectBoundsMin) * 0.5f;
	Intermediates.InstanceData.ValidInstance		= true;
	
	Intermediates.CullingFlags = ((1u << 0u));

	return Intermediates;
}

#line 144 "/Engine/Private/MaterialTexture.ush"
float4 ProcessMaterialColorTextureLookup(float4 TextureValue)
{
	return TextureValue;
}

#line 190 "/Engine/Private/MaterialTexture.ush"
float4 ProcessMaterialLinearGreyscaleTextureLookup(float4 TextureValue)
{
	
	
	
	return TextureValue.rrrr;
}

#line 169 "/Engine/Generated/Material.ush"
struct FStrataData
{
	uint Dummy;
};

#line 186 "/Engine/Generated/Material.ush"
struct FMaterialParticleParameters
{
	
	float RelativeTime;
	
	float MotionBlurFade;
	
	float Random;
	
	float4 Velocity;
	
	float4 Color;
	
	float4 TranslatedWorldPositionAndSize;
	
	float4 MacroUV;

	



	float4 DynamicParameter;













	
	FLWCMatrix ParticleToWorld;

	
	FLWCInverseMatrix WorldToParticle;








	
	float2 Size;

	
	float SpriteRotation;
};

#line 296 "/Engine/Generated/Material.ush"
struct FMaterialAttributes
{
	float3 BaseColor;
	float Metallic;
	float Specular;
	float Roughness;
	float Anisotropy;
	float3 EmissiveColor;
	float Opacity;
	float OpacityMask;
	float3 Normal;
	float3 Tangent;
	float3 WorldPositionOffset;
	float Displacement;
	float3 SubsurfaceColor;
	float ClearCoat;
	float ClearCoatRoughness;
	float AmbientOcclusion;
	float3 Refraction;
	float PixelDepthOffset;
	uint ShadingModel;
	float SurfaceThickness;
	FStrataData FrontMaterial;
	float2 CustomizedUV0;
	float2 CustomizedUV1;
	float2 CustomizedUV2;
	float2 CustomizedUV3;
	float2 CustomizedUV4;
	float2 CustomizedUV5;
	float2 CustomizedUV6;
	float2 CustomizedUV7;
	float3 BentNormal;
	float3 ClearCoatBottomNormal;
	float3 CustomEyeTangent;
	float3 TransmittanceColor;
};

#line 411 "/Engine/Generated/Material.ush"
struct FMaterialPixelParameters
{

	float2 TexCoords[1];


	
	float4 VertexColor;

	
	float3 WorldNormal;
	
	
	float3 WorldTangent;

	
	float3 ReflectionVector;

	
	float3 CameraVector;

	
	float3 LightVector;

	




	float4 SvPosition;
		
	
	float4 ScreenPosition;

	



	float2 ViewBufferUV;





	float UnMirrored;

	float TwoSidedSign;

	



	float3x3 TangentToWorld;






	



	FLWCVector3 AbsoluteWorldPosition;

	


	float3 WorldPosition_CamRelative;

	



	FLWCVector3 WorldPosition_NoOffsets;

	



	float3 WorldPosition_NoOffsets_CamRelative;

	
	float3 LightingPositionOffset;

	
	float3 WorldPosition_DDX;
	float3 WorldPosition_DDY;
	float4 VertexColor_DDX;
	float4 VertexColor_DDY;
	float4 ScreenPosition_DDX;
	float4 ScreenPosition_DDY;
	

	float2 TexCoords_DDX[1];
	float2 TexCoords_DDY[1];


	float AOMaterialMask;















	
	uint PrimitiveId;










	


















	
	FMaterialParticleParameters Particle;











	
	
	
	uint Dummy;





















#line 620 "/Engine/Generated/Material.ush"


	FMaterialAttributes MaterialAttributes;
};

#line 651 "/Engine/Generated/Material.ush"
struct FMaterialVertexParameters
{
	
	
	
	float3 WorldPosition;
	
	float3x3 TangentToWorld;










	













	
	
	FLWCMatrix PrevFrameLocalToWorld;

	float3 PreSkinnedPosition;
	float3 PreSkinnedNormal;

	float4 VertexColor;

	float2 TexCoords[3];
	









	
	FMaterialParticleParameters Particle;





	FMaterialAttributes MaterialAttributes;

	
	FSceneDataIntermediates SceneData;

	
	
	uint PrimitiveId;

	bool bEvaluateWorldPositionOffset;
};

#line 722 "/Engine/Generated/Material.ush"
FMaterialVertexParameters MakeInitializedMaterialVertexParameters()
{
	FMaterialVertexParameters Result = (FMaterialVertexParameters)0;
	Result.PrimitiveId = ((1u << (20u)) - 1u);
	Result.bEvaluateWorldPositionOffset = true;

	return Result;
}

#line 751 "/Engine/Generated/Material.ush"
FPrimitiveSceneData GetPrimitiveData(FMaterialVertexParameters Parameters)
{
	return Parameters.SceneData.Primitive;
}

#line 756 "/Engine/Generated/Material.ush"
FPrimitiveSceneData GetPrimitiveData(FMaterialPixelParameters Parameters)
{
	return GetPrimitiveData(Parameters.PrimitiveId);
}

#line 785 "/Engine/Generated/Material.ush"
float3x3 GetLocalToWorld3x3(FMaterialVertexParameters Parameters)
{



	return LWCToFloat3x3(GetPrimitiveData(Parameters).LocalToWorld);

}

#line 803 "/Engine/Generated/Material.ush"
float3x3 GetLocalToWorld3x3(FMaterialPixelParameters Parameters)
{



	return LWCToFloat3x3(GetPrimitiveData(Parameters).LocalToWorld);

}

#line 812 "/Engine/Generated/Material.ush"
float3x3 GetLocalToWorld3x3()
{
	return LWCToFloat3x3(GetPrimitiveDataFromUniformBuffer().LocalToWorld);
}

#line 862 "/Engine/Generated/Material.ush"
float3 GetTranslatedWorldPosition(FMaterialVertexParameters Parameters)
{
	return Parameters.WorldPosition;
}

#line 867 "/Engine/Generated/Material.ush"
float3 GetPrevTranslatedWorldPosition(FMaterialVertexParameters Parameters)
{
	
	
	
	
	
	return GetTranslatedWorldPosition(Parameters);
}

#line 877 "/Engine/Generated/Material.ush"
FLWCVector3 GetWorldPosition(FMaterialVertexParameters Parameters)
{
	return LWCSubtract(GetTranslatedWorldPosition(Parameters), ResolvedView.PreViewTranslation);
}

#line 882 "/Engine/Generated/Material.ush"
FLWCVector3 GetPrevWorldPosition(FMaterialVertexParameters Parameters)
{
	return LWCSubtract(GetPrevTranslatedWorldPosition(Parameters), ResolvedView.PrevPreViewTranslation);
}

#line 887 "/Engine/Generated/Material.ush"
FLWCVector3 GetWorldPosition(FMaterialPixelParameters Parameters)
{
	return Parameters.AbsoluteWorldPosition;
}

#line 897 "/Engine/Generated/Material.ush"
float3 GetTranslatedWorldPosition(FMaterialPixelParameters Parameters)
{
	return Parameters.WorldPosition_CamRelative;
}

#line 1537 "/Engine/Generated/Material.ush"
float3 RotateAboutAxis(float4 NormalizedRotationAxisAndAngle, float3 PositionOnAxis, float3 Position)
{
	
	float3 ClosestPointOnAxis = PositionOnAxis + NormalizedRotationAxisAndAngle.xyz * dot(NormalizedRotationAxisAndAngle.xyz, Position - PositionOnAxis);
	
	float3 UAxis = Position - ClosestPointOnAxis;
	float3 VAxis = cross(NormalizedRotationAxisAndAngle.xyz, UAxis);
	float CosAngle;
	float SinAngle;
	sincos(NormalizedRotationAxisAndAngle.w, SinAngle, CosAngle);
	
	float3 R = UAxis * CosAngle + VAxis * SinAngle;
	
	float3 RotatedPosition = ClosestPointOnAxis + R;
	
	return RotatedPosition - Position;
}

#line 1559 "/Engine/Generated/Material.ush"
float3 RotateAboutAxis(float4 NormalizedRotationAxisAndAngle, FLWCVector3 PositionOnAxis, FLWCVector3 Position)
{
	
	FLWCVector3 ClosestPointOnAxis = LWCAdd(PositionOnAxis, NormalizedRotationAxisAndAngle.xyz * dot(NormalizedRotationAxisAndAngle.xyz, LWCToFloat(LWCSubtract(Position, PositionOnAxis))));
	
	float3 UAxis = LWCToFloat(LWCSubtract(Position, ClosestPointOnAxis));
	float3 VAxis = cross(NormalizedRotationAxisAndAngle.xyz, UAxis);
	float CosAngle;
	float SinAngle;
	sincos(NormalizedRotationAxisAndAngle.w, SinAngle, CosAngle);
	
	float3 R = UAxis * CosAngle + VAxis * SinAngle;

	
	
	
	
	
	
	
	return R - UAxis;
}

#line 2179 "/Engine/Generated/Material.ush"
float LWCApplyAddressModeWrap(FLWCScalar V)
{
	
	
	const float FracTile = frac( (( V ).Tile) * 2097152.00f);
	return FracTile + V.Offset;
}

#line 2187 "/Engine/Generated/Material.ush"
float LWCApplyAddressModeMirror(FLWCScalar v)
{
	
	
	
	
	

	
	
	return LWCToFloat(v);
}

#line 2200 "/Engine/Generated/Material.ush"
float LWCApplyAddressModeClamp(FLWCScalar v)
{
	
	
	return LWCToFloat(v);
}

#line 2207 "/Engine/Generated/Material.ush"
float LWCApplyAddressMode(FLWCScalar v, uint AddressMode)
{
	if(AddressMode == 1u) return LWCApplyAddressModeWrap(v);
	else if(AddressMode == 2u) return LWCApplyAddressModeMirror(v);
	else return LWCApplyAddressModeClamp(v);
}

#line 2213 "/Engine/Generated/Material.ush"
float2 LWCApplyAddressMode(FLWCVector2 UV, uint AddressX, uint AddressY)
{
	return float2(LWCApplyAddressMode( LWCGetComponent( UV , 0), AddressX), LWCApplyAddressMode( LWCGetComponent( UV , 1), AddressY));
}

#line 2217 "/Engine/Generated/Material.ush"
float3 LWCApplyAddressMode(FLWCVector3 UV, uint AddressX, uint AddressY, uint AddressZ)
{
	return float3(LWCApplyAddressMode( LWCGetComponent( UV , 0), AddressX), LWCApplyAddressMode( LWCGetComponent( UV , 1), AddressY), LWCApplyAddressMode( LWCGetComponent( UV , 2), AddressZ));
}

#line 3131 "/Engine/Generated/Material.ush"
float3 CustomExpression0(FMaterialVertexParameters Parameters,float a)
{
return acos(a);
}

#line 3456 "/Engine/Generated/Material.ush"
bool ShouldEnableWorldPositionOffset(FMaterialVertexParameters Parameters)
{

	if (!Parameters.bEvaluateWorldPositionOffset ||
		(GetPrimitiveData(Parameters).Flags & 0x8000) == 0)
	{
		return false;
	}

	return true;



}

#line 3471 "/Engine/Generated/Material.ush"
float3 ClampWorldPositionOffset(FMaterialVertexParameters Parameters, float3 InOffset)
{




	const float MaxWPODim = GetPrimitiveData(Parameters).MaxWPOExtent;
	return MaxWPODim <= 0.0f ? InOffset : clamp(InOffset, -MaxWPODim.xxx, MaxWPODim.xxx);

}

#line 3482 "/Engine/Generated/Material.ush"
float3 GetMaterialWorldPositionOffsetRaw(FMaterialVertexParameters Parameters)
{
	float Local44 = (View.GameTime * float2(0.01000000,0.01000000).rg.r);
	float Local45 = (View.GameTime * float2(0.01000000,0.01000000).rg.g);
	FLWCVector3 Local46 = GetWorldPosition(Parameters);
	FLWCVector3 Local47 = LWCMultiply(  Local46 , LWCPromote(((float3)Material.PreshaderBuffer[7].y)));
	FLWCVector2 Local48 = MakeLWCVector( LWCGetComponent(   Local47  , 0),  LWCGetComponent(   Local47  , 1));
	FLWCVector2 Local49 = LWCAdd(LWCPromote(float2(Local44,Local45)),   Local48 );
	float2 Local50 = LWCApplyAddressMode(  Local49 , 1u, 1u);
	float4 Local51 = ProcessMaterialColorTextureLookup(Texture2DSampleLevel(Material.Texture2D_4,Material.Texture2D_4Sampler,Local50,-1.00000000));
	float4 Local52 = MaterialCollection0.Vectors[0];
	float Local53 = (Material.PreshaderBuffer[7].z * Local52.r);
	float3 Local54 = (float3(float2(Local51.r,Local51.g),0.00000000) * ((float3)Local53));
	float3 Local55 = CustomExpression0(Parameters,Material.PreshaderBuffer[10].w);
	float3 Local56 = (Local55 * ((float3)57.29000092));
	float3 Local57 = (Local56 / ((float3)360.00000000));
	float3 Local58 = (Local57 * ((float3)6.28318548));
	float Local59 = (Material.PreshaderBuffer[11].w * Local52.g);
	float Local60 = (View.GameTime * Local59);
	FLWCVector3 Local61 = LWCMultiply(  Local46 , LWCPromote(((float3)Material.PreshaderBuffer[12].y)));
	FLWCScalar Local62 =  LWCGetComponent(   Local61  , 0);
	FLWCVector3 Local63 = LWCMultiply(MakeLWCVector(LWCGetComponent(  Local62 , 0),LWCGetComponent(  Local62 , 0),LWCGetComponent(  Local62 , 0)), LWCPromote(Material.PreshaderBuffer[13].xyz));
	FLWCVector3 Local64 = LWCAdd(LWCPromote(((float3)Local60)),   Local63 );
	FLWCVector3 Local65 = LWCMultiply(  Local64 , LWCPromote(((float3)6.28318548)));
	float3 Local66 = LWCSin(  Local65 );
	float Local67 = (Material.PreshaderBuffer[13].w * Local52.r);
	float3 Local68 = (  Local66  * ((float3)Local67));
	FLWCScalar Local69 =  LWCGetComponent(   Local61  , 1);
	FLWCScalar Local70 = LWCAdd(LWCPromote(Local60),   Local69 );
	FLWCScalar Local71 = LWCMultiply(  Local70 , LWCPromote(0.40000001));
	FLWCScalar Local72 = LWCMultiply(  Local71 , LWCPromote(6.28318548));
	float Local73 = LWCSin(  Local72 );
	float3 Local74 = (  Local68  * ((float3)  Local73 ));
	float3 Local75 = RotateAboutAxis(float4(Material.PreshaderBuffer[11].xyz,Local58.x),float3(0.00000000,0.00000000,0.00000000),  Local74 );
	float3 Local76 = (Local75 +   Local74 );
	float3 Local77 = (Local54 + Local76);
	float2 Local78 = Parameters.TexCoords[2].xy;
	float2 Local79 = (Material.PreshaderBuffer[1].zw *   Local78 );
	float4 Local80 = ProcessMaterialLinearGreyscaleTextureLookup(Texture2DSampleLevel(Material.Texture2D_5,Material.Texture2D_5Sampler,  Local79 ,-1.00000000));
	float3 Local81 = lerp(((float3)0.00000000),Local77,Local80.rgb);
	return Local81;;
}

#line 3525 "/Engine/Generated/Material.ush"
float3 GetMaterialWorldPositionOffset(FMaterialVertexParameters Parameters)
{
	[branch]
	if (ShouldEnableWorldPositionOffset(Parameters))
	{
		return ClampWorldPositionOffset(Parameters, GetMaterialWorldPositionOffsetRaw(Parameters));
	}
	return float3(0, 0, 0);
}

#line 3691 "/Engine/Generated/Material.ush"
void GetMaterialCustomizedUVs(FMaterialVertexParameters Parameters, inout float2 OutTexCoords[1])
{
	float Local44 = (View.GameTime * float2(0.01000000,0.01000000).rg.r);
	float Local45 = (View.GameTime * float2(0.01000000,0.01000000).rg.g);
	FLWCVector3 Local46 = GetWorldPosition(Parameters);
	FLWCVector3 Local47 = LWCMultiply(  Local46 , LWCPromote(((float3)Material.PreshaderBuffer[7].y)));
	FLWCVector2 Local48 = MakeLWCVector( LWCGetComponent(   Local47  , 0),  LWCGetComponent(   Local47  , 1));
	FLWCVector2 Local49 = LWCAdd(LWCPromote(float2(Local44,Local45)),   Local48 );
	float2 Local50 = LWCApplyAddressMode(  Local49 , 1u, 1u);
	float4 Local51 = ProcessMaterialColorTextureLookup(Texture2DSampleLevel(Material.Texture2D_4,Material.Texture2D_4Sampler,Local50,-1.00000000));
	float4 Local52 = MaterialCollection0.Vectors[0];
	float Local53 = (Material.PreshaderBuffer[7].z * Local52.r);
	float3 Local54 = (float3(float2(Local51.r,Local51.g),0.00000000) * ((float3)Local53));
	float3 Local55 = CustomExpression0(Parameters,Material.PreshaderBuffer[10].w);
	float3 Local56 = (Local55 * ((float3)57.29000092));
	float3 Local57 = (Local56 / ((float3)360.00000000));
	float3 Local58 = (Local57 * ((float3)6.28318548));
	float Local59 = (Material.PreshaderBuffer[11].w * Local52.g);
	float Local60 = (View.GameTime * Local59);
	FLWCVector3 Local61 = LWCMultiply(  Local46 , LWCPromote(((float3)Material.PreshaderBuffer[12].y)));
	FLWCScalar Local62 =  LWCGetComponent(   Local61  , 0);
	FLWCVector3 Local63 = LWCMultiply(MakeLWCVector(LWCGetComponent(  Local62 , 0),LWCGetComponent(  Local62 , 0),LWCGetComponent(  Local62 , 0)), LWCPromote(Material.PreshaderBuffer[13].xyz));
	FLWCVector3 Local64 = LWCAdd(LWCPromote(((float3)Local60)),   Local63 );
	FLWCVector3 Local65 = LWCMultiply(  Local64 , LWCPromote(((float3)6.28318548)));
	float3 Local66 = LWCSin(  Local65 );
	float Local67 = (Material.PreshaderBuffer[13].w * Local52.r);
	float3 Local68 = (  Local66  * ((float3)Local67));
	FLWCScalar Local69 =  LWCGetComponent(   Local61  , 1);
	FLWCScalar Local70 = LWCAdd(LWCPromote(Local60),   Local69 );
	FLWCScalar Local71 = LWCMultiply(  Local70 , LWCPromote(0.40000001));
	FLWCScalar Local72 = LWCMultiply(  Local71 , LWCPromote(6.28318548));
	float Local73 = LWCSin(  Local72 );
	float3 Local74 = (  Local68  * ((float3)  Local73 ));
	float3 Local75 = RotateAboutAxis(float4(Material.PreshaderBuffer[11].xyz,Local58.x),float3(0.00000000,0.00000000,0.00000000),  Local74 );
	float3 Local76 = (Local75 +   Local74 );
	float3 Local77 = (Local54 + Local76);
	float2 Local78 = Parameters.TexCoords[2].xy;
	float2 Local79 = (Material.PreshaderBuffer[1].zw *   Local78 );
	float4 Local80 = ProcessMaterialLinearGreyscaleTextureLookup(Texture2DSampleLevel(Material.Texture2D_5,Material.Texture2D_5Sampler,  Local79 ,-1.00000000));
	float3 Local81 = lerp(((float3)0.00000000),Local77,Local80.rgb);
	float Local84 = (View.PrevFrameGameTime * float2(0.01000000,0.01000000).rg.r);
	float Local85 = (View.PrevFrameGameTime * float2(0.01000000,0.01000000).rg.g);
	FLWCVector3 Local86 = GetPrevWorldPosition(Parameters);
	FLWCVector3 Local87 = LWCMultiply(  Local86 , LWCPromote(((float3)Material.PreshaderBuffer[7].y)));
	FLWCVector2 Local88 = MakeLWCVector( LWCGetComponent(   Local87  , 0),  LWCGetComponent(   Local87  , 1));
	FLWCVector2 Local89 = LWCAdd(LWCPromote(float2(Local84,Local85)),   Local88 );
	float2 Local90 = LWCApplyAddressMode(  Local89 , 1u, 1u);
	float4 Local91 = ProcessMaterialColorTextureLookup(Texture2DSampleLevel(Material.Texture2D_4,Material.Texture2D_4Sampler,Local90,-1.00000000));
	float3 Local92 = (float3(float2(Local91.r,Local91.g),0.00000000) * ((float3)Local53));
	float Local93 = (View.PrevFrameGameTime * Local59);
	FLWCVector3 Local94 = LWCMultiply(  Local86 , LWCPromote(((float3)Material.PreshaderBuffer[12].y)));
	FLWCScalar Local95 =  LWCGetComponent(   Local94  , 0);
	FLWCVector3 Local96 = LWCMultiply(MakeLWCVector(LWCGetComponent(  Local95 , 0),LWCGetComponent(  Local95 , 0),LWCGetComponent(  Local95 , 0)), LWCPromote(Material.PreshaderBuffer[13].xyz));
	FLWCVector3 Local97 = LWCAdd(LWCPromote(((float3)Local93)),   Local96 );
	FLWCVector3 Local98 = LWCMultiply(  Local97 , LWCPromote(((float3)6.28318548)));
	float3 Local99 = LWCSin(  Local98 );
	float3 Local100 = (  Local99  * ((float3)Local67));
	FLWCScalar Local101 =  LWCGetComponent(   Local94  , 1);
	FLWCScalar Local102 = LWCAdd(LWCPromote(Local93),   Local101 );
	FLWCScalar Local103 = LWCMultiply(  Local102 , LWCPromote(0.40000001));
	FLWCScalar Local104 = LWCMultiply(  Local103 , LWCPromote(6.28318548));
	float Local105 = LWCSin(  Local104 );
	float3 Local106 = (  Local100  * ((float3)  Local105 ));
	float3 Local107 = RotateAboutAxis(float4(Material.PreshaderBuffer[11].xyz,Local58.x),float3(0.00000000,0.00000000,0.00000000),  Local106 );
	float3 Local108 = (Local107 +   Local106 );
	float3 Local109 = (Local92 + Local108);
	float3 Local110 = lerp(((float3)0.00000000),Local109,Local80.rgb);
	float2 Local111 = Parameters.TexCoords[0].xy;
	OutTexCoords[0] = Local111;

}

#line 3763 "/Engine/Generated/Material.ush"
void GetCustomInterpolators(FMaterialVertexParameters Parameters, inout float2 OutTexCoords[1])
{

}

#line 67 "/Engine/Private/BasePassCommon.ush"
struct FSharedBasePassInterpolants
{
	









	float3 PixelPositionExcludingWPO : TEXCOORD9;


























};

#line 11 "/Plugin/FX/Niagara/Private/NiagaraVFParticleAccess.usf"
uint NiagaraGetFloatDataStride() { return NiagaraSpriteVFLooseParameters.NiagaraFloatDataStride; }

#line 49 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
bool NiagaraGetIsHalfAndFixupRegister(inout int RegisterIdx)
{
	
	
	
	const uint HalfBit = (1 << 31);
	const bool bIsHalf = RegisterIdx & HalfBit;

	RegisterIdx &= ~HalfBit;	

	return bIsHalf;
}

#line 62 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float NiagaraGetFloat_Internal(Buffer<float> FloatBuffer, int RegisterIdx, uint ParticleIdx)
{
	return FloatBuffer[RegisterIdx * NiagaraGetFloatDataStride() + ParticleIdx];
}

#line 67 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float2 NiagaraGetVec2_Internal(Buffer<float> FloatBuffer, int RegisterIdx, uint ParticleIdx)
{
	return float2(NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 0, ParticleIdx),
				  NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 1, ParticleIdx));
}

#line 73 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float3 NiagaraGetVec3_Internal(Buffer<float> FloatBuffer, int RegisterIdx, uint ParticleIdx)
{
	return float3(NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 0, ParticleIdx),
				  NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 1, ParticleIdx),
				  NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 2, ParticleIdx));
}

#line 80 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float4 NiagaraGetVec4_Internal(Buffer<float> FloatBuffer, int RegisterIdx, uint ParticleIdx)
{
	return float4(NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 0, ParticleIdx),
				  NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 1, ParticleIdx),
				  NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 2, ParticleIdx),
				  NiagaraGetFloat_Internal(FloatBuffer, RegisterIdx + 3, ParticleIdx));
}

#line 88 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float NiagaraGetFloat(int RegisterIdx, uint ParticleIdx)
{
	[branch]
	if (NiagaraGetIsHalfAndFixupRegister(RegisterIdx))
	{
		return NiagaraGetFloat_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataHalf), RegisterIdx, ParticleIdx);
	}
	else
	{
		return NiagaraGetFloat_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataFloat), RegisterIdx, ParticleIdx);
	}
}

#line 101 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float2 NiagaraGetVec2(int RegisterIdx, uint ParticleIdx)
{
	[branch]
	if (NiagaraGetIsHalfAndFixupRegister(RegisterIdx))
	{
		return NiagaraGetVec2_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataHalf), RegisterIdx, ParticleIdx);
	}
	else
	{
		return NiagaraGetVec2_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataFloat), RegisterIdx, ParticleIdx);
	}
}

#line 114 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float3 NiagaraGetVec3(int RegisterIdx, uint ParticleIdx)
{
	[branch]
	if (NiagaraGetIsHalfAndFixupRegister(RegisterIdx))
	{
		return NiagaraGetVec3_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataHalf), RegisterIdx, ParticleIdx);
	}
	else
	{
		return NiagaraGetVec3_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataFloat), RegisterIdx, ParticleIdx);
	}
}

#line 127 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float4 NiagaraGetVec4(int RegisterIdx, uint ParticleIdx)
{
	[branch]
	if (NiagaraGetIsHalfAndFixupRegister(RegisterIdx))
	{
		return NiagaraGetVec4_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataHalf), RegisterIdx, ParticleIdx);
	}
	else
	{
		return NiagaraGetVec4_Internal( (NiagaraSpriteVFLooseParameters.NiagaraParticleDataFloat), RegisterIdx, ParticleIdx);
	}
}

#line 140 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float NiagaraSafeGetFloat(int RegisterIdx, uint ParticleIdx, float Default)
{
	
	[branch]
	if (RegisterIdx == -1)
		return Default;
	return NiagaraGetFloat(RegisterIdx, ParticleIdx);
}

#line 149 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float2 NiagaraSafeGetVec2(int RegisterIdx, uint ParticleIdx, float2 Default)
{
	
	[branch]
	if (RegisterIdx == -1)
		return Default;
	return NiagaraGetVec2(RegisterIdx, ParticleIdx);
}

#line 158 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float3 NiagaraSafeGetVec3(int RegisterIdx, uint ParticleIdx, float3 Default)
{
	
	[branch]
	if (RegisterIdx == -1)
		return Default;
	return NiagaraGetVec3(RegisterIdx, ParticleIdx);
}

#line 167 "/Plugin/FX/Niagara/Private/NiagaraParticleAccess.ush"
float4 NiagaraSafeGetVec4(int RegisterIdx, uint ParticleIdx, float4 Default)
{
	
	[branch]
	if (RegisterIdx == -1)
		return Default;
	return NiagaraGetVec4(RegisterIdx, ParticleIdx);
}

#line 21 "/Plugin/FX/Niagara/Private/NiagaraVFParticleAccess.usf"
float SafeGetFloat(int RegisterIdx, uint InstanceID, float Default) { return NiagaraSafeGetFloat(RegisterIdx, InstanceID, Default); }

#line 22 "/Plugin/FX/Niagara/Private/NiagaraVFParticleAccess.usf"
float2 SafeGetVec2(int RegisterIdx, uint InstanceID, float2 Default) { return NiagaraSafeGetVec2(RegisterIdx, InstanceID, Default); }

#line 23 "/Plugin/FX/Niagara/Private/NiagaraVFParticleAccess.usf"
float3 SafeGetVec3(int RegisterIdx, uint InstanceID, float3 Default) { return NiagaraSafeGetVec3(RegisterIdx, InstanceID, Default); }

#line 24 "/Plugin/FX/Niagara/Private/NiagaraVFParticleAccess.usf"
float4 SafeGetVec4(int RegisterIdx, uint InstanceID, float4 Default) { return NiagaraSafeGetVec4(RegisterIdx, InstanceID, Default); }

#line 39 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
struct FVertexFactoryInput
{
	float2	TexCoord				: ATTRIBUTE0;
	uint VertexId					: SV_VertexID;
	uint InstanceId					: SV_InstanceID;
};

#line 92 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
struct FVertexFactoryInterpolantsVSToPS
{
	
	float4	TangentToWorld0AndInterp_Sizer : TEXCOORD10;
	
	float4	TangentToWorld2	: TEXCOORD11;
	


















	float4	TexCoords[(1 + 1) / 2]	: TEXCOORD1;


	






















	float3 LightingPositionOffset : PARTICLE_LIGHTING_OFFSET;

















};

#line 163 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
struct FVertexFactoryIntermediates
{
	
	FLWCVector3 VertexWorldPosition;
	
	FLWCVector3 PreviousVertexWorldPosition;
	
	float4 TranslatedWorldPositionAndSize;
	

	float3 LightingPositionOffset;


	
	float4 TexCoord;




	
	float3 TangentUp;
	
	float3 TangentRight;
	
	float4 Color;
	
	float4 ParticleVelocity;
	
	float2 UVScale;
	
	FLWCVector3 Position;
	
	float2 Size;
	
	float3 CustomFacingVector;
	float3 CustomAlignmentVector;














	
	float SubImageLerp;






	
	float3x3 TangentToLocal;
	
	float2 ParticleSize;











	
	FSceneDataIntermediates SceneData;
};

#line 240 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
FPrimitiveSceneData GetPrimitiveData(FVertexFactoryIntermediates Intermediates)
{
	return Intermediates.SceneData.Primitive;
}

#line 246 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
bool UVIndexUseZW(int UVIndex)
{
	return (UVIndex % 2) != 0;
}

#line 257 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
void SetUV(inout FVertexFactoryInterpolantsVSToPS Interpolants, int UVIndex, float2 InValue)
{
	[flatten]
	if (UVIndexUseZW(UVIndex))
	{
		Interpolants.TexCoords[UVIndex / 2].zw = InValue;
	}
	else
	{
		Interpolants.TexCoords[UVIndex / 2].xy = InValue;
	}
}

#line 375 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
FMaterialVertexParameters GetMaterialVertexParameters(FVertexFactoryInput Input, FVertexFactoryIntermediates Intermediates, float3 WorldPosition, float3x3 TangentToLocal)
{
	FMaterialVertexParameters Result = MakeInitializedMaterialVertexParameters();
	Result.SceneData = Intermediates.SceneData;
	Result.WorldPosition = WorldPosition;
	Result.VertexColor = Intermediates.Color;
	Result.TangentToWorld = mul(TangentToLocal, GetLocalToWorld3x3()); 
	Result.Particle.MacroUV = NiagaraSpriteVF.MacroUVParameters;
	Result.Particle.Color = Intermediates.Color;
	Result.Particle.MotionBlurFade = 1.0f;
	Result.PreSkinnedPosition = LWCToFloat(Intermediates.Position);
	Result.PreSkinnedNormal = TangentToLocal[2].xyz;

	
	
	Result.PrevFrameLocalToWorld = LWCPromote(float4x4(float4(1.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 1.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 1.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 1.0f)));
































	Result.Particle.SpriteRotation = 0.0f;





	Result.Particle.Random = 0.0f;



	
		Result.TexCoords[0] = Intermediates.TexCoord.xy;
	
		Result.TexCoords[1] = Intermediates.TexCoord.zw;
	
		Result.TexCoords[2] = Intermediates.TexCoord_Unflipped.xy;
	


	
	
	










	return Result;
}

#line 458 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 SafeNormalize(float3 V)
{
	
	
	
	float L = length(V);
	return V = V / max(L, 0.000001); 
}

#line 467 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 SafeNormalizeWithFallback(float3 V, float3 Fallback)
{
	float L = length(V);
	return L > 0.000001 ? V / L : Fallback; 
}

#line 473 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
void GetTangents(FVertexFactoryInput Input, FLWCVector3 ParticlePosition, float Rotation, float3 CustomFacing, float3 CustomAlignment, float3 ParticleDirection, out float3 OutRight, out float3 OutUp)
{
	
	float3 ResolvedViewRight = lerp(ResolvedView.ViewRight, ResolvedView.HMDViewNoRollRight, NiagaraSpriteVF.RemoveHMDRoll);
	float3 ResolvedViewUp = lerp(ResolvedView.ViewUp, ResolvedView.HMDViewNoRollUp, NiagaraSpriteVF.RemoveHMDRoll);

	
	float3 CameraRight = ResolvedViewRight;
	float3 CameraUp = -ResolvedViewUp;
	float3 CameraFacingVector = -ResolvedView.ViewForward;

	
	const float3 CameraVector = LWCToFloat(LWCSubtract(ResolvedView.WorldCameraOrigin, ParticlePosition));
	const float3 CameraDirection = SafeNormalize(CameraVector);

	float3 CustomFacingVector = NiagaraSpriteVFLooseParameters.ParticleFacingMode == 2 ? CustomFacing : CameraDirection;
	
	
	float3 DirectionVector	= lerp(ParticleDirection, CustomAlignment, NiagaraSpriteVFLooseParameters.ParticleAlignmentMode == 2);
	
	
	float3 CameraRightAligned	= SafeNormalize(cross(CustomFacingVector, DirectionVector));
	float3 CameraUpAligned = lerp(-DirectionVector, cross(CustomFacingVector, CameraRightAligned), NiagaraSpriteVFLooseParameters.ParticleFacingMode == 2);

	
	float3 CameraRightPlaneFacing = SafeNormalize(cross(CameraFacingVector,ResolvedViewUp));
	float3 CameraUpPlaneFacing = cross(CameraFacingVector, CameraRightPlaneFacing);

	
	float3 CameraRightCustomFacing = SafeNormalize(cross(CustomFacingVector,ResolvedViewUp));
	float3 CameraUpCustomFacing = cross(CustomFacingVector, CameraRightCustomFacing);

	
	float3 CameraRightPosition = SafeNormalize(cross(CameraDirection,float3(0,0,1)));
	float3 CameraUpPosition = cross(CameraDirection, CameraRightPosition);

	float3 Right;
	float3 Up;
	
	
	[branch]
	if(NiagaraSpriteVFLooseParameters.ParticleAlignmentMode == 0)
	{
		[flatten]
		if (NiagaraSpriteVFLooseParameters.ParticleFacingMode == 4)
		{
			float CameraDistanceSq = dot(CameraVector, CameraVector);
			float Interp = saturate(CameraDistanceSq * NiagaraSpriteVF.CameraFacingBlend.y - NiagaraSpriteVF.CameraFacingBlend.z);
			Right = cross(CameraDirection,float3(0,0,1));
			Up = cross(CameraDirection, Right);
			Right = lerp(Right, CameraRight.xyz, Interp);
			Up = lerp(Up, CameraUp.xyz, Interp);
		} 
		else if(NiagaraSpriteVFLooseParameters.ParticleFacingMode == 0)
		{
			Right = CameraRight.xyz;
			Up = CameraUp.xyz;
		}		 
		else if(NiagaraSpriteVFLooseParameters.ParticleFacingMode == 1)
		{
			Right = CameraRightPlaneFacing;
			Up = CameraUpPlaneFacing;
		}
		else if(NiagaraSpriteVFLooseParameters.ParticleFacingMode == 2)
		{
			Right = CameraRightCustomFacing;
			Up = CameraUpCustomFacing;
		}
		else
		{
			Right = CameraRightPosition;
			Up = CameraUpPosition;
		}
	}
	else 
	{	
		Right = CameraRightAligned;
		Up = CameraUpAligned;
	}


	
	float SinRotation;
	float CosRotation;
	sincos(Rotation, SinRotation, CosRotation);

	float3 SR = Right * SinRotation;
	float3 SU = Up * SinRotation;
	float3 CR = Right * CosRotation;
	float3 CU = Up * CosRotation;
	OutRight = SU + CR;
	OutUp = CU - SR;
}

#line 568 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3x3 CalcTangentBasis(FVertexFactoryIntermediates Intermediates)
{
	
	
	
	float3x3 Result;
	const float2 UVSign = sign(Intermediates.UVScale);
	Result[0] = Intermediates.TangentRight * UVSign.x;
	Result[1] = Intermediates.TangentUp * UVSign.y;

	
	
	if (NiagaraSpriteVF.NormalsType < .5f)
	{
		Result[2] = normalize(cross(Result[0],Result[1]));
		
		if (UVSign.x != UVSign.y)
		{
			Result[2] *= -1.0f;
		}
		
	}
	
	else if (NiagaraSpriteVF.NormalsType < 1.5f)
	{
		float3 TangentZ = normalize(LWCToFloat(LWCSubtract(Intermediates.Position, NiagaraSpriteVF.NormalsSphereCenter.xyz)));
		Result[2] = TangentZ;	
	}
	
	else
	{
		float3 ClosestPointOnCylinder = NiagaraSpriteVF.NormalsSphereCenter.xyz + dot(NiagaraSpriteVF.NormalsCylinderUnitDirection.xyz, LWCToFloat(LWCSubtract(Intermediates.Position, NiagaraSpriteVF.NormalsSphereCenter.xyz))) * NiagaraSpriteVF.NormalsCylinderUnitDirection.xyz;
		float3 TangentZ = normalize(LWCToFloat(LWCSubtract(Intermediates.Position, ClosestPointOnCylinder)));
		Result[2] = TangentZ;	
	}

	return Result;
}

#line 607 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
void ComputeBillboardUVs(FVertexFactoryInput Input, float2 ParticleSize, float SubImageIndex, out float2 UVForPosition, out float2 UVForTexturing, out float2 UVForTexturingUnflipped)
{
	
	float2 UVFlip = sign(ParticleSize);


	[branch]
	if (NiagaraSpriteVFLooseParameters.NumCutoutVerticesPerFrame > 0)
	{
		
		const uint VertexIndexMask = NiagaraSpriteVFLooseParameters.NumCutoutVerticesPerFrame == 8 ? 7 : 3; 
		uint CutoutVertexIndex = Input.VertexId & VertexIndexMask;
		float NumFrames = NiagaraSpriteVF.SubImageSize.x * NiagaraSpriteVF.SubImageSize.y;
		uint SubImageIndexInt = (uint)fmod(SubImageIndex, NumFrames);

		[flatten]
		if (UVFlip.x * UVFlip.y < 0)
		{
			
			CutoutVertexIndex = NiagaraSpriteVFLooseParameters.NumCutoutVerticesPerFrame - 1 - CutoutVertexIndex;
		}

		
		UVForTexturing = UVForTexturingUnflipped = NiagaraSpriteVFLooseParameters.CutoutGeometry[SubImageIndexInt * NiagaraSpriteVFLooseParameters.NumCutoutVerticesPerFrame + CutoutVertexIndex];

		
		
		UVForPosition.x = UVFlip.x < 0.0 ? 1.0 - UVForTexturing.x : UVForTexturing.x;
		UVForPosition.y = UVFlip.y < 0.0 ? 1.0 - UVForTexturing.y : UVForTexturing.y;
	}
	else

	{
		UVForTexturing.x = UVFlip.x < 0.0 ? 1.0 - Input.TexCoord.x : Input.TexCoord.x;
		UVForTexturing.y = UVFlip.y < 0.0 ? 1.0 - Input.TexCoord.y : Input.TexCoord.y;

		
		UVForPosition = UVForTexturingUnflipped = Input.TexCoord.xy;
	}
}

#line 648 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
FLWCVector3 SimToWorldPos(float3 SimSpacePos, FLWCMatrix LocalToWorld)
{
	if (NiagaraSpriteVF.bLocalSpace)
	{
		return LWCMultiply(SimSpacePos, LocalToWorld);
	}
	
	return MakeLWCVector3(NiagaraSpriteVF.SystemLWCTile, SimSpacePos);
}

#line 658 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 LocalToWorldVec(float3 LocalSpaceVec, float3x3 LocalToWorld)
{
	const float3 InvScale = GetPrimitiveDataFromUniformBuffer().InvNonUniformScale;
	return
		InvScale.x * LocalToWorld[0] * LocalSpaceVec.xxx +
		InvScale.y * LocalToWorld[1] * LocalSpaceVec.yyy +
		InvScale.z * LocalToWorld[2] * LocalSpaceVec.zzz;
}

#line 667 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 SimToWorldVec(float3 SimSpaceVec, float3x3 LocalToWorld)
{
	if (NiagaraSpriteVF.bLocalSpace)
	{
		return LocalToWorldVec(SimSpaceVec, LocalToWorld);
	}
	
	return SimSpaceVec;
}

#line 681 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
FLWCVector3 GetNiagaraParticlePosition(uint InstanceID)
{
	float3 ParticlePos = SafeGetVec3(NiagaraSpriteVF.PositionDataOffset, InstanceID, NiagaraSpriteVF.DefaultPos.xyz);
	return SimToWorldPos(ParticlePos, GetPrimitiveDataFromUniformBuffer().LocalToWorld);
}

#line 687 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
FLWCVector3 GetNiagaraPreviousParticlePosition(uint InstanceID)
{
	float3 PrevParticlePos = SafeGetVec3(NiagaraSpriteVF.PrevPositionDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevPos.xyz);
	return SimToWorldPos(PrevParticlePos, GetPrimitiveDataFromUniformBuffer().PreviousLocalToWorld);
}

#line 693 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 GetNiagaraParticleVelocity(uint InstanceID)
{
	return SimToWorldVec(SafeGetVec3(NiagaraSpriteVF.VelocityDataOffset, InstanceID, NiagaraSpriteVF.DefaultVelocity.xyz), LWCToFloat3x3(GetPrimitiveDataFromUniformBuffer().LocalToWorld));
}

#line 698 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 GetNiagaraPreviousParticleVelocity(uint InstanceID)
{
	return SimToWorldVec(SafeGetVec3(NiagaraSpriteVF.PrevVelocityDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevVelocity.xyz), LWCToFloat3x3(GetPrimitiveDataFromUniformBuffer().PreviousLocalToWorld));
}

#line 703 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float2 GetNiagaraParticleSize(uint InstanceID)
{
	return SafeGetVec2(NiagaraSpriteVF.SizeDataOffset, InstanceID, NiagaraSpriteVF.DefaultSize.xy);
}

#line 708 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float2 GetNiagaraPreviousParticleSize(uint InstanceID)
{
	return SafeGetVec2(NiagaraSpriteVF.PrevSizeDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevSize.xy);
}

#line 713 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float GetNiagaraParticleRotation(uint InstanceID)
{
	
	const float Rotation = (SafeGetFloat(NiagaraSpriteVF.RotationDataOffset, InstanceID, NiagaraSpriteVF.DefaultRotation) / 180.0f) * PI;
	return Rotation * NiagaraSpriteVF.RotationScale + NiagaraSpriteVF.RotationBias;
}

#line 720 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float GetNiagaraPreviousParticleRotation(uint InstanceID)
{
	
	const float PrevRotation = (SafeGetFloat(NiagaraSpriteVF.PrevRotationDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevRotation) / 180.0f) * PI;
	return PrevRotation * NiagaraSpriteVF.RotationScale + NiagaraSpriteVF.RotationBias;
}

#line 727 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float4 GetNiagaraParticleColor(uint InstanceID)
{
	return SafeGetVec4(NiagaraSpriteVF.ColorDataOffset, InstanceID, NiagaraSpriteVF.DefaultColor);
}

#line 732 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float2 GetNiagaraUVScale(uint InstanceID)
{
	return SafeGetVec2(NiagaraSpriteVF.UVScaleDataOffset, InstanceID, NiagaraSpriteVF.DefaultUVScale.xy);
}

#line 737 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float2 GetNiagaraPivotOffset(uint InstanceID)
{
	return SafeGetVec2(NiagaraSpriteVF.PivotOffsetDataOffset, InstanceID, NiagaraSpriteVF.DefaultPivotOffset);
}

#line 742 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float2 GetNiagaraPreviousPivotOffset(uint InstanceID)
{
	return SafeGetVec2(NiagaraSpriteVF.PrevPivotOffsetDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevPivotOffset);
}

#line 752 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float GetNiagaraCameraOffset(uint InstanceID)
{
	return SafeGetFloat(NiagaraSpriteVF.CameraOffsetDataOffset, InstanceID, NiagaraSpriteVF.DefaultCamOffset);
}

#line 757 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float GetNiagaraPreviousCameraOffset(uint InstanceID)
{
	return SafeGetFloat(NiagaraSpriteVF.PrevCameraOffsetDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevCamOffset);
}

#line 794 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float GetNiagaraParticleSubimage(uint InstanceID)
{
	
	return SafeGetFloat(NiagaraSpriteVF.SubimageDataOffset, InstanceID, NiagaraSpriteVF.DefaultSubImage);
}

#line 800 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 GetNiagaraParticleFacingVector(uint InstanceID)
{
	
	return SimToWorldVec(SafeGetVec3(NiagaraSpriteVF.FacingDataOffset, InstanceID, NiagaraSpriteVF.DefaultFacing.xyz), LWCToFloat3x3(GetPrimitiveDataFromUniformBuffer().LocalToWorld));
}

#line 806 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 GetNiagaraPreviousParticleFacingVector(uint InstanceID)
{
	
	return SimToWorldVec(SafeGetVec3(NiagaraSpriteVF.PrevFacingDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevFacing.xyz), LWCToFloat3x3(GetPrimitiveDataFromUniformBuffer().PreviousLocalToWorld));
}

#line 812 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 GetNiagaraParticleAlignmentVector(uint InstanceID)
{
	return SimToWorldVec(SafeGetVec3(NiagaraSpriteVF.AlignmentDataOffset, InstanceID, NiagaraSpriteVF.DefaultAlignment.xyz), LWCToFloat3x3(GetPrimitiveDataFromUniformBuffer().LocalToWorld));
}

#line 817 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3 GetNiagaraPreviousParticleAlignmentVector(uint InstanceID)
{
	return SimToWorldVec(SafeGetVec3(NiagaraSpriteVF.PrevAlignmentDataOffset, InstanceID, NiagaraSpriteVF.DefaultPrevAlignment.xyz), LWCToFloat3x3(GetPrimitiveDataFromUniformBuffer().PreviousLocalToWorld));
}

#line 822 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
FVertexFactoryIntermediates GetVertexFactoryIntermediates(FVertexFactoryInput Input)
{
	FVertexFactoryIntermediates Intermediates = (FVertexFactoryIntermediates)0;
	uint ParticleID = GetInstanceId(Input.InstanceId); 

	if(NiagaraSpriteVFLooseParameters.SortedIndicesOffset != 0xFFFFFFFF)
	{
		ParticleID = NiagaraSpriteVFLooseParameters.SortedIndices[NiagaraSpriteVFLooseParameters.SortedIndicesOffset + ParticleID];
	}

	const FLWCVector3 ParticlePosition = GetNiagaraParticlePosition(ParticleID);
	const float ParticleRotation = GetNiagaraParticleRotation(ParticleID);
	const float2 ParticleSize = GetNiagaraParticleSize(ParticleID);
	const float3 ParticleVelocity = GetNiagaraParticleVelocity(ParticleID);
	const float SubImageIndex = GetNiagaraParticleSubimage(ParticleID);
	const float3 CustomFacing = SafeNormalize(GetNiagaraParticleFacingVector(ParticleID));
	const float3 CustomAlignment = SafeNormalize(GetNiagaraParticleAlignmentVector(ParticleID));	
	const float2 PivotOffset = GetNiagaraPivotOffset(ParticleID);
	const float2 UVScale = GetNiagaraUVScale(ParticleID);
	const float3 CameraOffset = SafeNormalize(LWCToFloat(LWCSubtract(ResolvedView.WorldCameraOrigin, ParticlePosition))) * GetNiagaraCameraOffset(ParticleID);
	
	Intermediates.SceneData =  GetSceneDataIntermediates();
	Intermediates.Position = ParticlePosition;
	Intermediates.Size = ParticleSize;
	Intermediates.Color	= GetNiagaraParticleColor(ParticleID);
	Intermediates.CustomFacingVector = CustomFacing;
	Intermediates.CustomAlignmentVector = SafeNormalize(GetNiagaraParticleAlignmentVector(ParticleID));
	Intermediates.UVScale = UVScale;


















	
	{
		const float3 ParticleDirection = SafeNormalizeWithFallback(ParticleVelocity, float3(0,0,1));
		float3 Right,Up;

		GetTangents(Input, ParticlePosition, ParticleRotation, CustomFacing, CustomAlignment, ParticleDirection, Right, Up);
		Intermediates.TangentUp = Up;
		Intermediates.TangentRight = Right;
	}

	float2 UVForPosition;
	float2 UVForTexturing;
	float2 UVForTexturingUnflipped;
	ComputeBillboardUVs(Input, ParticleSize, SubImageIndex, UVForPosition, UVForTexturing, UVForTexturingUnflipped);

	UVForTexturing.xy = float2(0.5f, 0.5f) + (UVForTexturing.xy - float2(0.5f, 0.5f) ) *  UVScale.xy; 
	const float2 Size = abs(Intermediates.Size.xy);

	
	
	
	
	
	float PixelSizeRatio = 1.0f;
	if ( NiagaraSpriteVF.PixelCoverageEnabled != 0 )
	{
		const float Depth = dot(LWCToFloat(LWCSubtract(ParticlePosition, ResolvedView.WorldCameraOrigin)), ResolvedView.ViewForward);
		const float HalfSize = max(Size.x, Size.y) * 0.5f;
		const float PixelSize = max(View.ViewSizeAndInvSize.z * GetTanHalfFieldOfView().x * Depth * 2.0f, HalfSize);
		PixelSizeRatio = PixelSize / HalfSize;

		float Coverage = saturate(HalfSize * 2.0f / PixelSize);
		Coverage = Coverage * Coverage;
		Intermediates.Color = (Intermediates.Color * Coverage * NiagaraSpriteVF.PixelCoverageColorBlend) + (Intermediates.Color * (1 - NiagaraSpriteVF.PixelCoverageColorBlend));
	}

	
	const float2x3 Tangents = float2x3(Intermediates.TangentRight, Intermediates.TangentUp);
	const float3 VertexOffset = CameraOffset + mul(Size * PixelSizeRatio * (UVForPosition - PivotOffset), Tangents);

	Intermediates.VertexWorldPosition = LWCAdd(ParticlePosition, VertexOffset);
		
	
	if ( NiagaraSpriteVF.AccurateMotionVectors != 0 )
	{
		const FLWCVector3 PrevParticlePosition = GetNiagaraPreviousParticlePosition(ParticleID);
		const float PrevParticleRotation = GetNiagaraPreviousParticleRotation(ParticleID);
		const float2 PrevParticleSize = GetNiagaraPreviousParticleSize(ParticleID);
		const float3 PrevParticleVelocity = GetNiagaraPreviousParticleVelocity(ParticleID);		
		const float3 PrevCustomFacing = SafeNormalize(GetNiagaraPreviousParticleFacingVector(ParticleID));
		const float3 PrevCustomAlignment = SafeNormalize(GetNiagaraPreviousParticleAlignmentVector(ParticleID));
		const float2 PrevPivotOffset = GetNiagaraPreviousPivotOffset(ParticleID);
		const float3 PrevCameraOffset = SafeNormalize(LWCToFloat(LWCSubtract(ResolvedView.PrevWorldCameraOrigin, PrevParticlePosition))) * GetNiagaraPreviousCameraOffset(ParticleID);
		const float3 PrevParticleDirection = SafeNormalizeWithFallback(PrevParticleVelocity, float3(0,0,1));
			
		float3 PrevRight, PrevUp;
		GetTangents(Input, PrevParticlePosition, PrevParticleRotation, PrevCustomFacing, PrevCustomAlignment, PrevParticleDirection, PrevRight, PrevUp);
		
		
		float2 PrevUVForPosition;
		float2 PrevUVForTexturing;
		float2 PrevUVForTexturingUnflipped;
		ComputeBillboardUVs(Input, PrevParticleSize, SubImageIndex, PrevUVForPosition, PrevUVForTexturing, PrevUVForTexturingUnflipped);
			
		const float2x3 PrevTangents = float2x3(PrevRight, PrevUp);
		const float3 PrevVertexOffset = PrevCameraOffset + mul(abs(PrevParticleSize) * (PrevUVForPosition - PivotOffset), PrevTangents);
		
		Intermediates.PreviousVertexWorldPosition = LWCAdd(PrevParticlePosition, PrevVertexOffset);
	}
	else
	{
		Intermediates.PreviousVertexWorldPosition = LWCSubtract(Intermediates.VertexWorldPosition, LWCPromote(ParticleVelocity * NiagaraSpriteVF.DeltaSeconds));
	}










	
	
	float SubImageLerp = frac(SubImageIndex);

	
	float SubImageA = SubImageIndex - SubImageLerp + 0.5f;
	float SubImageB = SubImageA + 1;
	float SubImageAH = floor( fmod( SubImageA, NiagaraSpriteVF.SubImageSize.x ) );
	float SubImageBH = floor( fmod( SubImageB, NiagaraSpriteVF.SubImageSize.x ) );
	float SubImageAV = floor( SubImageA * NiagaraSpriteVF.SubImageSize.z );
	float SubImageBV = floor( SubImageB * NiagaraSpriteVF.SubImageSize.z );
	Intermediates.TexCoord.xy = (float2( SubImageAH, SubImageAV ) + UVForTexturing) * NiagaraSpriteVF.SubImageSize.zw;
	Intermediates.TexCoord.zw = (float2(SubImageBH, SubImageBV) + UVForTexturing) * NiagaraSpriteVF.SubImageSize.zw;




	Intermediates.SubImageLerp = (NiagaraSpriteVF.SubImageBlendMode == 1) ? SubImageLerp : 0.0f;

















	Intermediates.TangentToLocal = CalcTangentBasis(Intermediates);











	return Intermediates;
}

#line 1001 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float4 VertexFactoryGetWorldPosition(FVertexFactoryInput Input, FVertexFactoryIntermediates Intermediates)
{
	return float4(LWCToFloat(LWCAdd(Intermediates.VertexWorldPosition, ResolvedView.PreViewTranslation)), 1.0f);
}

#line 1011 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float4 VertexFactoryGetRasterizedWorldPosition(FVertexFactoryInput Input, FVertexFactoryIntermediates Intermediates, float4 TranslatedWorldPosition)
{








	return TranslatedWorldPosition;

}

#line 1035 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
FVertexFactoryInterpolantsVSToPS VertexFactoryGetInterpolantsVSToPS(FVertexFactoryInput Input, FVertexFactoryIntermediates Intermediates, FMaterialVertexParameters VertexParameters)
{
	FVertexFactoryInterpolantsVSToPS Interpolants;

	
	Interpolants = (FVertexFactoryInterpolantsVSToPS)0;


	float2 CustomizedUVs[1];
	GetMaterialCustomizedUVs(VertexParameters, CustomizedUVs);
	GetCustomInterpolators(VertexParameters, CustomizedUVs);

	[unroll]
	for (int CoordinateIndex = 0; CoordinateIndex < 1; CoordinateIndex++)
	{
		SetUV(Interpolants, CoordinateIndex, CustomizedUVs[CoordinateIndex]);
	}











	
	
	float3x3 TangentToWorld = Intermediates.TangentToLocal;

	Interpolants.TangentToWorld0AndInterp_Sizer.xyz = TangentToWorld[0];
	Interpolants.TangentToWorld0AndInterp_Sizer.w = Intermediates.SubImageLerp;
	Interpolants.TangentToWorld2 = float4(TangentToWorld[2], sign(determinant(Intermediates.TangentToLocal)));































	Interpolants.LightingPositionOffset = Intermediates.LightingPositionOffset;


















	return Interpolants;
}

#line 1235 "/Plugin/FX/Niagara/Private/NiagaraSpriteVertexFactory.ush"
float3x3 VertexFactoryGetTangentToLocal(FVertexFactoryInput Input, FVertexFactoryIntermediates Intermediates)
{
	return Intermediates.TangentToLocal;
}

#line 9 "/Engine/Private/VertexFactoryDefaultInterface.ush"
FSceneDataIntermediates GetSceneDataIntermediates(FVertexFactoryIntermediates Intermediates)
{
	return Intermediates.SceneData;
}

#line 23 "/Engine/Private/BasePassVertexCommon.ush"
struct FBasePassVSToPS
{
	FVertexFactoryInterpolantsVSToPS FactoryInterpolants;
	FSharedBasePassInterpolants BasePassInterpolants;
	float4 Position : SV_POSITION;
};

#line 28 "/Engine/Private/BasePassVertexShader.usf"
void Main(
	FVertexFactoryInput Input,
	out FBasePassVSToPS Output






	)
{




	const uint EyeIndex = 0;

	ResolvedView =  (ResolveView());

	FVertexFactoryIntermediates VFIntermediates = GetVertexFactoryIntermediates(Input);
	float4 WorldPositionExcludingWPO = VertexFactoryGetWorldPosition(Input, VFIntermediates);
	float4 WorldPosition = WorldPositionExcludingWPO;
	float4 ClipSpacePosition;

	float3x3 TangentToLocal = VertexFactoryGetTangentToLocal(Input, VFIntermediates);	
	FMaterialVertexParameters VertexParameters = GetMaterialVertexParameters(Input, VFIntermediates, WorldPosition.xyz, TangentToLocal);

	
	
	
	{
		WorldPosition.xyz += GetMaterialWorldPositionOffset(VertexParameters);
	}

	{
		float4 RasterizedWorldPosition = VertexFactoryGetRasterizedWorldPosition(Input, VFIntermediates, WorldPosition);
		ClipSpacePosition = mul(RasterizedWorldPosition, ResolvedView.TranslatedWorldToClip);
		Output.Position =  MakePrecise( ClipSpacePosition );
	}




	
		Output.BasePassInterpolants.PixelPositionExcludingWPO = WorldPositionExcludingWPO.xyz;
	

	Output.FactoryInterpolants = VertexFactoryGetInterpolantsVSToPS(Input, VFIntermediates, VertexParameters);






#line 115 "/Engine/Private/BasePassVertexShader.usf"







#line 196 "/Engine/Private/BasePassVertexShader.usf"


	
#line 211 "/Engine/Private/BasePassVertexShader.usf"


#line 230 "/Engine/Private/BasePassVertexShader.usf"

}



#if 0 /*BEGIN_RESOURCE_TABLES*/
TranslucentBasePass, 274269473
BasePass, 148439296
View, 376963194
Strata, 158337041
DrawRectangleParameters, 3145984
InstancedView, 450888449
MobileReflectionCapture, 2425088
InstanceVF, 104204038
SingleLayerWater, 1641252
PrimitiveDither, 1048832
PrimitiveFade, 1048832
DeferredDecal, 2097668
SceneTexturesStruct, 158338568
MobileSceneTextures, 147131313
Primitive, 50331904
Scene, 273683233
InstanceCulling, 3146265
SpeedTreeData, 39846144
Atmosphere, 11534592
BlueNoise, 3473677
OpaqueBasePass, 159911720
FogStruct, 96995368
ReflectionCaptureES31, 943719169
ReflectionCaptureSM5, -1076886783
ReflectionStruct, 206569728
ForwardLightData, 466097176
PlanarReflectionStruct, 22348032
DeferredLightUniforms, 10486016
VirtualShadowMap, 277877352
MobileBasePass, 118234733
PrecomputedLightingBuffer, 15728896
NiagaraSpriteVFLooseParameters, 105252632
NiagaraSpriteVF, 39846144
SpriteVF, 11534592
MaterialCollection, 2097408
Material, 76351752
NULL, 0
TranslucentBasePass_Shared_Forward_DirectionalLightShadowmapAtlas, TranslucentBasePass, 9, 0
TranslucentBasePass_Shared_Forward_ShadowmapSampler, TranslucentBasePass, 8, 1
TranslucentBasePass_Shared_Forward_DirectionalLightStaticShadowmap, TranslucentBasePass, 5, 2
TranslucentBasePass_Shared_Forward_StaticShadowmapSampler, TranslucentBasePass, 8, 3
TranslucentBasePass_Shared_Forward_ForwardLocalLightBuffer, TranslucentBasePass, 16, 4
TranslucentBasePass_Shared_Forward_NumCulledLightsGrid, TranslucentBasePass, 16, 5
TranslucentBasePass_Shared_Forward_CulledLightDataGrid32Bit, TranslucentBasePass, 16, 6
TranslucentBasePass_Shared_Forward_CulledLightDataGrid16Bit, TranslucentBasePass, 16, 7
TranslucentBasePass_Shared_ForwardISR_DirectionalLightShadowmapAtlas, TranslucentBasePass, 9, 8
TranslucentBasePass_Shared_ForwardISR_ShadowmapSampler, TranslucentBasePass, 8, 9
TranslucentBasePass_Shared_ForwardISR_DirectionalLightStaticShadowmap, TranslucentBasePass, 5, 10
TranslucentBasePass_Shared_ForwardISR_StaticShadowmapSampler, TranslucentBasePass, 8, 11
TranslucentBasePass_Shared_ForwardISR_ForwardLocalLightBuffer, TranslucentBasePass, 16, 12
TranslucentBasePass_Shared_ForwardISR_NumCulledLightsGrid, TranslucentBasePass, 16, 13
TranslucentBasePass_Shared_ForwardISR_CulledLightDataGrid32Bit, TranslucentBasePass, 16, 14
TranslucentBasePass_Shared_ForwardISR_CulledLightDataGrid16Bit, TranslucentBasePass, 16, 15
TranslucentBasePass_Shared_Reflection_SkyLightCubemap, TranslucentBasePass, 9, 16
TranslucentBasePass_Shared_Reflection_SkyLightCubemapSampler, TranslucentBasePass, 8, 17
TranslucentBasePass_Shared_Reflection_SkyLightBlendDestinationCubemap, TranslucentBasePass, 5, 18
TranslucentBasePass_Shared_Reflection_SkyLightBlendDestinationCubemapSampler, TranslucentBasePass, 8, 19
TranslucentBasePass_Shared_Reflection_ReflectionCubemap, TranslucentBasePass, 5, 20
TranslucentBasePass_Shared_Reflection_ReflectionCubemapSampler, TranslucentBasePass, 8, 21
TranslucentBasePass_Shared_Reflection_PreIntegratedGF, TranslucentBasePass, 5, 22
TranslucentBasePass_Shared_Reflection_PreIntegratedGFSampler, TranslucentBasePass, 8, 23
TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionTexture, TranslucentBasePass, 5, 24
TranslucentBasePass_Shared_PlanarReflection_PlanarReflectionSampler, TranslucentBasePass, 8, 25
TranslucentBasePass_Shared_Fog_FogInscatteringColorCubemap, TranslucentBasePass, 5, 26
TranslucentBasePass_Shared_Fog_FogInscatteringColorSampler, TranslucentBasePass, 8, 27
TranslucentBasePass_Shared_Fog_IntegratedLightScattering, TranslucentBasePass, 9, 28
TranslucentBasePass_Shared_Fog_IntegratedLightScatteringSampler, TranslucentBasePass, 8, 29
TranslucentBasePass_Shared_FogISR_FogInscatteringColorCubemap, TranslucentBasePass, 5, 30
TranslucentBasePass_Shared_FogISR_FogInscatteringColorSampler, TranslucentBasePass, 8, 31
TranslucentBasePass_Shared_FogISR_IntegratedLightScattering, TranslucentBasePass, 9, 32
TranslucentBasePass_Shared_FogISR_IntegratedLightScatteringSampler, TranslucentBasePass, 8, 33
TranslucentBasePass_SceneTextures_SceneColorTexture, TranslucentBasePass, 9, 34
TranslucentBasePass_SceneTextures_SceneDepthTexture, TranslucentBasePass, 9, 35
TranslucentBasePass_SceneTextures_ScenePartialDepthTexture, TranslucentBasePass, 9, 36
TranslucentBasePass_SceneTextures_GBufferATexture, TranslucentBasePass, 9, 37
TranslucentBasePass_SceneTextures_GBufferBTexture, TranslucentBasePass, 9, 38
TranslucentBasePass_SceneTextures_GBufferCTexture, TranslucentBasePass, 9, 39
TranslucentBasePass_SceneTextures_GBufferDTexture, TranslucentBasePass, 9, 40
TranslucentBasePass_SceneTextures_GBufferETexture, TranslucentBasePass, 9, 41
TranslucentBasePass_SceneTextures_GBufferFTexture, TranslucentBasePass, 9, 42
TranslucentBasePass_SceneTextures_GBufferVelocityTexture, TranslucentBasePass, 9, 43
TranslucentBasePass_SceneTextures_ScreenSpaceAOTexture, TranslucentBasePass, 9, 44
TranslucentBasePass_SceneTextures_CustomDepthTexture, TranslucentBasePass, 9, 45
TranslucentBasePass_SceneTextures_CustomStencilTexture, TranslucentBasePass, 12, 46
TranslucentBasePass_SceneTextures_PointClampSampler, TranslucentBasePass, 8, 47
TranslucentBasePass_Strata_MaterialTextureArray, TranslucentBasePass, 9, 48
TranslucentBasePass_Strata_TopLayerTexture, TranslucentBasePass, 9, 49
TranslucentBasePass_ForwardDirLightCloudShadow_CloudShadowmapTexture, TranslucentBasePass, 9, 50
TranslucentBasePass_ForwardDirLightCloudShadow_CloudShadowmapSampler, TranslucentBasePass, 8, 51
TranslucentBasePass_OIT_OutOITSampleCount, TranslucentBasePass, 13, 52
TranslucentBasePass_OIT_OutOITSampleColor, TranslucentBasePass, 13, 53
TranslucentBasePass_OIT_OutOITSampleTrans, TranslucentBasePass, 13, 54
TranslucentBasePass_OIT_OutOITSampleDepth, TranslucentBasePass, 13, 55
TranslucentBasePass_HZBTexture, TranslucentBasePass, 9, 56
TranslucentBasePass_HZBSampler, TranslucentBasePass, 8, 57
TranslucentBasePass_PrevSceneColor, TranslucentBasePass, 12, 58
TranslucentBasePass_PrevSceneColorSampler, TranslucentBasePass, 8, 59
TranslucentBasePass_VolumetricCloudColor, TranslucentBasePass, 9, 60
TranslucentBasePass_VolumetricCloudColorSampler, TranslucentBasePass, 8, 61
TranslucentBasePass_VolumetricCloudDepth, TranslucentBasePass, 9, 62
TranslucentBasePass_VolumetricCloudDepthSampler, TranslucentBasePass, 8, 63
TranslucentBasePass_TranslucencyLightingVolumeAmbientInner, TranslucentBasePass, 9, 64
TranslucentBasePass_TranslucencyLightingVolumeAmbientOuter, TranslucentBasePass, 9, 65
TranslucentBasePass_TranslucencyLightingVolumeDirectionalInner, TranslucentBasePass, 9, 66
TranslucentBasePass_TranslucencyLightingVolumeDirectionalOuter, TranslucentBasePass, 9, 67
TranslucentBasePass_RadianceProbeIndirectionTexture, TranslucentBasePass, 9, 68
TranslucentBasePass_RadianceCacheFinalRadianceAtlas, TranslucentBasePass, 9, 69
TranslucentBasePass_RadianceCacheFinalIrradianceAtlas, TranslucentBasePass, 9, 70
TranslucentBasePass_RadianceCacheProbeOcclusionAtlas, TranslucentBasePass, 9, 71
TranslucentBasePass_RadianceCacheDepthAtlas, TranslucentBasePass, 9, 72
TranslucentBasePass_ProbeWorldOffset, TranslucentBasePass, 16, 73
TranslucentBasePass_Radiance, TranslucentBasePass, 9, 74
TranslucentBasePass_Normal, TranslucentBasePass, 9, 75
TranslucentBasePass_SceneDepth, TranslucentBasePass, 9, 76
TranslucentBasePass_TranslucencyGIVolume0, TranslucentBasePass, 9, 77
TranslucentBasePass_TranslucencyGIVolume1, TranslucentBasePass, 9, 78
TranslucentBasePass_TranslucencyGIVolumeHistory0, TranslucentBasePass, 9, 79
TranslucentBasePass_TranslucencyGIVolumeHistory1, TranslucentBasePass, 9, 80
TranslucentBasePass_TranslucencyGIVolumeSampler, TranslucentBasePass, 8, 81
TranslucentBasePass_PreIntegratedGFTexture, TranslucentBasePass, 5, 82
TranslucentBasePass_PreIntegratedGFSampler, TranslucentBasePass, 8, 83
TranslucentBasePass_EyeAdaptationBuffer, TranslucentBasePass, 16, 84
TranslucentBasePass_SceneColorCopyTexture, TranslucentBasePass, 9, 85
TranslucentBasePass_SceneColorCopySampler, TranslucentBasePass, 8, 86
TranslucentBasePass_BlueNoise_ScalarTexture, TranslucentBasePass, 5, 87
TranslucentBasePass_BlueNoise_Vec2Texture, TranslucentBasePass, 5, 88
BasePass_Forward_DirectionalLightShadowmapAtlas, BasePass, 9, 0
BasePass_Forward_ShadowmapSampler, BasePass, 8, 1
BasePass_Forward_DirectionalLightStaticShadowmap, BasePass, 5, 2
BasePass_Forward_StaticShadowmapSampler, BasePass, 8, 3
BasePass_Forward_ForwardLocalLightBuffer, BasePass, 16, 4
BasePass_Forward_NumCulledLightsGrid, BasePass, 16, 5
BasePass_Forward_CulledLightDataGrid32Bit, BasePass, 16, 6
BasePass_Forward_CulledLightDataGrid16Bit, BasePass, 16, 7
BasePass_ForwardISR_DirectionalLightShadowmapAtlas, BasePass, 9, 8
BasePass_ForwardISR_ShadowmapSampler, BasePass, 8, 9
BasePass_ForwardISR_DirectionalLightStaticShadowmap, BasePass, 5, 10
BasePass_ForwardISR_StaticShadowmapSampler, BasePass, 8, 11
BasePass_ForwardISR_ForwardLocalLightBuffer, BasePass, 16, 12
BasePass_ForwardISR_NumCulledLightsGrid, BasePass, 16, 13
BasePass_ForwardISR_CulledLightDataGrid32Bit, BasePass, 16, 14
BasePass_ForwardISR_CulledLightDataGrid16Bit, BasePass, 16, 15
BasePass_Reflection_SkyLightCubemap, BasePass, 9, 16
BasePass_Reflection_SkyLightCubemapSampler, BasePass, 8, 17
BasePass_Reflection_SkyLightBlendDestinationCubemap, BasePass, 5, 18
BasePass_Reflection_SkyLightBlendDestinationCubemapSampler, BasePass, 8, 19
BasePass_Reflection_ReflectionCubemap, BasePass, 5, 20
BasePass_Reflection_ReflectionCubemapSampler, BasePass, 8, 21
BasePass_Reflection_PreIntegratedGF, BasePass, 5, 22
BasePass_Reflection_PreIntegratedGFSampler, BasePass, 8, 23
BasePass_PlanarReflection_PlanarReflectionTexture, BasePass, 5, 24
BasePass_PlanarReflection_PlanarReflectionSampler, BasePass, 8, 25
BasePass_Fog_FogInscatteringColorCubemap, BasePass, 5, 26
BasePass_Fog_FogInscatteringColorSampler, BasePass, 8, 27
BasePass_Fog_IntegratedLightScattering, BasePass, 9, 28
BasePass_Fog_IntegratedLightScatteringSampler, BasePass, 8, 29
BasePass_FogISR_FogInscatteringColorCubemap, BasePass, 5, 30
BasePass_FogISR_FogInscatteringColorSampler, BasePass, 8, 31
BasePass_FogISR_IntegratedLightScattering, BasePass, 9, 32
BasePass_FogISR_IntegratedLightScatteringSampler, BasePass, 8, 33
View_MaterialTextureBilinearWrapedSampler, View, 8, 0
View_MaterialTextureBilinearClampedSampler, View, 8, 1
View_VolumetricLightmapIndirectionTexture, View, 5, 2
View_VolumetricLightmapBrickAmbientVector, View, 5, 3
View_VolumetricLightmapBrickSHCoefficients0, View, 5, 4
View_VolumetricLightmapBrickSHCoefficients1, View, 5, 5
View_VolumetricLightmapBrickSHCoefficients2, View, 5, 6
View_VolumetricLightmapBrickSHCoefficients3, View, 5, 7
View_VolumetricLightmapBrickSHCoefficients4, View, 5, 8
View_VolumetricLightmapBrickSHCoefficients5, View, 5, 9
View_SkyBentNormalBrickTexture, View, 5, 10
View_DirectionalLightShadowingBrickTexture, View, 5, 11
View_VolumetricLightmapBrickAmbientVectorSampler, View, 8, 12
View_VolumetricLightmapTextureSampler0, View, 8, 13
View_VolumetricLightmapTextureSampler1, View, 8, 14
View_VolumetricLightmapTextureSampler2, View, 8, 15
View_VolumetricLightmapTextureSampler3, View, 8, 16
View_VolumetricLightmapTextureSampler4, View, 8, 17
View_VolumetricLightmapTextureSampler5, View, 8, 18
View_SkyBentNormalTextureSampler, View, 8, 19
View_DirectionalLightShadowingTextureSampler, View, 8, 20
View_GlobalDistanceFieldPageAtlasTexture, View, 5, 21
View_GlobalDistanceFieldCoverageAtlasTexture, View, 5, 22
View_GlobalDistanceFieldPageTableTexture, View, 5, 23
View_GlobalDistanceFieldMipTexture, View, 5, 24
View_GlobalDistanceFieldPageAtlasTextureSampler, View, 8, 25
View_GlobalDistanceFieldCoverageAtlasTextureSampler, View, 8, 26
View_GlobalDistanceFieldMipTextureSampler, View, 8, 27
View_AtmosphereTransmittanceTexture, View, 5, 28
View_AtmosphereTransmittanceTextureSampler, View, 8, 29
View_AtmosphereIrradianceTexture, View, 5, 30
View_AtmosphereIrradianceTextureSampler, View, 8, 31
View_AtmosphereInscatterTexture, View, 5, 32
View_AtmosphereInscatterTextureSampler, View, 8, 33
View_PerlinNoiseGradientTexture, View, 5, 34
View_PerlinNoiseGradientTextureSampler, View, 8, 35
View_PerlinNoise3DTexture, View, 5, 36
View_PerlinNoise3DTextureSampler, View, 8, 37
View_SobolSamplingTexture, View, 5, 38
View_SharedPointWrappedSampler, View, 8, 39
View_SharedPointClampedSampler, View, 8, 40
View_SharedBilinearWrappedSampler, View, 8, 41
View_SharedBilinearClampedSampler, View, 8, 42
View_SharedBilinearAnisoClampedSampler, View, 8, 43
View_SharedTrilinearWrappedSampler, View, 8, 44
View_SharedTrilinearClampedSampler, View, 8, 45
View_PreIntegratedBRDF, View, 5, 46
View_PreIntegratedBRDFSampler, View, 8, 47
View_SkyIrradianceEnvironmentMap, View, 6, 48
View_TransmittanceLutTexture, View, 5, 49
View_TransmittanceLutTextureSampler, View, 8, 50
View_SkyViewLutTexture, View, 5, 51
View_SkyViewLutTextureSampler, View, 8, 52
View_DistantSkyLightLutTexture, View, 5, 53
View_DistantSkyLightLutTextureSampler, View, 8, 54
View_CameraAerialPerspectiveVolume, View, 5, 55
View_CameraAerialPerspectiveVolumeSampler, View, 8, 56
View_CameraAerialPerspectiveVolumeMieOnly, View, 5, 57
View_CameraAerialPerspectiveVolumeMieOnlySampler, View, 8, 58
View_CameraAerialPerspectiveVolumeRayOnly, View, 5, 59
View_CameraAerialPerspectiveVolumeRayOnlySampler, View, 8, 60
View_HairScatteringLUTTexture, View, 5, 61
View_HairScatteringLUTSampler, View, 8, 62
View_GGXLTCMatTexture, View, 5, 63
View_GGXLTCMatSampler, View, 8, 64
View_GGXLTCAmpTexture, View, 5, 65
View_GGXLTCAmpSampler, View, 8, 66
View_SheenLTCTexture, View, 5, 67
View_SheenLTCSampler, View, 8, 68
View_ShadingEnergyGGXSpecTexture, View, 5, 69
View_ShadingEnergyGGXGlassTexture, View, 5, 70
View_ShadingEnergyClothSpecTexture, View, 5, 71
View_ShadingEnergyDiffuseTexture, View, 5, 72
View_ShadingEnergySampler, View, 8, 73
View_GlintTexture, View, 5, 74
View_GlintSampler, View, 8, 75
View_SimpleVolumeTexture, View, 5, 76
View_SimpleVolumeTextureSampler, View, 8, 77
View_SimpleVolumeEnvTexture, View, 5, 78
View_SimpleVolumeEnvTextureSampler, View, 8, 79
View_SSProfilesTexture, View, 5, 80
View_SSProfilesSampler, View, 8, 81
View_SSProfilesTransmissionSampler, View, 8, 82
View_SSProfilesPreIntegratedTexture, View, 5, 83
View_SSProfilesPreIntegratedSampler, View, 8, 84
View_SpecularProfileTexture, View, 5, 85
View_SpecularProfileSampler, View, 8, 86
View_WaterIndirection, View, 6, 87
View_WaterData, View, 6, 88
View_RectLightAtlasTexture, View, 5, 89
View_RectLightAtlasSampler, View, 8, 90
View_IESAtlasTexture, View, 5, 91
View_IESAtlasSampler, View, 8, 92
View_LandscapeWeightmapSampler, View, 8, 93
View_LandscapeIndirection, View, 6, 94
View_LandscapePerComponentData, View, 6, 95
View_VTFeedbackBuffer, View, 7, 96
View_PhysicsFieldClipmapBuffer, View, 6, 97
Strata_MaterialTextureArray, Strata, 9, 0
Strata_TopLayerTexture, Strata, 9, 1
Strata_OpaqueRoughRefractionTexture, Strata, 9, 2
Strata_BSDFOffsetTexture, Strata, 9, 3
Strata_BSDFTileTexture, Strata, 9, 4
Strata_BSDFTileCountBuffer, Strata, 16, 5
MobileReflectionCapture_Texture, MobileReflectionCapture, 5, 0
MobileReflectionCapture_TextureSampler, MobileReflectionCapture, 8, 1
InstanceVF_VertexFetch_InstanceOriginBuffer, InstanceVF, 6, 0
InstanceVF_VertexFetch_InstanceTransformBuffer, InstanceVF, 6, 1
InstanceVF_VertexFetch_InstanceLightmapBuffer, InstanceVF, 6, 2
InstanceVF_InstanceCustomDataBuffer, InstanceVF, 6, 3
SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture, SingleLayerWater, 9, 0
SingleLayerWater_SceneColorWithoutSingleLayerWaterSampler, SingleLayerWater, 8, 1
SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture, SingleLayerWater, 9, 2
SingleLayerWater_SceneDepthWithoutSingleLayerWaterSampler, SingleLayerWater, 8, 3
SingleLayerWater_CustomDepthTexture, SingleLayerWater, 9, 4
SingleLayerWater_CustomStencilTexture, SingleLayerWater, 12, 5
SingleLayerWater_CustomDepthSampler, SingleLayerWater, 8, 6
SingleLayerWater_ForwardDirLightCloudShadow_CloudShadowmapTexture, SingleLayerWater, 9, 7
SingleLayerWater_ForwardDirLightCloudShadow_CloudShadowmapSampler, SingleLayerWater, 8, 8
SingleLayerWater_BlueNoise_ScalarTexture, SingleLayerWater, 5, 9
SingleLayerWater_BlueNoise_Vec2Texture, SingleLayerWater, 5, 10
DeferredDecal_PreviousFrameNormal, DeferredDecal, 5, 0
SceneTexturesStruct_SceneColorTexture, SceneTexturesStruct, 9, 0
SceneTexturesStruct_SceneDepthTexture, SceneTexturesStruct, 9, 1
SceneTexturesStruct_ScenePartialDepthTexture, SceneTexturesStruct, 9, 2
SceneTexturesStruct_GBufferATexture, SceneTexturesStruct, 9, 3
SceneTexturesStruct_GBufferBTexture, SceneTexturesStruct, 9, 4
SceneTexturesStruct_GBufferCTexture, SceneTexturesStruct, 9, 5
SceneTexturesStruct_GBufferDTexture, SceneTexturesStruct, 9, 6
SceneTexturesStruct_GBufferETexture, SceneTexturesStruct, 9, 7
SceneTexturesStruct_GBufferFTexture, SceneTexturesStruct, 9, 8
SceneTexturesStruct_GBufferVelocityTexture, SceneTexturesStruct, 9, 9
SceneTexturesStruct_ScreenSpaceAOTexture, SceneTexturesStruct, 9, 10
SceneTexturesStruct_CustomDepthTexture, SceneTexturesStruct, 9, 11
SceneTexturesStruct_CustomStencilTexture, SceneTexturesStruct, 12, 12
SceneTexturesStruct_PointClampSampler, SceneTexturesStruct, 8, 13
MobileSceneTextures_SceneColorTexture, MobileSceneTextures, 9, 0
MobileSceneTextures_SceneColorTextureSampler, MobileSceneTextures, 8, 1
MobileSceneTextures_SceneDepthTexture, MobileSceneTextures, 9, 2
MobileSceneTextures_SceneDepthTextureSampler, MobileSceneTextures, 8, 3
MobileSceneTextures_ScenePartialDepthTexture, MobileSceneTextures, 9, 4
MobileSceneTextures_ScenePartialDepthTextureSampler, MobileSceneTextures, 8, 5
MobileSceneTextures_CustomDepthTexture, MobileSceneTextures, 9, 6
MobileSceneTextures_CustomDepthTextureSampler, MobileSceneTextures, 8, 7
MobileSceneTextures_CustomStencilTexture, MobileSceneTextures, 12, 8
MobileSceneTextures_SceneVelocityTexture, MobileSceneTextures, 9, 9
MobileSceneTextures_SceneVelocityTextureSampler, MobileSceneTextures, 8, 10
MobileSceneTextures_GBufferATexture, MobileSceneTextures, 9, 11
MobileSceneTextures_GBufferBTexture, MobileSceneTextures, 9, 12
MobileSceneTextures_GBufferCTexture, MobileSceneTextures, 9, 13
MobileSceneTextures_GBufferDTexture, MobileSceneTextures, 9, 14
MobileSceneTextures_SceneDepthAuxTexture, MobileSceneTextures, 9, 15
MobileSceneTextures_LocalLightTextureA, MobileSceneTextures, 9, 16
MobileSceneTextures_LocalLightTextureB, MobileSceneTextures, 9, 17
MobileSceneTextures_GBufferATextureSampler, MobileSceneTextures, 8, 18
MobileSceneTextures_GBufferBTextureSampler, MobileSceneTextures, 8, 19
MobileSceneTextures_GBufferCTextureSampler, MobileSceneTextures, 8, 20
MobileSceneTextures_GBufferDTextureSampler, MobileSceneTextures, 8, 21
MobileSceneTextures_SceneDepthAuxTextureSampler, MobileSceneTextures, 8, 22
Scene_GPUScene_GPUSceneInstanceSceneData, Scene, 16, 0
Scene_GPUScene_GPUSceneInstancePayloadData, Scene, 16, 1
Scene_GPUScene_GPUScenePrimitiveSceneData, Scene, 16, 2
Scene_GPUScene_GPUSceneLightmapData, Scene, 16, 3
Scene_GPUScene_GPUSceneLightData, Scene, 16, 4
InstanceCulling_InstanceIdsBuffer, InstanceCulling, 16, 0
InstanceCulling_PageInfoBuffer, InstanceCulling, 16, 1
BlueNoise_ScalarTexture, BlueNoise, 5, 0
BlueNoise_Vec2Texture, BlueNoise, 5, 1
OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas, OpaqueBasePass, 9, 0
OpaqueBasePass_Shared_Forward_ShadowmapSampler, OpaqueBasePass, 8, 1
OpaqueBasePass_Shared_Forward_DirectionalLightStaticShadowmap, OpaqueBasePass, 5, 2
OpaqueBasePass_Shared_Forward_StaticShadowmapSampler, OpaqueBasePass, 8, 3
OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer, OpaqueBasePass, 16, 4
OpaqueBasePass_Shared_Forward_NumCulledLightsGrid, OpaqueBasePass, 16, 5
OpaqueBasePass_Shared_Forward_CulledLightDataGrid32Bit, OpaqueBasePass, 16, 6
OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit, OpaqueBasePass, 16, 7
OpaqueBasePass_Shared_ForwardISR_DirectionalLightShadowmapAtlas, OpaqueBasePass, 9, 8
OpaqueBasePass_Shared_ForwardISR_ShadowmapSampler, OpaqueBasePass, 8, 9
OpaqueBasePass_Shared_ForwardISR_DirectionalLightStaticShadowmap, OpaqueBasePass, 5, 10
OpaqueBasePass_Shared_ForwardISR_StaticShadowmapSampler, OpaqueBasePass, 8, 11
OpaqueBasePass_Shared_ForwardISR_ForwardLocalLightBuffer, OpaqueBasePass, 16, 12
OpaqueBasePass_Shared_ForwardISR_NumCulledLightsGrid, OpaqueBasePass, 16, 13
OpaqueBasePass_Shared_ForwardISR_CulledLightDataGrid32Bit, OpaqueBasePass, 16, 14
OpaqueBasePass_Shared_ForwardISR_CulledLightDataGrid16Bit, OpaqueBasePass, 16, 15
OpaqueBasePass_Shared_Reflection_SkyLightCubemap, OpaqueBasePass, 9, 16
OpaqueBasePass_Shared_Reflection_SkyLightCubemapSampler, OpaqueBasePass, 8, 17
OpaqueBasePass_Shared_Reflection_SkyLightBlendDestinationCubemap, OpaqueBasePass, 5, 18
OpaqueBasePass_Shared_Reflection_SkyLightBlendDestinationCubemapSampler, OpaqueBasePass, 8, 19
OpaqueBasePass_Shared_Reflection_ReflectionCubemap, OpaqueBasePass, 5, 20
OpaqueBasePass_Shared_Reflection_ReflectionCubemapSampler, OpaqueBasePass, 8, 21
OpaqueBasePass_Shared_Reflection_PreIntegratedGF, OpaqueBasePass, 5, 22
OpaqueBasePass_Shared_Reflection_PreIntegratedGFSampler, OpaqueBasePass, 8, 23
OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionTexture, OpaqueBasePass, 5, 24
OpaqueBasePass_Shared_PlanarReflection_PlanarReflectionSampler, OpaqueBasePass, 8, 25
OpaqueBasePass_Shared_Fog_FogInscatteringColorCubemap, OpaqueBasePass, 5, 26
OpaqueBasePass_Shared_Fog_FogInscatteringColorSampler, OpaqueBasePass, 8, 27
OpaqueBasePass_Shared_Fog_IntegratedLightScattering, OpaqueBasePass, 9, 28
OpaqueBasePass_Shared_Fog_IntegratedLightScatteringSampler, OpaqueBasePass, 8, 29
OpaqueBasePass_Shared_FogISR_FogInscatteringColorCubemap, OpaqueBasePass, 5, 30
OpaqueBasePass_Shared_FogISR_FogInscatteringColorSampler, OpaqueBasePass, 8, 31
OpaqueBasePass_Shared_FogISR_IntegratedLightScattering, OpaqueBasePass, 9, 32
OpaqueBasePass_Shared_FogISR_IntegratedLightScatteringSampler, OpaqueBasePass, 8, 33
OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs, OpaqueBasePass, 13, 34
OpaqueBasePass_Strata_OpaqueRoughRefractionTextureUAV, OpaqueBasePass, 13, 35
OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture, OpaqueBasePass, 9, 36
OpaqueBasePass_IndirectOcclusionTexture, OpaqueBasePass, 9, 37
OpaqueBasePass_ResolvedSceneDepthTexture, OpaqueBasePass, 9, 38
OpaqueBasePass_DBufferATexture, OpaqueBasePass, 9, 39
OpaqueBasePass_DBufferBTexture, OpaqueBasePass, 9, 40
OpaqueBasePass_DBufferCTexture, OpaqueBasePass, 9, 41
OpaqueBasePass_DBufferRenderMask, OpaqueBasePass, 9, 42
OpaqueBasePass_DBufferATextureSampler, OpaqueBasePass, 8, 43
OpaqueBasePass_DBufferBTextureSampler, OpaqueBasePass, 8, 44
OpaqueBasePass_DBufferCTextureSampler, OpaqueBasePass, 8, 45
OpaqueBasePass_PreIntegratedGFTexture, OpaqueBasePass, 5, 46
OpaqueBasePass_PreIntegratedGFSampler, OpaqueBasePass, 8, 47
OpaqueBasePass_EyeAdaptationBuffer, OpaqueBasePass, 16, 48
FogStruct_FogInscatteringColorCubemap, FogStruct, 5, 0
FogStruct_FogInscatteringColorSampler, FogStruct, 8, 1
FogStruct_IntegratedLightScattering, FogStruct, 9, 2
FogStruct_IntegratedLightScatteringSampler, FogStruct, 8, 3
ReflectionStruct_SkyLightCubemap, ReflectionStruct, 9, 0
ReflectionStruct_SkyLightCubemapSampler, ReflectionStruct, 8, 1
ReflectionStruct_SkyLightBlendDestinationCubemap, ReflectionStruct, 5, 2
ReflectionStruct_SkyLightBlendDestinationCubemapSampler, ReflectionStruct, 8, 3
ReflectionStruct_ReflectionCubemap, ReflectionStruct, 5, 4
ReflectionStruct_ReflectionCubemapSampler, ReflectionStruct, 8, 5
ReflectionStruct_PreIntegratedGF, ReflectionStruct, 5, 6
ReflectionStruct_PreIntegratedGFSampler, ReflectionStruct, 8, 7
ForwardLightData_DirectionalLightShadowmapAtlas, ForwardLightData, 9, 0
ForwardLightData_ShadowmapSampler, ForwardLightData, 8, 1
ForwardLightData_DirectionalLightStaticShadowmap, ForwardLightData, 5, 2
ForwardLightData_StaticShadowmapSampler, ForwardLightData, 8, 3
ForwardLightData_ForwardLocalLightBuffer, ForwardLightData, 16, 4
ForwardLightData_NumCulledLightsGrid, ForwardLightData, 16, 5
ForwardLightData_CulledLightDataGrid32Bit, ForwardLightData, 16, 6
ForwardLightData_CulledLightDataGrid16Bit, ForwardLightData, 16, 7
PlanarReflectionStruct_PlanarReflectionTexture, PlanarReflectionStruct, 5, 0
PlanarReflectionStruct_PlanarReflectionSampler, PlanarReflectionStruct, 8, 1
VirtualShadowMap_ProjectionData, VirtualShadowMap, 16, 0
VirtualShadowMap_PageTable, VirtualShadowMap, 16, 1
VirtualShadowMap_PageFlags, VirtualShadowMap, 16, 2
VirtualShadowMap_PageRectBounds, VirtualShadowMap, 16, 3
VirtualShadowMap_PhysicalPagePool, VirtualShadowMap, 9, 4
MobileBasePass_Fog_FogInscatteringColorCubemap, MobileBasePass, 5, 0
MobileBasePass_Fog_FogInscatteringColorSampler, MobileBasePass, 8, 1
MobileBasePass_Fog_IntegratedLightScattering, MobileBasePass, 9, 2
MobileBasePass_Fog_IntegratedLightScatteringSampler, MobileBasePass, 8, 3
MobileBasePass_Forward_DirectionalLightShadowmapAtlas, MobileBasePass, 9, 4
MobileBasePass_Forward_ShadowmapSampler, MobileBasePass, 8, 5
MobileBasePass_Forward_DirectionalLightStaticShadowmap, MobileBasePass, 5, 6
MobileBasePass_Forward_StaticShadowmapSampler, MobileBasePass, 8, 7
MobileBasePass_Forward_ForwardLocalLightBuffer, MobileBasePass, 16, 8
MobileBasePass_Forward_NumCulledLightsGrid, MobileBasePass, 16, 9
MobileBasePass_Forward_CulledLightDataGrid32Bit, MobileBasePass, 16, 10
MobileBasePass_Forward_CulledLightDataGrid16Bit, MobileBasePass, 16, 11
MobileBasePass_ForwardMMV_DirectionalLightShadowmapAtlas, MobileBasePass, 9, 12
MobileBasePass_ForwardMMV_ShadowmapSampler, MobileBasePass, 8, 13
MobileBasePass_ForwardMMV_DirectionalLightStaticShadowmap, MobileBasePass, 5, 14
MobileBasePass_ForwardMMV_StaticShadowmapSampler, MobileBasePass, 8, 15
MobileBasePass_ForwardMMV_ForwardLocalLightBuffer, MobileBasePass, 16, 16
MobileBasePass_ForwardMMV_NumCulledLightsGrid, MobileBasePass, 16, 17
MobileBasePass_ForwardMMV_CulledLightDataGrid32Bit, MobileBasePass, 16, 18
MobileBasePass_ForwardMMV_CulledLightDataGrid16Bit, MobileBasePass, 16, 19
MobileBasePass_PlanarReflection_PlanarReflectionTexture, MobileBasePass, 5, 20
MobileBasePass_PlanarReflection_PlanarReflectionSampler, MobileBasePass, 8, 21
MobileBasePass_SceneTextures_SceneColorTexture, MobileBasePass, 9, 22
MobileBasePass_SceneTextures_SceneColorTextureSampler, MobileBasePass, 8, 23
MobileBasePass_SceneTextures_SceneDepthTexture, MobileBasePass, 9, 24
MobileBasePass_SceneTextures_SceneDepthTextureSampler, MobileBasePass, 8, 25
MobileBasePass_SceneTextures_ScenePartialDepthTexture, MobileBasePass, 9, 26
MobileBasePass_SceneTextures_ScenePartialDepthTextureSampler, MobileBasePass, 8, 27
MobileBasePass_SceneTextures_CustomDepthTexture, MobileBasePass, 9, 28
MobileBasePass_SceneTextures_CustomDepthTextureSampler, MobileBasePass, 8, 29
MobileBasePass_SceneTextures_CustomStencilTexture, MobileBasePass, 12, 30
MobileBasePass_SceneTextures_SceneVelocityTexture, MobileBasePass, 9, 31
MobileBasePass_SceneTextures_SceneVelocityTextureSampler, MobileBasePass, 8, 32
MobileBasePass_SceneTextures_GBufferATexture, MobileBasePass, 9, 33
MobileBasePass_SceneTextures_GBufferBTexture, MobileBasePass, 9, 34
MobileBasePass_SceneTextures_GBufferCTexture, MobileBasePass, 9, 35
MobileBasePass_SceneTextures_GBufferDTexture, MobileBasePass, 9, 36
MobileBasePass_SceneTextures_SceneDepthAuxTexture, MobileBasePass, 9, 37
MobileBasePass_SceneTextures_LocalLightTextureA, MobileBasePass, 9, 38
MobileBasePass_SceneTextures_LocalLightTextureB, MobileBasePass, 9, 39
MobileBasePass_SceneTextures_GBufferATextureSampler, MobileBasePass, 8, 40
MobileBasePass_SceneTextures_GBufferBTextureSampler, MobileBasePass, 8, 41
MobileBasePass_SceneTextures_GBufferCTextureSampler, MobileBasePass, 8, 42
MobileBasePass_SceneTextures_GBufferDTextureSampler, MobileBasePass, 8, 43
MobileBasePass_SceneTextures_SceneDepthAuxTextureSampler, MobileBasePass, 8, 44
MobileBasePass_QuadOverdraw, MobileBasePass, 13, 45
MobileBasePass_ReflectionsParameters_SkyLightCubemap, MobileBasePass, 9, 46
MobileBasePass_ReflectionsParameters_SkyLightCubemapSampler, MobileBasePass, 8, 47
MobileBasePass_ReflectionsParameters_SkyLightBlendDestinationCubemap, MobileBasePass, 5, 48
MobileBasePass_ReflectionsParameters_SkyLightBlendDestinationCubemapSampler, MobileBasePass, 8, 49
MobileBasePass_ReflectionsParameters_ReflectionCubemap, MobileBasePass, 5, 50
MobileBasePass_ReflectionsParameters_ReflectionCubemapSampler, MobileBasePass, 8, 51
MobileBasePass_ReflectionsParameters_PreIntegratedGF, MobileBasePass, 5, 52
MobileBasePass_ReflectionsParameters_PreIntegratedGFSampler, MobileBasePass, 8, 53
MobileBasePass_PreIntegratedGFTexture, MobileBasePass, 5, 54
MobileBasePass_PreIntegratedGFSampler, MobileBasePass, 8, 55
MobileBasePass_EyeAdaptationBuffer, MobileBasePass, 16, 56
MobileBasePass_RWOcclusionBufferUAV, MobileBasePass, 17, 57
MobileBasePass_AmbientOcclusionTexture, MobileBasePass, 9, 58
MobileBasePass_AmbientOcclusionSampler, MobileBasePass, 8, 59
MobileBasePass_ScreenSpaceShadowMaskTexture, MobileBasePass, 9, 60
MobileBasePass_ScreenSpaceShadowMaskSampler, MobileBasePass, 8, 61
NiagaraSpriteVFLooseParameters_CutoutGeometry, NiagaraSpriteVFLooseParameters, 6, 0
NiagaraSpriteVFLooseParameters_NiagaraParticleDataFloat, NiagaraSpriteVFLooseParameters, 6, 1
NiagaraSpriteVFLooseParameters_NiagaraParticleDataHalf, NiagaraSpriteVFLooseParameters, 6, 2
NiagaraSpriteVFLooseParameters_SortedIndices, NiagaraSpriteVFLooseParameters, 6, 3
NiagaraSpriteVFLooseParameters_IndirectArgsBuffer, NiagaraSpriteVFLooseParameters, 6, 4
Material_Texture2D_0, Material, 5, 0
Material_Texture2D_0Sampler, Material, 8, 1
Material_Texture2D_1, Material, 5, 2
Material_Texture2D_1Sampler, Material, 8, 3
Material_Texture2D_2, Material, 5, 4
Material_Texture2D_2Sampler, Material, 8, 5
Material_Texture2D_3, Material, 5, 6
Material_Texture2D_3Sampler, Material, 8, 7
Material_Texture2D_4, Material, 5, 8
Material_Texture2D_4Sampler, Material, 8, 9
Material_Texture2D_5, Material, 5, 10
Material_Texture2D_5Sampler, Material, 8, 11
Material_Wrap_WorldGroupSettings, Material, 8, 12
Material_Clamp_WorldGroupSettings, Material, 8, 13
NULL, NULL, 0, 0
#endif /*END_RESOURCE_TABLES*/
#if 0 /*DIRECT COMPILE*/
-directcompile -format=PCD3D_SM6 -entry=Main -shaderPlatformName=PCD3D_SM6 -vs C:/Escritorio/Semestre Ene - Jun 2025/Escenarios de Videojuegos/MyProject2/Saved/ShaderDebugInfo/PCD3D_SM6/MM_Foliage_GroundCover_80a390c78949b73b/Default/FNiagaraSpriteVertexFactory/TBasePassVSFCachedPointIndirectLightingPolicy/0/BasePassVertexShader.usf -cflags=8589938688 -nocrashreports
#endif /*DIRECT COMPILE*/
